CREATE PROC [EDAA_ETL].[PROC_FCT_DLY_STR_ITMSKU_INV_HST_TABLELOAD] AS


BEGIN TRY

/*DATAMART AUDITING VARIABLES*/
DECLARE @NEW_AUD_SKY BIGINT
DECLARE @NBR_OF_RW_ISRT INT
DECLARE @NBR_OF_RW_UDT INT
DECLARE @EXEC_LYR VARCHAR(255)
DECLARE @EXEC_JOB VARCHAR(500)
DECLARE @SRC_ENTY VARCHAR(500)
DECLARE @TGT_ENTY VARCHAR(500)
/*AUDIT LOG START*/
EXEC EDAA_CNTL.SP_AUDIT_DATA_LOAD_START
 @EXEC_LYR  = 'EDAA_DW'
,@EXEC_JOB  = 'PROC_FCT_DLY_STR_ITMSKU_INV_HST_TABLELOAD'
,@SRC_ENTY  = 'UT_UPC_DLY_INV_HST'
,@TGT_ENTY = 'FCT_DLY_STR_ITMSKU_INV_HST'
,@NEW_AUD_SKY = @NEW_AUD_SKY OUTPUT


DECLARE @NBR_OF_RW_ISRT_TOTAL INT = 0,  @NBR_OF_RW_UDT_TOTAL INT =0


print('----starting DW load----');



;with incr_data as (
SELECT	CAST(REPLACE(cast(A.SU_CREATE_DT as date),'-','') AS INT)	AS DT_SK,
		ISNULL(PROD_HIST_SK,-1)					AS PROD_HIST_SK,
		ISNULL(GEO_HIST_SK, -1) 				AS GEO_HIST_SK,
		A.SU_UNIT_ID							AS STR_ID,
		A.SU_UPC_ID								AS ITM_SKU,
		sum(cast(A.SU_PROD_MJR_PFRM_COST_AMT as decimal(11,4)))			AS INV_EACH_AMT,
		sum(cast(A.SU_UPC_TOT_FNC_CHRG_AMT as decimal(11,4)))				AS INV_FNC_CHRG_AMT,
		sum(cast(A.SU_UPC_TOT_FNC_CRED_AMT as decimal(11,4)))				AS INV_FNC_CR_AMT,
		sum(cast(A.SU_UPC_TOT_STOR_CHRG_AMT as decimal(11,4)))				AS INV_STRGE_CHRG_AMT,
		sum(cast(A.SU_UPC_TOT_FRGHT_AMT as decimal(11,4)))					AS INV_FRT_AMT,
		sum(cast(A.SU_UPC_TOT_DC_HNDL_AMT as decimal(11,4)))				AS INV_DIST_CNTR_HNDL_AMT,
		sum(cast(A.SU_STOR_TOT_UPC_INV_AMT as decimal(11,4)))				AS INV_AMT,
		sum(cast(A.SU_STOR_BOH_DCML_QTY as decimal(11,4)))					AS INV_QTY,
		CASE WHEN A.SU_CLRNCE_FLAG='Y' THEN 0 WHEN A.SU_CLRNCE_FLAG='N' THEN 1 ELSE NULL END	AS INV_CLRNC_IND,
		@NEW_AUD_SKY							AS AUD_INS_SK,
		NULL									AS AUD_UPD_SK

FROM EDAA_STG.UT_UPC_DLY_INV_HST AS A

LEFT OUTER JOIN (SELECT GEO_HIST_SK,
						STR_ID,
						VLD_FRM,
						VLD_TO
			FROM 		EDAA_DW.DIM_GEO
			--WHERE 	IS_CURR<>0

					) AS GEO
	ON GEO.STR_ID = A.SU_UNIT_ID
	AND  cast(A.SU_CREATE_DT as date) BETWEEN GEO.VLD_FRM AND ISNULL(GEO.VLD_TO, CAST('2099-01-01' AS DATE))

LEFT OUTER JOIN (SELECT PROD_HIST_SK,
						ITM_SKU,
						PROD_SK,
						VLD_FRM,
						VLD_TO
			FROM 		EDAA_DW.DIM_PROD
			--WHERE 	IS_CURR<>0

					) AS P
	ON  P.ITM_SKU = A.SU_UPC_ID
	AND  cast(A.SU_CREATE_DT as date) BETWEEN P.VLD_FRM AND ISNULL(P.VLD_TO, CAST('2099-01-01' AS DATE))

GROUP BY
		CAST(REPLACE(cast(A.SU_CREATE_DT as date),'-','') AS INT)	,
		ISNULL(PROD_HIST_SK,-1)				,
		ISNULL(GEO_HIST_SK, -1) 			,
		A.SU_UNIT_ID						,
		A.SU_UPC_ID							,
		CASE WHEN A.SU_CLRNCE_FLAG='Y' THEN 0 WHEN A.SU_CLRNCE_FLAG='N' THEN 1 ELSE NULL END
		)
UPDATE TGT
SET  TGT.PROD_HIST_SK=SRC.PROD_HIST_SK
	,TGT.GEO_HIST_SK=SRC.GEO_HIST_SK
	,TGT.INV_EACH_AMT=SRC.INV_EACH_AMT
	,TGT.INV_FNC_CHRG_AMT=SRC.INV_FNC_CHRG_AMT
	,TGT.INV_FNC_CR_AMT=SRC.INV_FNC_CR_AMT
	,TGT.INV_STRGE_CHRG_AMT=SRC.INV_STRGE_CHRG_AMT
	,TGT.INV_FRT_AMT=SRC.INV_FRT_AMT
	,TGT.INV_DIST_CNTR_HNDL_AMT=SRC.INV_DIST_CNTR_HNDL_AMT
	,TGT.INV_AMT=SRC.INV_AMT
	,TGT.INV_QTY=SRC.INV_QTY
	,TGT.AUD_UPD_SK=@NEW_AUD_SKY
	  FROM EDAA_DW.FCT_DLY_STR_ITMSKU_INV_HST AS TGT
      INNER JOIN incr_data AS SRC
      ON
	  TGT.ITM_SKU = SRC.ITM_SKU AND
	  TGT.STR_ID = SRC.STR_ID AND
      TGT.DT_SK = SRC.DT_SK AND
	  TGT.INV_CLRNC_IND = SRC.INV_CLRNC_IND
	  WHERE
	 TGT.PROD_HIST_SK <> SRC.PROD_HIST_SK
	or TGT.GEO_HIST_SK <> SRC.GEO_HIST_SK
	or TGT.INV_EACH_AMT <> SRC.INV_EACH_AMT
	or TGT.INV_FNC_CHRG_AMT <> SRC.INV_FNC_CHRG_AMT
	or TGT.INV_FNC_CR_AMT <> SRC.INV_FNC_CR_AMT
	or TGT.INV_STRGE_CHRG_AMT <> SRC.INV_STRGE_CHRG_AMT
	or TGT.INV_FRT_AMT <> SRC.INV_FRT_AMT
	or TGT.INV_DIST_CNTR_HNDL_AMT <> SRC.INV_DIST_CNTR_HNDL_AMT
	or TGT.INV_AMT <> SRC.INV_AMT
	or TGT.INV_QTY <> SRC.INV_QTY


;with incr_data as (

SELECT	CAST(REPLACE(cast(A.SU_CREATE_DT as date),'-','') AS INT)	AS DT_SK,
		ISNULL(PROD_HIST_SK,-1)					AS PROD_HIST_SK,
		ISNULL(GEO_HIST_SK, -1) 				AS GEO_HIST_SK,
		A.SU_UNIT_ID							AS STR_ID,
		A.SU_UPC_ID								AS ITM_SKU,
		sum(cast(A.SU_PROD_MJR_PFRM_COST_AMT as decimal(11,4)))			AS INV_EACH_AMT,
		sum(cast(A.SU_UPC_TOT_FNC_CHRG_AMT as decimal(11,4)))				AS INV_FNC_CHRG_AMT,
		sum(cast(A.SU_UPC_TOT_FNC_CRED_AMT as decimal(11,4)))				AS INV_FNC_CR_AMT,
		sum(cast(A.SU_UPC_TOT_STOR_CHRG_AMT as decimal(11,4)))				AS INV_STRGE_CHRG_AMT,
		sum(cast(A.SU_UPC_TOT_FRGHT_AMT as decimal(11,4)))					AS INV_FRT_AMT,
		sum(cast(A.SU_UPC_TOT_DC_HNDL_AMT as decimal(11,4)))				AS INV_DIST_CNTR_HNDL_AMT,
		sum(cast(A.SU_STOR_TOT_UPC_INV_AMT as decimal(11,4)))				AS INV_AMT,
		sum(cast(A.SU_STOR_BOH_DCML_QTY as decimal(11,4)))					AS INV_QTY,
		CASE WHEN A.SU_CLRNCE_FLAG='Y' THEN 0 WHEN A.SU_CLRNCE_FLAG='N' THEN 1 ELSE NULL END	AS INV_CLRNC_IND,
		@NEW_AUD_SKY							AS AUD_INS_SK,
		NULL									AS AUD_UPD_SK

FROM EDAA_STG.UT_UPC_DLY_INV_HST AS A

LEFT OUTER JOIN (SELECT GEO_HIST_SK,
						STR_ID,
						VLD_FRM,
						VLD_TO
			FROM 		EDAA_DW.DIM_GEO
			--WHERE 	IS_CURR<>0

					) AS GEO
	ON GEO.STR_ID = A.SU_UNIT_ID
	AND  cast(A.SU_CREATE_DT as date) BETWEEN GEO.VLD_FRM AND ISNULL(GEO.VLD_TO, CAST('2099-01-01' AS DATE))

LEFT OUTER JOIN (SELECT PROD_HIST_SK,
						ITM_SKU,
						PROD_SK,
						VLD_FRM,
						VLD_TO
			FROM 		EDAA_DW.DIM_PROD
			--WHERE 	IS_CURR<>0

					) AS P
	ON  P.ITM_SKU = A.SU_UPC_ID
	AND  cast(A.SU_CREATE_DT as date) BETWEEN P.VLD_FRM AND ISNULL(P.VLD_TO, CAST('2099-01-01' AS DATE))

GROUP BY
		CAST(REPLACE(cast(A.SU_CREATE_DT as date),'-','') AS INT)	,
		ISNULL(PROD_HIST_SK,-1)				,
		ISNULL(GEO_HIST_SK, -1) 			,
		A.SU_UNIT_ID						,
		A.SU_UPC_ID							,
		CASE WHEN A.SU_CLRNCE_FLAG='Y' THEN 0 WHEN A.SU_CLRNCE_FLAG='N' THEN 1 ELSE NULL END
		)

INSERT INTO EDAA_DW.FCT_DLY_STR_ITMSKU_INV_HST
select
DT_SK,
PROD_HIST_SK,
GEO_HIST_SK,
STR_ID,
ITM_SKU,
INV_EACH_AMT,
INV_FNC_CHRG_AMT,
INV_FNC_CR_AMT,
INV_STRGE_CHRG_AMT,
INV_FRT_AMT,
INV_DIST_CNTR_HNDL_AMT,
INV_AMT,
INV_QTY,
INV_CLRNC_IND	,
@NEW_AUD_SKY,
NULL
from incr_data AS SRC
WHERE NOT EXISTS
(
    SELECT 1 FROM EDAA_DW.FCT_DLY_STR_ITMSKU_INV_HST
	WHERE
	SRC.ITM_SKU = ITM_SKU AND
	SRC.STR_ID = STR_ID AND
    SRC.DT_SK = DT_SK AND
	SRC.INV_CLRNC_IND = INV_CLRNC_IND
  )
;

/* delete older than 6 months records from datamart */
delete FROM EDAA_DW.FCT_DLY_STR_ITMSKU_INV_HST where dt_sk < format(dateadd(d, -180, getdate()),'yyyyMMdd') ;

print('---DW load complete---');



BEGIN

SELECT @NBR_OF_RW_ISRT = COUNT(1)  FROM EDAA_DW.FCT_DLY_STR_ITMSKU_INV_HST WHERE AUD_INS_SK = @NEW_AUD_SKY
SELECT @NBR_OF_RW_UDT  = COUNT(1)  FROM EDAA_DW.FCT_DLY_STR_ITMSKU_INV_HST WHERE AUD_UPD_SK = @NEW_AUD_SKY

SET @NBR_OF_RW_UDT_TOTAL = @NBR_OF_RW_UDT_TOTAL + @NBR_OF_RW_UDT
SET @NBR_OF_RW_ISRT_TOTAL = @NBR_OF_RW_ISRT_TOTAL + @NBR_OF_RW_ISRT



END



/*AUDIT LOG END*/
EXEC [EDAA_CNTL].[SP_AUDIT_DATA_LOAD_END]  @AUD_SKY = @NEW_AUD_SKY, @NBR_OF_RW_ISRT = @NBR_OF_RW_ISRT_TOTAL, @NBR_OF_RW_UDT  = @NBR_OF_RW_UDT_TOTAL


END TRY

BEGIN CATCH
DECLARE @ERROR_PROCEDURE_NAME AS VARCHAR(60) = '[EDAA_ETL].[PROC_FCT_DLY_STR_ITMSKU_INV_HST_TABLELOAD]'
DECLARE @ERROR_LINE AS INT;
DECLARE @ERROR_MSG AS NVARCHAR(max);

 SELECT
      @ERROR_LINE =  ERROR_NUMBER()
       ,@ERROR_MSG = ERROR_MESSAGE();
--------- Log execution error ----------



EXEC EDAA_CNTL.SP_LOG_AUD_ERR
@AUD_SKY = @NEW_AUD_SKY,
@ERROR_PROCEDURE_NAME = @ERROR_PROCEDURE_NAME,
@ERROR_LINE = @ERROR_LINE,
@ERROR_MSG = @ERROR_MSG;

-- Detect the change


   THROW;




END CATCH
