CREATE PROC [EDAA_ETL].[PROC_FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_DLY] AS

BEGIN
  -- exec [EDAA_ETL].[PROC_FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_DLY]

  BEGIN TRY
    /*DATAMART AUDITING VARIABLES*/
    DECLARE @NEW_AUD_SKY bigint
    DECLARE @NBR_OF_RW_ISRT bigint
    DECLARE @NBR_OF_RW_UDT bigint
    DECLARE @EXEC_LYR varchar(255)
    DECLARE @EXEC_JOB varchar(500)
    DECLARE @SRC_ENTY varchar(500)
    DECLARE @TGT_ENTY varchar(500)


    /*AUDIT LOG START*/
    EXEC EDAA_CNTL.SP_AUDIT_DATA_LOAD_START @EXEC_LYR = 'EDAA_DW',
                                            @EXEC_JOB = 'EDAA_ETL.PROC_FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_DLY',
                                            @SRC_ENTY = 'FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC',
                                            @TGT_ENTY = 'FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_DLY',
                                            @NEW_AUD_SKY = @NEW_AUD_SKY OUTPUT


    DECLARE @DATETIME DATETIME
    SET @DATETIME = (SELECT
      MAX(UPDATEDTIMESTAMP)
    FROM [EDAA_STG].[FCT_SL_WTRMARK] WHERE TABLE_NME ='FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC' );

	--TRUNCATE TABLE IF EXISTS

      TRUNCATE TABLE EDAA_STG.TEMP_FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_DLY

    --LOAD ALL DATA  TO TEMP TABLE
    INSERT INTO EDAA_STG.TEMP_FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_DLY
	(
	  [ROW_ID_VAL],
      [PRE_DEF_ID],
      [DT_VAL],
      [ITM_SKU],
      [STR_ID],
      [INV_AMT_TY_FSC],
      [INV_QTY_TY_FSC],
      [INV_AMT_LY_FSC],
      [INV_QTY_LY_FSC],
      [INV_AMT_LY_HLDY],
      [INV_QTY_LY_HLDY],
      [INV_AMT_LY_CAL],
      [INV_QTY_LY_CAL] ,
	  UPDATEDTIMESTAMP
	  )
	  SELECT
      dtsel.ROW_ID_VAL,
      dtsel.PRE_DEF_ID,
      CONVERT(date, CONVERT(varchar(10), dtsel.MAX_DT, 120)) AS DT_VAL,
      A.[ITM_SKU],
      A.[STR_ID],
      A.[INV_AMT_TY_FSC],
      A.[INV_QTY_TY_FSC],
      A.[INV_AMT_LY_FSC],
      A.[INV_QTY_LY_FSC],
      A.[INV_AMT_LY_HLDY],
      A.[INV_QTY_LY_HLDY],
      A.[INV_AMT_LY_CAL],
      A.[INV_QTY_LY_CAL] ,
	  A.UPDATEDTIMESTAMP

    FROM EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC A
	INNER JOIN
         (SELECT
           *,
           ROW_NUMBER() OVER (ORDER BY PRE_DEF_ID) AS ROW_ID_VAL
         FROM EDAA_PRES.V_DIM_PRE_DEF_CAL_TYP
         WHERE AGG_TYP = 'DLY') dtsel

    ON A.DT_SK >= dtsel.MIN_DT
    AND A.DT_SK <= dtsel.MAX_DT
    AND A.UPDATEDTIMESTAMP >= @DATETIME

	  --DELETE IF EXISTS IN DLY TABLE
    DELETE FROM T
      FROM EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_DLY T
      JOIN EDAA_STG.TEMP_FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_DLY S
        ON T.PRE_DEF_ID = S.PRE_DEF_ID
        AND T.ITM_SKU = S.ITM_SKU
        AND T.STR_ID = S.STR_ID
    WHERE T.PRE_DEF_ID IS NOT NULL
      AND T.STR_ID IS NOT NULL
      AND T.ITM_SKU IS NOT NULL

    --INSERT DATA IF NOT EXISTS IN PRES TABLE
    INSERT INTO EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_DLY
	(
	  [ROW_ID_VAL]
    , [PRE_DEF_ID]
    , [DT_VAL]
    , [ITM_SKU]
    , [STR_ID]
    , [INV_AMT_TY_FSC]
    , [INV_QTY_TY_FSC]
    , [INV_AMT_LY_FSC]
    , [INV_QTY_LY_FSC]
    , [INV_AMT_LY_HLDY]
    , [INV_QTY_LY_HLDY]
    , [INV_AMT_LY_CAL]
    , [INV_QTY_LY_CAL]
    , [UPDATEDTIMESTAMP]
	)
      SELECT
        [ROW_ID_VAL],
        [PRE_DEF_ID],
        [DT_VAL],
        [ITM_SKU],
        [STR_ID],
        [INV_AMT_TY_FSC],
        [INV_QTY_TY_FSC],
        [INV_AMT_LY_FSC],
        [INV_QTY_LY_FSC],
        [INV_AMT_LY_HLDY],
        [INV_QTY_LY_HLDY],
        [INV_AMT_LY_CAL],
        [INV_QTY_LY_CAL],
        [UPDATEDTIMESTAMP]
      FROM EDAA_STG.TEMP_FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_DLY A


    ---Delete more than 42 days data
    DELETE FROM EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_DLY
    WHERE DT_VAL < GETDATE() - 43

    --UPDATE STATSTICS
    UPDATE STATISTICS EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_DLY;

	UPDATE [EDAA_STG].[FCT_SL_WTRMARK]
			SET UPDATEDTIMESTAMP =  (SELECT MAX(UPDATEDTIMESTAMP)
										FROM  EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC)
	WHERE TABLE_NME = 'FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC'

  END TRY

  BEGIN CATCH
    DECLARE @ERROR_PROCEDURE_NAME AS varchar(60) = 'EDAA_ETL.PROC_FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_DLY'
    DECLARE @ERROR_LINE AS int;
    DECLARE @ERROR_MSG AS nvarchar(max);

    SELECT
      @ERROR_LINE = ERROR_NUMBER(),
      @ERROR_MSG = ERROR_MESSAGE();
    --------- Log execution error ----------



    EXEC EDAA_CNTL.SP_LOG_AUD_ERR @AUD_SKY = @NEW_AUD_SKY,
                                  @ERROR_PROCEDURE_NAME = @ERROR_PROCEDURE_NAME,
                                  @ERROR_LINE = @ERROR_LINE,
                                  @ERROR_MSG = @ERROR_MSG;

    -- DETECT THE CHANGE

    THROW;


  END CATCH
END
