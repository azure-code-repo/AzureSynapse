CREATE PROC [EDAA_ETL].[SP_DW_FCT_HRLY_PRCM_FUEL_PCHG_DTL_TABLELOAD] AS

/*
 =============================================
 Author:        Meghana Chanthati
 Create date:   28-Nov-2022
 Description:   Stored proc to load data from EDAA_STG.PRCM_FUEL_PCHG_DTL to FCT_HRLY_PRCM_FUEL_PCHG_DTL table on EDAA_DW
 =============================================
 Change History
 28-Nov-2022   Meghana Chanthati      Initial version
 */

BEGIN TRY

SET NOCOUNT ON
SET XACT_ABORT ON

/*Datamart Auditing variables*/
DECLARE @NEW_AUD_SKY BIGINT
DECLARE @NBR_OF_RW_ISRT INT
DECLARE @NBR_OF_RW_UDT INT
DECLARE @EXEC_LYR VARCHAR(255)
DECLARE @EXEC_JOB VARCHAR(500)
DECLARE @SRC_ENTY VARCHAR(500)
DECLARE @TGT_ENTY VARCHAR(500)

/*Audit Log Start*/
EXEC EDAA_CNTL.SP_AUDIT_DATA_LOAD_START
 @EXEC_LYR  = 'EDAA_DW'
,@EXEC_JOB  = 'SP_DW_FCT_HRLY_PRCM_FUEL_PCHG_DTL_TABLELOAD'
,@SRC_ENTY  = 'PRCM_FUEL_PCHG_DTL'
,@TGT_ENTY = 'FCT_HRLY_PRCM_FUEL_PCHG_DTL'
,@NEW_AUD_SKY = @NEW_AUD_SKY OUTPUT


---------update data in target table----------
UPDATE EDAA_DW.FCT_HRLY_PRCM_FUEL_PCHG_DTL
SET
    STR_ID = T1.STR_ID,
	CM_STE_STR_ID = T1.CM_STE_STR_ID,
    CM_STE_STR_NM = T1.CM_STE_STR_NM,
    GLBL_P_TYP_ID = T1.GLBL_P_TYP_ID,
    GLBL_P_TYP_NM = T1.GLBL_P_TYP_NM,
	PRCM_AM = T1.PRCM_AM,
    PR_EFF_TMS = T1.PR_EFF_TMS,
    PR_CRT_TMS = T1.PR_CRT_TMS,
    PR_UDT_TMS = T1.PR_UDT_TMS,
	CM_STE_L1_AD = T1.CM_STE_L1_AD,
    CM_STE_L2_AD = T1.CM_STE_L2_AD,
    CM_STE_L3_AD = T1.CM_STE_L3_AD,
    CM_STE_POL_ZN_ID = T1.CM_STE_POL_ZN_ID,
    CM_STE_LTTD_ID = T1.CM_STE_LTTD_ID,
    CM_STE_LNGTD_ID = T1.CM_STE_LNGTD_ID,
    DIST_TO_NEAR_OWN_STE_QTY = T1.DIST_TO_NEAR_OWN_STE_QTY,
	PR_ENTY_ID = T1.PR_ENTY_ID,
    P_CURR_SRC_TX = T1.P_CURR_SRC_TX,
    PR_SRC_TX = T1.PR_SRC_TX,
    OWN_STE_ENTY_ID = T1.OWN_STE_ENTY_ID,
    STR_NM = T1.STR_NM,
    OWN_STE_L1_AD = T1.OWN_STE_L1_AD,
    OWN_STE_L2_AD = T1.OWN_STE_L2_AD,
    OWN_STE_L3_AD = T1.OWN_STE_L3_AD,
    OWN_STE_POL_ZN_ID = T1.OWN_STE_POL_ZN_ID,
    OWN_STE_LTTD_ID = T1.OWN_STE_LTTD_ID,
    OWN_STE_LNGTD_ID = T1.OWN_STE_LNGTD_ID,
    CM_STE_ENTY_ID = T1.CM_STE_ENTY_ID,
    AUD_INS_SK = NULL,
    AUD_UPD_SK = @NEW_AUD_SKY
FROM EDAA_STG.PRCM_FUEL_PCHG_DTL T1
INNER JOIN EDAA_DW.FCT_HRLY_PRCM_FUEL_PCHG_DTL T2
	ON
       T1.OWN_STE_ENTY_ID = T2.OWN_STE_ENTY_ID
   AND T1.CM_STE_ENTY_ID = T2.CM_STE_ENTY_ID
   AND T1.GLBL_P_TYP_ID = T2.GLBL_P_TYP_ID

--------insert new data in target table-----------
INSERT INTO EDAA_DW.FCT_HRLY_PRCM_FUEL_PCHG_DTL
SELECT DISTINCT
       STR_ID,
	   CM_STE_STR_ID,
       CM_STE_STR_NM,
	   GLBL_P_TYP_ID,
       GLBL_P_TYP_NM,
	   PRCM_AM,
       PR_EFF_TMS,
       PR_CRT_TMS,
       PR_UDT_TMS,
	   CM_STE_L1_AD,
       CM_STE_L2_AD,
       CM_STE_L3_AD,
       CM_STE_POL_ZN_ID,
       CM_STE_LTTD_ID,
       CM_STE_LNGTD_ID,
       DIST_TO_NEAR_OWN_STE_QTY,
	   PR_ENTY_ID,
       P_CURR_SRC_TX,
       PR_SRC_TX,
       OWN_STE_ENTY_ID,
       STR_NM,
       OWN_STE_L1_AD,
       OWN_STE_L2_AD,
       OWN_STE_L3_AD,
       OWN_STE_POL_ZN_ID,
       OWN_STE_LTTD_ID,
       OWN_STE_LNGTD_ID,
       CM_STE_ENTY_ID,
       @NEW_AUD_SKY AS AUD_INS_SK,
	   NULL AS AUD_UPD_SK
FROM EDAA_STG.PRCM_FUEL_PCHG_DTL
WHERE CONCAT(OWN_STE_ENTY_ID, '|',CM_STE_ENTY_ID, '|',GLBL_P_TYP_ID)
NOT IN
(SELECT CONCAT(OWN_STE_ENTY_ID, '|',CM_STE_ENTY_ID, '|',GLBL_P_TYP_ID) FROM EDAA_DW.FCT_HRLY_PRCM_FUEL_PCHG_DTL)

BEGIN
SELECT @NBR_OF_RW_ISRT = COUNT(1)  FROM [EDAA_DW].[FCT_HRLY_PRCM_FUEL_PCHG_DTL] WHERE AUD_INS_SK = @NEW_AUD_SKY
SELECT @NBR_OF_RW_UDT  = COUNT(1)  FROM [EDAA_DW].[FCT_HRLY_PRCM_FUEL_PCHG_DTL] WHERE AUD_UPD_SK = @NEW_AUD_SKY

END

/*Audit Log End*/
EXEC EDAA_CNTL.SP_AUDIT_DATA_LOAD_END @AUD_SKY = @NEW_AUD_SKY, @NBR_OF_RW_ISRT = @NBR_OF_RW_ISRT, @NBR_OF_RW_UDT  = @NBR_OF_RW_UDT

END TRY

BEGIN CATCH
DECLARE @ERROR_PROCEDURE_NAME AS VARCHAR(60) = 'SP_DW_FCT_HRLY_PRCM_FUEL_PCHG_DTL_TABLELOAD'
DECLARE @ERROR_LINE AS INT;
DECLARE @ERROR_MSG AS NVARCHAR(max);

 SELECT
      @ERROR_LINE =  ERROR_NUMBER()
       ,@ERROR_MSG = ERROR_MESSAGE();
--------- Log execution error ----------



EXEC EDAA_CNTL.SP_LOG_AUD_ERR
@AUD_SKY = @NEW_AUD_SKY,
@ERROR_PROCEDURE_NAME = @ERROR_PROCEDURE_NAME,
@ERROR_LINE = @ERROR_LINE,
@ERROR_MSG = @ERROR_MSG;

-- Detect the change
------- stored proc execution should fail. The processing of the presentation layer

   THROW;




END CATCH
