CREATE PROC [EDAA_ETL].[PROC_FCT_DLY_ITM_SKU_STR_INV_AGG_LOAD] AS

  BEGIN
      --exec [EDAA_ETL].[PROC_FCT_DLY_ITM_SKU_STR_INV_AGG_LOAD]
	  BEGIN TRY

		/*Datamart Auditing variables*/
		DECLARE @NEW_AUD_SKY bigint
		DECLARE @NBR_OF_RW_ISRT bigint
		DECLARE @NBR_OF_RW_UDT bigint
		DECLARE @EXEC_LYR varchar(255)
		DECLARE @EXEC_JOB varchar(500)
		DECLARE @SRC_ENTY varchar(500)
		DECLARE @TGT_ENTY varchar(500)
		DECLARE @ERROR_PROCEDURE_NAME AS varchar(60) = 'EDAA_ETL.PROC_FCT_DLY_ITM_SKU_STR_INV_AGG_LOAD'
		DECLARE @ERROR_LINE AS int
		DECLARE @ERROR_MSG AS nvarchar(max)
		DECLARE @DT_LST_WEEKEND AS INT
        SET @DT_LST_WEEKEND = CAST(REPLACE(CONVERT(date, DATEADD(DAY, DATEDIFF(DAY, 5, GETDATE()) / 7 * 7, 5)),'-','') AS INT)

		/*Audit Log Start*/
		EXEC EDAA_CNTL.SP_AUDIT_DATA_LOAD_START @EXEC_LYR = 'EDAA_PRES',
												@EXEC_JOB = 'PROC_FCT_DLY_ITM_SKU_STR_INV_AGG_LOAD',
												@SRC_ENTY = 'FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC',
												@TGT_ENTY = 'FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_AGG',
												@NEW_AUD_SKY = @NEW_AUD_SKY OUTPUT;

		--TRUNCATE TABLE
		TRUNCATE TABLE [EDAA_PRES].[FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_AGG]

		;WITH CTE1
		AS (
		     SELECT
				STR_ID,
				ITM_SKU,
				PRE_DEF_ID,
				(SUM(Inv.INV_AMT_TY_FSC)/ COUNT(DT_SK))AS AVG_INV_AMT_TY_FSC,
				(SUM(Inv.INV_QTY_TY_FSC) / COUNT(DT_SK)) AS AVG_INV_QTY_TY_FSC,
				(SUM(Inv.INV_AMT_LY_FSC) / COUNT(LY_DT_SK))AS AVG_INV_AMT_LY_FSC,
				(SUM(Inv.INV_QTY_LY_FSC) / COUNT(LY_DT_SK)) AS AVG_INV_QTY_LY_FSC,
				(SUM(Inv.INV_AMT_LY_HLDY)/ COUNT(LY_DT_SK_HLDY)) AS AVG_INV_AMT_LY_HLDY,
				(SUM(Inv.INV_QTY_LY_HLDY)/ COUNT(LY_DT_SK_HLDY))AS AVG_INV_QTY_LY_HLDY,
				(SUM(Inv.INV_AMT_LY_CAL)/ COUNT(LY_DT_SK_CAL))AS AVG_INV_AMT_LY_CAL,
				(SUM(Inv.INV_QTY_LY_CAL)/ COUNT(LY_DT_SK_CAL))AS AVG_INV_QTY_LY_CAL

				FROM EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC as Inv inner join EDAA_PRES.V_DIM_PRE_DEF_CAL_TYP as CalTyp
					ON  Inv.DT_SK >= CalTyp.MIN_DT
					AND Inv.DT_SK <= CalTyp.MAX_DT
					AND CalTyp.PRE_DEF_NM = 'Last Week'
					--AND Inv.LY_DT_SK_HLDY <= CalTyp.MAX_DT
					AND CalTyp.AGG_TYP = 'AGG'
					GROUP BY
					STR_ID,
					ITM_SKU,
					PRE_DEF_ID

UNION

           SELECT
				STR_ID,
				ITM_SKU,
				PRE_DEF_ID,
				(SUM(Inv.INV_AMT_TY_FSC)/ COUNT(DT_SK))AS AVG_INV_AMT_TY_FSC,
				(SUM(Inv.INV_QTY_TY_FSC) / COUNT(DT_SK)) AS AVG_INV_QTY_TY_FSC,
				(SUM(Inv.INV_AMT_LY_FSC) / COUNT(LY_DT_SK))AS AVG_INV_AMT_LY_FSC,
				(SUM(Inv.INV_QTY_LY_FSC) / COUNT(LY_DT_SK)) AS AVG_INV_QTY_LY_FSC,
				(SUM(Inv.INV_AMT_LY_HLDY)/ COUNT(LY_DT_SK_HLDY)) AS AVG_INV_AMT_LY_HLDY,
				(SUM(Inv.INV_QTY_LY_HLDY)/ COUNT(LY_DT_SK_HLDY))AS AVG_INV_QTY_LY_HLDY,
				(SUM(Inv.INV_AMT_LY_CAL)/ COUNT(LY_DT_SK_CAL))AS AVG_INV_AMT_LY_CAL,
				(SUM(Inv.INV_QTY_LY_CAL)/ COUNT(LY_DT_SK_CAL))AS AVG_INV_QTY_LY_CAL

				FROM EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC as Inv
				inner join EDAA_PRES.V_DIM_PRE_DEF_CAL_TYP as CalTyp
					ON  Inv.DT_SK >= CalTyp.MIN_DT
					AND Inv.DT_SK <= CalTyp.MAX_DT
					AND Inv.DT_SK <= FORMAT(GETDATE(),'yyyyMMdd')
					AND CalTyp.PRE_DEF_NM = 'FYTD'
					--AND Inv.LY_DT_SK_HLDY <= CalTyp.MAX_DT
					AND CalTyp.AGG_TYP = 'AGG'
					GROUP BY
					STR_ID,
					ITM_SKU,
					PRE_DEF_ID

UNION

           SELECT
				STR_ID,
				ITM_SKU,
				PRE_DEF_ID,
				(SUM(Inv.INV_AMT_TY_FSC)/ COUNT(DT_SK))AS AVG_INV_AMT_TY_FSC,
				(SUM(Inv.INV_QTY_TY_FSC) / COUNT(DT_SK)) AS AVG_INV_QTY_TY_FSC,
				(SUM(Inv.INV_AMT_LY_FSC) / COUNT(LY_DT_SK))AS AVG_INV_AMT_LY_FSC,
				(SUM(Inv.INV_QTY_LY_FSC) / COUNT(LY_DT_SK)) AS AVG_INV_QTY_LY_FSC,
				(SUM(Inv.INV_AMT_LY_HLDY)/ COUNT(LY_DT_SK_HLDY)) AS AVG_INV_AMT_LY_HLDY,
				(SUM(Inv.INV_QTY_LY_HLDY)/ COUNT(LY_DT_SK_HLDY))AS AVG_INV_QTY_LY_HLDY,
				(SUM(Inv.INV_AMT_LY_CAL)/ COUNT(LY_DT_SK_CAL))AS AVG_INV_AMT_LY_CAL,
				(SUM(Inv.INV_QTY_LY_CAL)/ COUNT(LY_DT_SK_CAL))AS AVG_INV_QTY_LY_CAL

				FROM EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC as Inv
				inner join EDAA_PRES.V_DIM_PRE_DEF_CAL_TYP as CalTyp
					ON  Inv.DT_SK >= CalTyp.MIN_DT
					AND Inv.DT_SK <= CalTyp.MAX_DT
					AND Inv.DT_SK <= FORMAT(GETDATE(),'yyyyMMdd')
					AND CalTyp.PRE_DEF_NM = 'QTD'
					--AND Inv.LY_DT_SK_HLDY <= CalTyp.MAX_DT
					AND CalTyp.AGG_TYP = 'AGG'
					GROUP BY
					STR_ID,
					ITM_SKU,
					PRE_DEF_ID

UNION

           SELECT
				STR_ID,
				ITM_SKU,
				PRE_DEF_ID,
				(SUM(Inv.INV_AMT_TY_FSC)/ COUNT(DT_SK))AS AVG_INV_AMT_TY_FSC,
				(SUM(Inv.INV_QTY_TY_FSC) / COUNT(DT_SK)) AS AVG_INV_QTY_TY_FSC,
				(SUM(Inv.INV_AMT_LY_FSC) / COUNT(LY_DT_SK))AS AVG_INV_AMT_LY_FSC,
				(SUM(Inv.INV_QTY_LY_FSC) / COUNT(LY_DT_SK)) AS AVG_INV_QTY_LY_FSC,
				(SUM(Inv.INV_AMT_LY_HLDY)/ COUNT(LY_DT_SK_HLDY)) AS AVG_INV_AMT_LY_HLDY,
				(SUM(Inv.INV_QTY_LY_HLDY)/ COUNT(LY_DT_SK_HLDY))AS AVG_INV_QTY_LY_HLDY,
				(SUM(Inv.INV_AMT_LY_CAL)/ COUNT(LY_DT_SK_CAL))AS AVG_INV_AMT_LY_CAL,
				(SUM(Inv.INV_QTY_LY_CAL)/ COUNT(LY_DT_SK_CAL))AS AVG_INV_QTY_LY_CAL

				FROM EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC as Inv
				inner join EDAA_PRES.V_DIM_PRE_DEF_CAL_TYP as CalTyp
					ON  Inv.DT_SK >= CalTyp.MIN_DT
					AND Inv.DT_SK <= CalTyp.MAX_DT
					AND Inv.DT_SK <= FORMAT(GETDATE(),'yyyyMMdd')
					AND CalTyp.PRE_DEF_NM = 'PTD'
					--AND Inv.LY_DT_SK_HLDY <= CalTyp.MAX_DT
					AND CalTyp.AGG_TYP = 'AGG'
					GROUP BY
					STR_ID,
					ITM_SKU,
					PRE_DEF_ID

	UNION

           SELECT
				STR_ID,
				ITM_SKU,
				PRE_DEF_ID,
				(SUM(Inv.INV_AMT_TY_FSC)/ COUNT(DT_SK))AS AVG_INV_AMT_TY_FSC,
				(SUM(Inv.INV_QTY_TY_FSC) / COUNT(DT_SK)) AS AVG_INV_QTY_TY_FSC,
				(SUM(Inv.INV_AMT_LY_FSC) / COUNT(LY_DT_SK))AS AVG_INV_AMT_LY_FSC,
				(SUM(Inv.INV_QTY_LY_FSC) / COUNT(LY_DT_SK)) AS AVG_INV_QTY_LY_FSC,
				(SUM(Inv.INV_AMT_LY_HLDY)/ COUNT(LY_DT_SK_HLDY)) AS AVG_INV_AMT_LY_HLDY,
				(SUM(Inv.INV_QTY_LY_HLDY)/ COUNT(LY_DT_SK_HLDY))AS AVG_INV_QTY_LY_HLDY,
				(SUM(Inv.INV_AMT_LY_CAL)/ COUNT(LY_DT_SK_CAL))AS AVG_INV_AMT_LY_CAL,
				(SUM(Inv.INV_QTY_LY_CAL)/ COUNT(LY_DT_SK_CAL))AS AVG_INV_QTY_LY_CAL

				FROM EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC as Inv
				inner join EDAA_PRES.V_DIM_PRE_DEF_CAL_TYP as CalTyp
					ON  Inv.DT_SK >= CalTyp.MIN_DT
					AND Inv.DT_SK <= CalTyp.MAX_DT
					AND Inv.DT_SK <= FORMAT(GETDATE(),'yyyyMMdd')
					AND CalTyp.PRE_DEF_NM = 'WktoDT'
					--AND Inv.LY_DT_SK_HLDY <= CalTyp.MAX_DT
					AND CalTyp.AGG_TYP = 'AGG'
					GROUP BY
					STR_ID,
					ITM_SKU,
					PRE_DEF_ID

 UNION
              SELECT
				  STR_ID,
				  ITM_SKU,
				  PRE_DEF_ID,
				  SUM(Inv.INV_AMT_TY_FSC) AS AVG_INV_AMT_TY_FSC,
				  SUM(Inv.INV_QTY_TY_FSC) AS AVG_INV_QTY_TY_FSC,
				  SUM(Inv.INV_AMT_LY_FSC) AS AVG_INV_AMT_LY_FSC,
				  SUM(Inv.INV_QTY_LY_FSC) AS AVG_INV_QTY_LY_FSC,
				  SUM(Inv.INV_AMT_LY_HLDY)AS AVG_INV_AMT_LY_HLDY,
				  SUM(Inv.INV_QTY_LY_HLDY)AS AVG_INV_QTY_LY_HLDY,
				  SUM(Inv.INV_AMT_LY_CAL)AS AVG_INV_AMT_LY_CAL,
				  SUM(Inv.INV_QTY_LY_CAL)AS AVG_INV_QTY_LY_CAL

				FROM EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC as Inv
				inner join EDAA_PRES.V_DIM_PRE_DEF_CAL_TYP as CalTyp
				ON  Inv.DT_SK = CalTyp.MIN_DT
				AND Inv.DT_SK = FORMAT(GETDATE()-1,'yyyyMMdd')
				--AND Inv.LY_DT_SK_HDLY <= CalTyp.MAX_DT
				AND CalTyp.PRE_DEF_NM = 'Yesterday'
				AND CalTyp.AGG_TYP = 'AGG'
				GROUP BY STR_ID,
				         ITM_SKU,
				         PRE_DEF_ID
				),

	 CTE2 AS (
	       SELECT
		     STR_ID,
		     ITM_SKU,
			 PRE_DEF_ID,
			 SUM(Inv.INV_AMT_TY_FSC) as END_INV_AMT_TY_FSC,
			 SUM(Inv.INV_QTY_TY_FSC) as END_INV_QTY_TY_FSC,
			 SUM(Inv.INV_AMT_LY_FSC) as END_INV_AMT_LY_FSC,
			 SUM(Inv.INV_QTY_LY_FSC) as END_INV_QTY_LY_FSC,
			 SUM(Inv.INV_AMT_LY_HLDY) as END_INV_AMT_LY_HLDY,
			 SUM(Inv.INV_QTY_LY_HLDY) as END_INV_QTY_LY_HLDY,
			 SUM(Inv.INV_AMT_LY_CAL) as END_INV_AMT_LY_CAL,
			 SUM(Inv.INV_QTY_LY_CAL) as END_INV_QTY_LY_CAL

			 FROM EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC as Inv inner join
					 EDAA_PRES.V_DIM_PRE_DEF_CAL_TYP as CalTyp
				ON  Inv.DT_SK >= CalTyp.MIN_DT
				AND Inv.DT_SK <= CalTyp.MAX_DT
			AND Inv.DT_SK = @DT_LST_WEEKEND
			AND CalTyp.PRE_DEF_NM = 'Last Week'
			--AND Inv.LY_DT_SK_HLDY <= CalTyp.MAX_DT
			AND CalTyp.AGG_TYP = 'AGG'
			GROUP BY STR_ID,
					 ITM_SKU,
					 PRE_DEF_ID

  UNION
              SELECT
				 STR_ID,
				 ITM_SKU,
				 PRE_DEF_ID,
				 SUM(Inv.INV_AMT_TY_FSC) as END_INV_AMT_TY_FSC,
				 SUM(Inv.INV_QTY_TY_FSC) as END_INV_QTY_TY_FSC,
				 SUM(Inv.INV_AMT_LY_FSC) as END_INV_AMT_LY_FSC,
				 SUM(Inv.INV_QTY_LY_FSC) as END_INV_QTY_LY_FSC,
				 SUM(Inv.INV_AMT_LY_HLDY) as END_INV_AMT_LY_HLDY,
				 SUM(Inv.INV_QTY_LY_HLDY) as END_INV_QTY_LY_HLDY,
				 SUM(Inv.INV_AMT_LY_CAL) as END_INV_AMT_LY_CAL,
				 SUM(Inv.INV_QTY_LY_CAL) as END_INV_QTY_LY_CAL

				 FROM EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC as Inv
				 inner join EDAA_PRES.V_DIM_PRE_DEF_CAL_TYP as CalTyp
				ON  Inv.DT_SK >= CalTyp.MIN_DT
				AND Inv.DT_SK <= CalTyp.MAX_DT
				AND Inv.DT_SK = FORMAT(GETDATE()-1,'yyyyMMdd')
				AND CalTyp.PRE_DEF_NM IN('FYTD','QTD','PTD','WktoDT')
				--AND Inv.LY_DT_SK_HLDY <= CalTyp.MAX_DT
				AND CalTyp.AGG_TYP = 'AGG'
				GROUP BY STR_ID,
						 ITM_SKU,
						 PRE_DEF_ID



	UNION
              SELECT
				 STR_ID,
				 ITM_SKU,
				 PRE_DEF_ID,
				 0 as END_INV_AMT_TY_FSC,
				 0 as END_INV_QTY_TY_FSC,
				 0 as END_INV_AMT_LY_FSC,
				 0 as END_INV_QTY_LY_FSC,
				 0 as END_INV_AMT_LY_HLDY,
				 0 as END_INV_QTY_LY_HLDY,
				 0 as END_INV_AMT_LY_CAL,
				 0 as END_INV_QTY_LY_CAL

				 FROM EDAA_PRES.FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC as Inv
				 inner join EDAA_PRES.V_DIM_PRE_DEF_CAL_TYP as CalTyp
				ON  Inv.DT_SK >= CalTyp.MIN_DT
				AND Inv.DT_SK <= CalTyp.MAX_DT
				AND CalTyp.PRE_DEF_NM = 'Yesterday'
				--AND Inv.LY_DT_SK_HLDY <= CalTyp.MAX_DT
				AND CalTyp.AGG_TYP = 'AGG'
				GROUP BY STR_ID,
						 ITM_SKU,
						 PRE_DEF_ID

		),

MERGE_TABLES AS
(
  Select distinct
                  a.STR_ID,
				  a.ITM_SKU,
				  a.PRE_DEF_ID,
				  a.AVG_INV_AMT_TY_FSC,
                  b.END_INV_AMT_TY_FSC,
				  a.AVG_INV_QTY_TY_FSC,
                  b.END_INV_QTY_TY_FSC,
				  a.AVG_INV_AMT_LY_FSC,
				  b.END_INV_AMT_LY_FSC,
				  a.AVG_INV_QTY_LY_FSC,
				  b.END_INV_QTY_LY_FSC,
				  a.AVG_INV_AMT_LY_HLDY,
				  b.END_INV_AMT_LY_HLDY,
				  a.AVG_INV_QTY_LY_HLDY,
				  b.END_INV_QTY_LY_HLDY,
				  a.AVG_INV_AMT_LY_CAL,
				  b.END_INV_AMT_LY_CAL,
				  a.AVG_INV_QTY_LY_CAL,
				  b.END_INV_QTY_LY_CAL

				  from CTE1 as a left join
            CTE2 as b on a.STR_ID = b.STR_ID
			AND a.ITM_SKU = b.ITM_SKU
			AND	a.PRE_DEF_ID = b.PRE_DEF_ID
			)


        --INSERT INTO [EDAA_PRES].[FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_AGG]

		INSERT INTO [EDAA_PRES].[FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_AGG]
		        (
				  ROW_ID_VAL,
	              PRE_DEF_ID,
	              DT_VAL,
	              STR_ID ,
	              ITM_SKU,
				  AVG_INV_AMT_TY_FSC,
				  END_INV_AMT_TY_FSC,
				  AVG_INV_QTY_TY_FSC,
				  END_INV_QTY_TY_FSC,
				  AVG_INV_AMT_LY_FSC,
				  END_INV_AMT_LY_FSC,
				  AVG_INV_QTY_LY_FSC,
				  END_INV_QTY_LY_FSC,
				  AVG_INV_AMT_LY_HLDY,
				  END_INV_AMT_LY_HLDY,
				  AVG_INV_QTY_LY_HLDY,
				  END_INV_QTY_LY_HLDY,
				  AVG_INV_AMT_LY_CAL,
				  END_INV_AMT_LY_CAL,
				  AVG_INV_QTY_LY_CAL,
				  END_INV_QTY_LY_CAL,
				  UPDATEDTIMESTAMP
          )
			SELECT
			      dtsel.ROW_ID_VAL,
                  dtsel.PRE_DEF_ID,
                  CONVERT(date, CONVERT(varchar(10), dtsel.MAX_DT, 120)) AS DT_VAL,
				  A.STR_ID,
				  A.ITM_SKU,
				  A.AVG_INV_AMT_TY_FSC,
				  A.END_INV_AMT_TY_FSC,
				  A.AVG_INV_QTY_TY_FSC,
				  A.END_INV_QTY_TY_FSC,
				  A.AVG_INV_AMT_LY_FSC,
				  A.END_INV_AMT_LY_FSC,
				  A.AVG_INV_QTY_LY_FSC,
				  A.END_INV_QTY_LY_FSC,
				  A.AVG_INV_AMT_LY_HLDY,
				  A.END_INV_AMT_LY_HLDY,
				  A.AVG_INV_QTY_LY_HLDY,
				  A.END_INV_QTY_LY_HLDY,
				  A.AVG_INV_AMT_LY_CAL,
				  A.END_INV_AMT_LY_CAL,
				  A.AVG_INV_QTY_LY_CAL,
				  A.END_INV_QTY_LY_CAL,
				  GETDATE() as [UPDATEDTIMESTAMP]

			FROM MERGE_TABLES as A inner join
			(SELECT
           *,
           ROW_NUMBER() OVER (ORDER BY PRE_DEF_ID) AS ROW_ID_VAL
         FROM EDAA_PRES.V_DIM_PRE_DEF_CAL_TYP
		 WHERE AGG_TYP ='AGG'
         ) as dtsel
		 ON A.PRE_DEF_ID = dtsel.PRE_DEF_ID


	    --UPDATE STATISTICS
		UPDATE STATISTICS [EDAA_PRES].[FCT_DLY_STR_ITMSKU_INV_TY_LY_FSC_AGG];

	  END TRY

	  BEGIN CATCH
		EXEC EDAA_CNTL.SP_AUDIT_DATA_LOAD_END @AUD_SKY = @NEW_AUD_SKY,
											  @NBR_OF_RW_ISRT = 0,
											  @NBR_OF_RW_UDT = 0
		SET @ERROR_PROCEDURE_NAME = 'EDAA_ETL.PROC_FCT_DLY_ITM_SKU_STR_INV_AGG_LOAD'
		--SET @ERROR_LINE
		--SET @ERROR_MSG

		SELECT
		  @ERROR_LINE = ERROR_NUMBER(),
		  @ERROR_MSG = ERROR_MESSAGE();

		--------- Log execution error ----------
		EXEC EDAA_CNTL.SP_LOG_AUD_ERR @AUD_SKY = @NEW_AUD_SKY,
									  @ERROR_PROCEDURE_NAME = @ERROR_PROCEDURE_NAME,
									  @ERROR_LINE = @ERROR_LINE,
									  @ERROR_MSG = @ERROR_MSG;

		THROW;

	  END CATCH

  END
