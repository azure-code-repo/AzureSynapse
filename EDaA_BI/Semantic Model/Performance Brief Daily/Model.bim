{
  "name": "SemanticModel",
  "compatibilityLevel": 1500,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "type": "structured",
        "name": "Synapse_DWH",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "sql-np-ea2-edaa-serve-01.database.windows.net",
            "database": "dw-np-ea2-edaa-serve-02"
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "kind": "SQL",
          "path": "sql-np-ea2-edaa-serve-01.database.windows.net;dw-np-ea2-edaa-serve-02",
          "Username": "EDaASynapseLoaduser01",
          "EncryptConnection": true,
          "PrivacySetting": "Organizational"
        }
      }
    ],
    "tables": [
      {
        "name": "Data status",
        "isHidden": true,
        "columns": [
          {
            "name": "DATA_STS",
            "dataType": "string",
            "sourceColumn": "DATA_STS"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_DATA_STS = Source{[Schema=\"PRES\",Item=\"V_DATA_STS\"]}[Data]",
                "in",
                "    PRES_V_DATA_STS"
              ]
            }
          }
        ]
      },
      {
        "name": "People",
        "columns": [
          {
            "name": "BYR_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BYR_SKY"
          },
          {
            "name": "Buyer ID",
            "dataType": "int64",
            "sourceColumn": "BYR_ID",
            "summarizeBy": "none"
          },
          {
            "name": "Buyer",
            "dataType": "string",
            "sourceColumn": "BYR"
          },
          {
            "name": "P_SUB_CT_ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "P_SUB_CT_ID"
          },
          {
            "name": "P_SUB_CT_DSC",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "P_SUB_CT_DSC"
          },
          {
            "name": "GVP",
            "dataType": "string",
            "sourceColumn": "GVP"
          },
          {
            "name": "Manager",
            "dataType": "string",
            "sourceColumn": "MGR"
          },
          {
            "name": "VP",
            "dataType": "string",
            "sourceColumn": "VP"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_DIM_BYR_P_SUB_CT_CURR = Source{[Schema=\"PRES\",Item=\"V_DIM_BYR_P_SUB_CT_CURR\"]}[Data]",
                "in",
                "    PRES_V_DIM_BYR_P_SUB_CT_CURR"
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "People",
            "levels": [
              {
                "name": "GVP",
                "ordinal": 0,
                "column": "GVP"
              },
              {
                "name": "VP",
                "ordinal": 1,
                "column": "VP"
              },
              {
                "name": "Manager",
                "ordinal": 2,
                "column": "Manager"
              },
              {
                "name": "Buyer",
                "ordinal": 3,
                "column": "Buyer"
              }
            ]
          }
        ]
      },
      {
        "name": "Time__Bridge",
        "isHidden": true,
        "columns": [
          {
            "name": "TM_SKY",
            "dataType": "int64",
            "sourceColumn": "TM_SKY"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_DIM_TM_BRDG = Source{[Schema=\"PRES\",Item=\"V_DIM_TM_BRDG\"]}[Data]",
                "in",
                "    PRES_V_DIM_TM_BRDG"
              ]
            }
          }
        ]
      },
      {
        "name": "Time",
        "columns": [
          {
            "name": "TM_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "TM_SKY"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "DAY_DT"
          },
          {
            "name": "DAY_DT_LY",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "DAY_DT_LY"
          },
          {
            "name": "FCL_DAY_DT_LY",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FCL_DAY_DT_LY"
          },
          {
            "name": "LY_HLDY_DAY_DT",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "LY_HLDY_DAY_DT"
          },
          {
            "name": "Week End Date",
            "dataType": "dateTime",
            "sourceColumn": "WK_END_DT"
          },
          {
            "name": "WK_STRT_DT",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "WK_STRT_DT"
          },
          {
            "name": "WK_END_DT_LY",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "WK_END_DT_LY"
          },
          {
            "name": "WK_STRT_DT_LY",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "WK_STRT_DT_LY"
          },
          {
            "name": "FCL_WK_END_DT_LY",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FCL_WK_END_DT_LY"
          },
          {
            "name": "FCL_WK_STRT_DT_LY",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FCL_WK_STRT_DT_LY"
          },
          {
            "name": "Calendar Type",
            "dataType": "string",
            "sourceColumn": "CLDR_TYP"
          },
          {
            "name": "CLDR_TYP_ORDR_ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CLDR_TYP_ORDR_ID"
          },
          {
            "name": "CLDR_DAY_OF_WK_NM",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CLDR_DAY_OF_WK_NM"
          },
          {
            "name": "Day Of Week",
            "dataType": "string",
            "sourceColumn": "DAY_OF_WK"
          },
          {
            "name": "DATE (NM)",
            "dataType": "string",
            "sourceColumn": "DATE_NM",
            "sortByColumn": "Date"
          },
          {
            "name": "CLDR_DAY_OF_WK_ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CLDR_DAY_OF_WK_ID"
          },
          {
            "name": "Fiscal Week",
            "dataType": "int64",
            "sourceColumn": "FCL_WK_ID",
            "summarizeBy": "none"
          },
          {
            "name": "CLDR_MTH_OF_YR_NM",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CLDR_MTH_OF_YR_NM"
          },
          {
            "name": "FCL_PER_SEQ_ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FCL_PER_SEQ_ID"
          },
          {
            "name": "FCL_QTR_SEQ_ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FCL_QTR_SEQ_ID"
          },
          {
            "name": "Fiscal Year",
            "dataType": "int64",
            "sourceColumn": "FCL_YR_ID",
            "summarizeBy": "none"
          },
          {
            "name": "CLDR_YR_ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CLDR_YR_ID"
          },
          {
            "name": "Fiscal Quarter Name",
            "dataType": "string",
            "sourceColumn": "FCL_QTR_NM"
          },
          {
            "name": "Fiscal Period Name",
            "dataType": "string",
            "sourceColumn": "FCL_PER_NM"
          },
          {
            "name": "Pre-Defined Date Filter",
            "dataType": "string",
            "sourceColumn": "PRE_DEF_DT_FLTR",
            "sortByColumn": "SORT_ORD_ID"
          },
          {
            "name": "SORT_ORD_ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SORT_ORD_ID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_DIM_TM_CALC = Source{[Schema=\"PRES\",Item=\"V_DIM_TM_CALC\"]}[Data]",
                "in",
                "    PRES_V_DIM_TM_CALC"
              ]
            }
          }
        ]
      },
      {
        "name": "Last Sales",
        "isHidden": true,
        "columns": [
          {
            "name": "DAY_DT",
            "dataType": "dateTime",
            "sourceColumn": "DAY_DT"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_DLY_SL_LD_STS = Source{[Schema=\"PRES\",Item=\"V_DLY_SL_LD_STS\"]}[Data]",
                "in",
                "    PRES_V_DLY_SL_LD_STS"
              ]
            }
          }
        ]
      },
      {
        "name": "Synapse_Load_IT_Desc",
        "columns": [
          {
            "name": "INDX_ID",
            "dataType": "int64",
            "sourceColumn": "INDX_ID",
            "summarizeBy": "none"
          },
          {
            "name": "INDX_DSC",
            "dataType": "string",
            "sourceColumn": "INDX_DSC"
          },
          {
            "name": "DAY_DT",
            "dataType": "dateTime",
            "sourceColumn": "DAY_DT"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_DIM_STO_DLY_SL_STS = Source{[Schema=\"PRES\",Item=\"V_DIM_STO_DLY_SL_STS\"]}[Data]",
                "in",
                "    PRES_V_DIM_STO_DLY_SL_STS"
              ]
            }
          }
        ]
      },
      {
        "name": "Channel",
        "columns": [
          {
            "name": "CHNL_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CHNL_SKY",
            "summarizeBy": "none"
          },
          {
            "name": "CHNL_BUS_KEY",
            "dataType": "string",
            "sourceColumn": "CHNL_BUS_KEY"
          },
          {
            "name": "SHOP_CHNL_CT",
            "dataType": "int64",
            "sourceColumn": "SHOP_CHNL_CT",
            "summarizeBy": "none"
          },
          {
            "name": "SHOP_CHNL_GRP_CT",
            "dataType": "int64",
            "sourceColumn": "SHOP_CHNL_GRP_CT",
            "summarizeBy": "none"
          },
          {
            "name": "SHOP_CHNL_CLS_CT",
            "dataType": "string",
            "sourceColumn": "SHOP_CHNL_CLS_CT"
          },
          {
            "name": "SHOP_CHNL_CLS_CT_NM",
            "dataType": "string",
            "sourceColumn": "SHOP_CHNL_CLS_CT_NM"
          },
          {
            "name": "MBL_SLF_CHKOT_CT",
            "dataType": "string",
            "sourceColumn": "MBL_SLF_CHKOT_CT"
          },
          {
            "name": "MBL_SLF_CHKOT_DSC",
            "dataType": "string",
            "sourceColumn": "MBL_SLF_CHKOT_DSC"
          },
          {
            "name": "MPRKS",
            "dataType": "string",
            "sourceColumn": "MPRKS"
          },
          {
            "name": "MPRKS_TN_CT",
            "dataType": "string",
            "sourceColumn": "MPRKS_TN_CT"
          },
          {
            "name": "MPERKS_TN_DSC",
            "dataType": "string",
            "sourceColumn": "MPERKS_TN_DSC"
          },
          {
            "name": "CHNL_DTL",
            "dataType": "string",
            "sourceColumn": "CHNL_DTL"
          },
          {
            "name": "SHOP_CHNL",
            "dataType": "string",
            "sourceColumn": "SHOP_CHNL"
          },
          {
            "name": "SHOP_AND_SCN",
            "dataType": "string",
            "sourceColumn": "SHOP_AND_SCN"
          },
          {
            "name": "DGTL_UT_FLG",
            "dataType": "int64",
            "sourceColumn": "DGTL_UT_FLG",
            "summarizeBy": "none"
          },
          {
            "name": "SHOP_AND_SCN_FLG",
            "dataType": "boolean",
            "sourceColumn": "SHOP_AND_SCN_FLG"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_DIM_CHNL_CURR = Source{[Schema=\"PRES\",Item=\"V_DIM_CHNL_CURR\"]}[Data]",
                "in",
                "    PRES_V_DIM_CHNL_CURR"
              ]
            }
          }
        ]
      },
      {
        "name": "Geography",
        "columns": [
          {
            "name": "GEO_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "GEO_SKY",
            "summarizeBy": "none"
          },
          {
            "name": "Unit ID",
            "dataType": "int64",
            "sourceColumn": "UT_ID",
            "summarizeBy": "none"
          },
          {
            "name": "Unit Desc",
            "dataType": "string",
            "sourceColumn": "UT_DSC",
            "sortByColumn": "Unit ID"
          },
          {
            "name": "Unit Square Feet",
            "dataType": "int64",
            "sourceColumn": "UNIT_SQF",
            "summarizeBy": "none"
          },
          {
            "name": "Region",
            "dataType": "string",
            "sourceColumn": "RGN"
          },
          {
            "name": "Operating Market",
            "dataType": "string",
            "sourceColumn": "OPR_MKT"
          },
          {
            "name": "Unit Longitude",
            "dataType": "double",
            "sourceColumn": "UT_LNGT",
            "dataCategory": "Longitude",
            "summarizeBy": "none"
          },
          {
            "name": "Unit Latitude",
            "dataType": "double",
            "sourceColumn": "UT_LAT",
            "dataCategory": "Latitude",
            "summarizeBy": "none"
          },
          {
            "name": "Store Class ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ST_CLS_ID",
            "summarizeBy": "none"
          },
          {
            "name": "Store Class",
            "dataType": "string",
            "sourceColumn": "ST_CLS"
          },
          {
            "name": "State",
            "dataType": "string",
            "sourceColumn": "ST"
          },
          {
            "name": "County",
            "dataType": "string",
            "sourceColumn": "CNTY"
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "CITY"
          },
          {
            "name": "ZIP Code",
            "dataType": "string",
            "sourceColumn": "ZIP"
          },
          {
            "name": "Division ID",
            "dataType": "string",
            "sourceColumn": "DIV_ID"
          },
          {
            "name": "Division Name",
            "dataType": "string",
            "sourceColumn": "DIV_NM"
          },
          {
            "name": "NW_STO_TY_FLG",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "NW_STO_TY_FLG",
            "summarizeBy": "none"
          },
          {
            "name": "NW_STO_LY_FLG",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "NW_STO_LY_FLG",
            "summarizeBy": "none"
          },
          {
            "name": "NW_STO_2LY_FLG",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "NW_STO_2LY_FLG",
            "summarizeBy": "none"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_DIM_GEO_CURR = Source{[Schema=\"PRES\",Item=\"V_DIM_GEO_CURR\"]}[Data]",
                "in",
                "    PRES_V_DIM_GEO_CURR"
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Geography",
            "levels": [
              {
                "name": "Region",
                "ordinal": 0,
                "column": "Region"
              },
              {
                "name": "Operating Market",
                "ordinal": 1,
                "column": "Operating Market"
              },
              {
                "name": "Unit Desc",
                "ordinal": 2,
                "column": "Unit Desc"
              }
            ]
          }
        ]
      },
      {
        "name": "Product",
        "columns": [
          {
            "name": "P_SUB_CT_ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "P_SUB_CT_ID"
          },
          {
            "name": "L3-Sub Category",
            "dataType": "string",
            "sourceColumn": "P_SUB_CT_DSC"
          },
          {
            "name": "P_CT_ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "P_CT_ID"
          },
          {
            "name": "L4-Category",
            "dataType": "string",
            "sourceColumn": "P_CT_DSC"
          },
          {
            "name": "BUS_SEG_ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "BUS_SEG_ID"
          },
          {
            "name": "L5-Business Segment",
            "dataType": "string",
            "sourceColumn": "BUS_SEG_DSC"
          },
          {
            "name": "MDS_ARE_ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "MDS_ARE_ID"
          },
          {
            "name": "L6-Merchandise Area",
            "dataType": "string",
            "sourceColumn": "MDS_ARE_DSC"
          },
          {
            "name": "FUEL",
            "dataType": "string",
            "sourceColumn": "FUEL"
          },
          {
            "name": "MJR_CORP_ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "MJR_CORP_ID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_DIM_P_L3_HCY_CURR = Source{[Schema=\"PRES\",Item=\"V_DIM_P_L3_HCY_CURR\"]}[Data]",
                "in",
                "    PRES_V_DIM_P_L3_HCY_CURR"
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Merch Hierarchy",
            "levels": [
              {
                "name": "L6-Merchandise Area",
                "ordinal": 0,
                "column": "L6-Merchandise Area"
              },
              {
                "name": "L5-Business Segment",
                "ordinal": 1,
                "column": "L5-Business Segment"
              },
              {
                "name": "L4-Category",
                "ordinal": 2,
                "column": "L4-Category"
              },
              {
                "name": "L3-Sub Category",
                "ordinal": 3,
                "column": "L3-Sub Category"
              }
            ]
          }
        ]
      },
      {
        "name": "MB_Sales",
        "isHidden": true,
        "columns": [
          {
            "name": "GEO_HST_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "GEO_HST_SKY"
          },
          {
            "name": "GEO_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "GEO_SKY"
          },
          {
            "name": "TM_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "TM_SKY"
          },
          {
            "name": "CHNL_HST_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CHNL_HST_SKY"
          },
          {
            "name": "CHNL_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CHNL_SKY"
          },
          {
            "name": "P_SUB_CT_ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "P_SUB_CT_ID"
          },
          {
            "name": "BYR_HST_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BYR_HST_SKY"
          },
          {
            "name": "BYR_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BYR_SKY"
          },
          {
            "name": "UT_ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "UT_ID"
          },
          {
            "name": "SLS_MKT_BSKT_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM"
          },
          {
            "name": "SLS_MKT_BSKT_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_QTY"
          },
          {
            "name": "DMGN_MKT_BSKT_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DMGN_MKT_BSKT_AM"
          },
          {
            "name": "COGS_MKT_BSKT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COGS_MKT_BSKT"
          },
          {
            "name": "DGTL_UT_SLS_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DGTL_UT_SLS_AM"
          },
          {
            "name": "CALC_CIRC_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_CIRC_AM"
          },
          {
            "name": "CALC_CLRN_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_CLRN_AM"
          },
          {
            "name": "CALC_DGTL_CIRC_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_DGTL_CIRC_AM"
          },
          {
            "name": "CALC_HOOK_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_HOOK_AM"
          },
          {
            "name": "CALC_DUM_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_DUM_AM"
          },
          {
            "name": "CALC_MDWK_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_MDWK_AM"
          },
          {
            "name": "CALC_MPRKS_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_MPRKS_AM"
          },
          {
            "name": "CALC_OTH_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_OTH_AM"
          },
          {
            "name": "CALC_PERS_RWRD_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_PERS_RWRD_AM"
          },
          {
            "name": "CALC_SHLF_EDG_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_SHLF_EDG_AM"
          },
          {
            "name": "CALC_SP_EVNT_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_SP_EVNT_AM"
          },
          {
            "name": "CALC_TEAM_MMB_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_TEAM_MMB_AM"
          },
          {
            "name": "DGTL_SHOP_SLS_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DGTL_SHOP_SLS_AM"
          },
          {
            "name": "SHOP_AND_SCN_STO_SLS_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SHOP_AND_SCN_STO_SLS_AM"
          },
          {
            "name": "SHOP_AND_SCN_SLS_AM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SHOP_AND_SCN_SLS_AM"
          },
          {
            "name": "SLS_MKT_BSKT_AM_COMP",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_COMP"
          },
          {
            "name": "SLS_MKT_BSKT_AM_NCOMP",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_NCOMP"
          },
          {
            "name": "SLS_MKT_BSKT_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_LY_CLDR"
          },
          {
            "name": "SLS_MKT_BSKT_QTY_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_QTY_LY_CLDR"
          },
          {
            "name": "DMGN_MKT_BSKT_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DMGN_MKT_BSKT_AM_LY_CLDR"
          },
          {
            "name": "COGS_MKT_BSKT_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COGS_MKT_BSKT_LY_CLDR"
          },
          {
            "name": "DGTL_UT_SLS_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DGTL_UT_SLS_AM_LY_CLDR"
          },
          {
            "name": "CALC_CIRC_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_CIRC_AM_LY_CLDR"
          },
          {
            "name": "CALC_CLRN_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_CLRN_AM_LY_CLDR"
          },
          {
            "name": "CALC_DGTL_CIRC_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_DGTL_CIRC_AM_LY_CLDR"
          },
          {
            "name": "CALC_HOOK_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_HOOK_AM_LY_CLDR"
          },
          {
            "name": "CALC_DUM_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_DUM_AM_LY_CLDR"
          },
          {
            "name": "CALC_MDWK_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_MDWK_AM_LY_CLDR"
          },
          {
            "name": "CALC_MPRKS_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_MPRKS_AM_LY_CLDR"
          },
          {
            "name": "CALC_OTH_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_OTH_AM_LY_CLDR"
          },
          {
            "name": "CALC_PERS_RWRD_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_PERS_RWRD_AM_LY_CLDR"
          },
          {
            "name": "CALC_SHLF_EDG_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_SHLF_EDG_AM_LY_CLDR"
          },
          {
            "name": "CALC_SP_EVNT_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_SP_EVNT_AM_LY_CLDR"
          },
          {
            "name": "CALC_TEAM_MMB_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_TEAM_MMB_AM_LY_CLDR"
          },
          {
            "name": "DGTL_SHOP_SLS_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DGTL_SHOP_SLS_AM_LY_CLDR"
          },
          {
            "name": "SHOP_AND_SCN_STO_SLS_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SHOP_AND_SCN_STO_SLS_AM_LY_CLDR"
          },
          {
            "name": "SHOP_AND_SCN_SLS_AM_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SHOP_AND_SCN_SLS_AM_LY_CLDR"
          },
          {
            "name": "SLS_MKT_BSKT_AM_COMP_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_COMP_LY_CLDR"
          },
          {
            "name": "SLS_MKT_BSKT_AM_NCOMP_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_NCOMP_LY_CLDR"
          },
          {
            "name": "SLS_MKT_BSKT_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_LY_FSC"
          },
          {
            "name": "SLS_MKT_BSKT_QTY_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_QTY_LY_FSC"
          },
          {
            "name": "DMGN_MKT_BSKT_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DMGN_MKT_BSKT_AM_LY_FSC"
          },
          {
            "name": "COGS_MKT_BSKT_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COGS_MKT_BSKT_LY_FSC"
          },
          {
            "name": "DGTL_UT_SLS_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DGTL_UT_SLS_AM_LY_FSC"
          },
          {
            "name": "CALC_CIRC_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_CIRC_AM_LY_FSC"
          },
          {
            "name": "CALC_CLRN_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_CLRN_AM_LY_FSC"
          },
          {
            "name": "CALC_DGTL_CIRC_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_DGTL_CIRC_AM_LY_FSC"
          },
          {
            "name": "CALC_HOOK_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_HOOK_AM_LY_FSC"
          },
          {
            "name": "CALC_DUM_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_DUM_AM_LY_FSC"
          },
          {
            "name": "CALC_MDWK_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_MDWK_AM_LY_FSC"
          },
          {
            "name": "CALC_MPRKS_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_MPRKS_AM_LY_FSC"
          },
          {
            "name": "CALC_OTH_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_OTH_AM_LY_FSC"
          },
          {
            "name": "CALC_PERS_RWRD_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_PERS_RWRD_AM_LY_FSC"
          },
          {
            "name": "CALC_SHLF_EDG_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_SHLF_EDG_AM_LY_FSC"
          },
          {
            "name": "CALC_SP_EVNT_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_SP_EVNT_AM_LY_FSC"
          },
          {
            "name": "CALC_TEAM_MMB_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_TEAM_MMB_AM_LY_FSC"
          },
          {
            "name": "DGTL_SHOP_SLS_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DGTL_SHOP_SLS_AM_LY_FSC"
          },
          {
            "name": "SHOP_AND_SCN_STO_SLS_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SHOP_AND_SCN_STO_SLS_AM_LY_FSC"
          },
          {
            "name": "SHOP_AND_SCN_SLS_AM_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SHOP_AND_SCN_SLS_AM_LY_FSC"
          },
          {
            "name": "SLS_MKT_BSKT_AM_COMP_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_COMP_LY_FSC"
          },
          {
            "name": "SLS_MKT_BSKT_AM_NCOMP_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_NCOMP_LY_FSC"
          },
          {
            "name": "SLS_MKT_BSKT_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_LY_HLDY"
          },
          {
            "name": "SLS_MKT_BSKT_QTY_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_QTY_LY_HLDY"
          },
          {
            "name": "DMGN_MKT_BSKT_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DMGN_MKT_BSKT_AM_LY_HLDY"
          },
          {
            "name": "COGS_MKT_BSKT_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COGS_MKT_BSKT_LY_HLDY"
          },
          {
            "name": "DGTL_UT_SLS_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DGTL_UT_SLS_AM_LY_HLDY"
          },
          {
            "name": "CALC_CIRC_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_CIRC_AM_LY_HLDY"
          },
          {
            "name": "CALC_CLRN_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_CLRN_AM_LY_HLDY"
          },
          {
            "name": "CALC_DGTL_CIRC_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_DGTL_CIRC_AM_LY_HLDY"
          },
          {
            "name": "CALC_HOOK_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_HOOK_AM_LY_HLDY"
          },
          {
            "name": "CALC_DUM_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_DUM_AM_LY_HLDY"
          },
          {
            "name": "CALC_MDWK_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_MDWK_AM_LY_HLDY"
          },
          {
            "name": "CALC_MPRKS_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_MPRKS_AM_LY_HLDY"
          },
          {
            "name": "CALC_OTH_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_OTH_AM_LY_HLDY"
          },
          {
            "name": "CALC_PERS_RWRD_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_PERS_RWRD_AM_LY_HLDY"
          },
          {
            "name": "CALC_SHLF_EDG_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_SHLF_EDG_AM_LY_HLDY"
          },
          {
            "name": "CALC_SP_EVNT_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_SP_EVNT_AM_LY_HLDY"
          },
          {
            "name": "CALC_TEAM_MMB_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_TEAM_MMB_AM_LY_HLDY"
          },
          {
            "name": "DGTL_SHOP_SLS_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DGTL_SHOP_SLS_AM_LY_HLDY"
          },
          {
            "name": "SHOP_AND_SCN_STO_SLS_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SHOP_AND_SCN_STO_SLS_AM_LY_HLDY"
          },
          {
            "name": "SHOP_AND_SCN_SLS_AM_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SHOP_AND_SCN_SLS_AM_LY_HLDY"
          },
          {
            "name": "SLS_MKT_BSKT_AM_COMP_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_COMP_LY_HLDY"
          },
          {
            "name": "SLS_MKT_BSKT_AM_NCOMP_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_NCOMP_LY_HLDY"
          },
          {
            "name": "SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "CALC_DUM_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_DUM_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "CALC_OTH_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_OTH_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "CALC_CIRC_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_CIRC_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "CALC_CLRN_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_CLRN_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "CALC_HOOK_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_HOOK_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "CALC_DUM_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_DUM_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "CALC_MDWK_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_MDWK_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "CALC_OTH_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_OTH_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "CALC_DUM_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_DUM_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "CALC_OTH_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_OTH_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY"
          }
        ],
        "partitions": [
          {
            "name": "MB_Sales_202101",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210101 and [TM_SKY] <= 20210131)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210101 and [TM_SKY] <= 20210131)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_202102",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210201 and [TM_SKY] <= 20210228)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210201 and [TM_SKY] <= 20210228)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_202103",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210301 and [TM_SKY] <= 20210331)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210301 and [TM_SKY] <= 20210331)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_202104",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210401 and [TM_SKY] <= 20210430)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210401 and [TM_SKY] <= 20210430)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_202105",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210501 and [TM_SKY] <= 20210531)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210501 and [TM_SKY] <= 20210531)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_202106",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210601 and [TM_SKY] <= 20210630)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210601 and [TM_SKY] <= 20210630)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_202107",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210701 and [TM_SKY] <= 20210731)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210701 and [TM_SKY] <= 20210731)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_202108",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210801 and [TM_SKY] <= 20210831)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210801 and [TM_SKY] <= 20210831)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_202109",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210901 and [TM_SKY] <= 20210930)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210901 and [TM_SKY] <= 20210930)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_202110",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211001 and [TM_SKY] <= 20211031)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211001 and [TM_SKY] <= 20211031)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_202111",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211101 and [TM_SKY] <= 20211130)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211101 and [TM_SKY] <= 20211130)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_202112",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211201 and [TM_SKY] <= 20211231)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_MKT_BSKT_AM\", \"SLS_MKT_BSKT_QTY\", \"DMGN_MKT_BSKT_AM\", \"COGS_MKT_BSKT\", \"DGTL_UT_SLS_AM\", \"CALC_CIRC_AM\", \"CALC_CLRN_AM\", \"CALC_DGTL_CIRC_AM\", \"CALC_HOOK_AM\", \"CALC_DUM_AM\", \"CALC_MDWK_AM\", \"CALC_MPRKS_AM\", \"CALC_OTH_AM\", \"CALC_PERS_RWRD_AM\", \"CALC_SHLF_EDG_AM\", \"CALC_SP_EVNT_AM\", \"CALC_TEAM_MMB_AM\", \"DGTL_SHOP_SLS_AM\", \"SHOP_AND_SCN_STO_SLS_AM\", \"SHOP_AND_SCN_SLS_AM\", \"SLS_MKT_BSKT_AM_COMP\", \"SLS_MKT_BSKT_AM_NCOMP\", \"SLS_MKT_BSKT_AM_LY_CLDR\", \"SLS_MKT_BSKT_QTY_LY_CLDR\", \"DMGN_MKT_BSKT_AM_LY_CLDR\", \"COGS_MKT_BSKT_LY_CLDR\", \"DGTL_UT_SLS_AM_LY_CLDR\", \"CALC_CIRC_AM_LY_CLDR\", \"CALC_CLRN_AM_LY_CLDR\", \"CALC_DGTL_CIRC_AM_LY_CLDR\", \"CALC_HOOK_AM_LY_CLDR\", \"CALC_DUM_AM_LY_CLDR\", \"CALC_MDWK_AM_LY_CLDR\", \"CALC_MPRKS_AM_LY_CLDR\", \"CALC_OTH_AM_LY_CLDR\", \"CALC_PERS_RWRD_AM_LY_CLDR\", \"CALC_SHLF_EDG_AM_LY_CLDR\", \"CALC_SP_EVNT_AM_LY_CLDR\", \"CALC_TEAM_MMB_AM_LY_CLDR\", \"DGTL_SHOP_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_LY_CLDR\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_FSC\", \"SLS_MKT_BSKT_QTY_LY_FSC\", \"DMGN_MKT_BSKT_AM_LY_FSC\", \"COGS_MKT_BSKT_LY_FSC\", \"DGTL_UT_SLS_AM_LY_FSC\", \"CALC_CIRC_AM_LY_FSC\", \"CALC_CLRN_AM_LY_FSC\", \"CALC_DGTL_CIRC_AM_LY_FSC\", \"CALC_HOOK_AM_LY_FSC\", \"CALC_DUM_AM_LY_FSC\", \"CALC_MDWK_AM_LY_FSC\", \"CALC_MPRKS_AM_LY_FSC\", \"CALC_OTH_AM_LY_FSC\", \"CALC_PERS_RWRD_AM_LY_FSC\", \"CALC_SHLF_EDG_AM_LY_FSC\", \"CALC_SP_EVNT_AM_LY_FSC\", \"CALC_TEAM_MMB_AM_LY_FSC\", \"DGTL_SHOP_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_LY_HLDY\", \"SLS_MKT_BSKT_QTY_LY_HLDY\", \"DMGN_MKT_BSKT_AM_LY_HLDY\", \"COGS_MKT_BSKT_LY_HLDY\", \"DGTL_UT_SLS_AM_LY_HLDY\", \"CALC_CIRC_AM_LY_HLDY\", \"CALC_CLRN_AM_LY_HLDY\", \"CALC_DGTL_CIRC_AM_LY_HLDY\", \"CALC_HOOK_AM_LY_HLDY\", \"CALC_DUM_AM_LY_HLDY\", \"CALC_MDWK_AM_LY_HLDY\", \"CALC_MPRKS_AM_LY_HLDY\", \"CALC_OTH_AM_LY_HLDY\", \"CALC_PERS_RWRD_AM_LY_HLDY\", \"CALC_SHLF_EDG_AM_LY_HLDY\", \"CALC_SP_EVNT_AM_LY_HLDY\", \"CALC_TEAM_MMB_AM_LY_HLDY\", \"DGTL_SHOP_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_LY_HLDY\", \"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_DUM_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_OTH_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_CLDR\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_CLDR\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", ",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_DUM_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_FSC\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_FSC\", \"CALC_OTH_AM_DIFF_TY_VS_LY_FSC\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_FSC\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_FSC\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_FSC\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_FSC\",",
                  "\t\"SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY\", \"DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY\", \"COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY\", \"DGTL_UT_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_HOOK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_DUM_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MDWK_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_MPRKS_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_OTH_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_PERS_RWRD_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SHLF_EDG_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_SP_EVNT_AM_DIFF_TY_VS_LY_HLDY\", \"CALC_TEAM_MMB_AM_DIFF_TY_VS_LY_HLDY\", \"DGTL_SHOP_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_STO_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SHOP_AND_SCN_SLS_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_MKT_BSKT_AM_NCOMP_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211201 and [TM_SKY] <= 20211231)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Txn_Sales",
        "isHidden": true,
        "columns": [
          {
            "name": "GEO_HST_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "GEO_HST_SKY"
          },
          {
            "name": "GEO_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "GEO_SKY"
          },
          {
            "name": "TM_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "TM_SKY"
          },
          {
            "name": "CHNL_HST_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CHNL_HST_SKY"
          },
          {
            "name": "CHNL_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CHNL_SKY"
          },
          {
            "name": "UT_ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "UT_ID"
          },
          {
            "name": "P_CT_BUS_KEY",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "P_CT_BUS_KEY"
          },
          {
            "name": "FNC_TN_CNT",
            "dataType": "int64",
            "sourceColumn": "FNC_TN_CNT"
          },
          {
            "name": "FNC_TN_CNT_LY_FSC",
            "dataType": "int64",
            "sourceColumn": "FNC_TN_CNT_LY_FSC"
          },
          {
            "name": "FNC_TN_CNT_LY_HLDY",
            "dataType": "int64",
            "sourceColumn": "FNC_TN_CNT_LY_HLDY"
          },
          {
            "name": "FNC_TN_CNT_LY_CLDR",
            "dataType": "int64",
            "sourceColumn": "FNC_TN_CNT_LY_CLDR"
          },
          {
            "name": "FNC_TN_CNT_DIFF_TY_VS_LY_FSC",
            "dataType": "int64",
            "sourceColumn": "FNC_TN_CNT_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "FNC_TN_CNT_DIFF_TY_VS_LY_HLDY",
            "dataType": "int64",
            "sourceColumn": "FNC_TN_CNT_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "FNC_TN_CNT_DIFF_TY_VS_LY_CLDR",
            "dataType": "int64",
            "sourceColumn": "FNC_TN_CNT_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "FNC_TN_CNT_DIFF_TY_VS_LLY_FSC",
            "dataType": "int64",
            "sourceColumn": "FNC_TN_CNT_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "FNC_TN_CNT_LLY_FSC",
            "dataType": "int64",
            "sourceColumn": "FNC_TN_CNT_LLY_FSC"
          }
        ],
        "partitions": [
          {
            "name": "Txn_Sales_202101",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210101 and [TM_SKY] <= 20210131)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210101 and [TM_SKY] <= 20210131)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Txn_Sales_202102",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210201 and [TM_SKY] <= 20210228)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210201 and [TM_SKY] <= 20210228)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Txn_Sales_202103",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210301 and [TM_SKY] <= 20210331)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210301 and [TM_SKY] <= 20210331)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Txn_Sales_202104",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210401 and [TM_SKY] <= 20210430)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210401 and [TM_SKY] <= 20210430)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Txn_Sales_202105",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210501 and [TM_SKY] <= 20210531)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210501 and [TM_SKY] <= 20210531)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Txn_Sales_202106",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210601 and [TM_SKY] <= 20210630)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210601 and [TM_SKY] <= 20210630)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Txn_Sales_202107",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210701 and [TM_SKY] <= 20210731)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210701 and [TM_SKY] <= 20210731)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Txn_Sales_202108",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210801 and [TM_SKY] <= 20210831)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210801 and [TM_SKY] <= 20210831)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Txn_Sales_202109",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210901 and [TM_SKY] <= 20210930)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210901 and [TM_SKY] <= 20210930)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Txn_Sales_202110",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211001 and [TM_SKY] <= 20211031)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211001 and [TM_SKY] <= 20211031)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Txn_Sales_202111",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211101 and [TM_SKY] <= 20211130)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211101 and [TM_SKY] <= 20211130)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Txn_Sales_202112",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211201 and [TM_SKY] <= 20211231)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_MB_TXN_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"CHNL_HST_SKY\", \"CHNL_SKY\", \"UT_ID\", \"P_CT_BUS_KEY\", \"FNC_TN_CNT\", \"FNC_TN_CNT_LY_FSC\",\"FNC_TN_CNT_LLY_FSC\", \"FNC_TN_CNT_LY_HLDY\", \"FNC_TN_CNT_LY_CLDR\", \"FNC_TN_CNT_DIFF_TY_VS_LY_FSC\",\"FNC_TN_CNT_DIFF_TY_VS_LLY_FSC\", \"FNC_TN_CNT_DIFF_TY_VS_LY_HLDY\", \"FNC_TN_CNT_DIFF_TY_VS_LY_CLDR\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211201 and [TM_SKY] <= 20211231)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Daily_Sales",
        "isHidden": true,
        "columns": [
          {
            "name": "GEO_HST_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "GEO_HST_SKY"
          },
          {
            "name": "GEO_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "GEO_SKY"
          },
          {
            "name": "TM_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "TM_SKY"
          },
          {
            "name": "P_SUB_CT_ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "P_SUB_CT_ID"
          },
          {
            "name": "BYR_HST_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BYR_HST_SKY"
          },
          {
            "name": "BYR_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BYR_SKY"
          },
          {
            "name": "UT_ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "UT_ID"
          },
          {
            "name": "SLS_PLN_QT",
            "dataType": "double",
            "sourceColumn": "SLS_PLN_QT"
          },
          {
            "name": "SLS_FNC_AM",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM"
          },
          {
            "name": "SLS_FNC_QTY",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_QTY"
          },
          {
            "name": "DM_FNC_AM",
            "dataType": "double",
            "sourceColumn": "DM_FNC_AM"
          },
          {
            "name": "DM_FNC_CLRN_AM",
            "dataType": "double",
            "sourceColumn": "DM_FNC_CLRN_AM"
          },
          {
            "name": "DM_FNC_PROMO_AM",
            "dataType": "double",
            "sourceColumn": "DM_FNC_PROMO_AM"
          },
          {
            "name": "SLS_FNC_CLRN_AM",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_AM"
          },
          {
            "name": "SLS_FNC_CLRN_MKDN_AM",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_MKDN_AM"
          },
          {
            "name": "SLS_FNC_PROMO_AM",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_AM"
          },
          {
            "name": "SLS_FNC_PROMO_MKDN_AM",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_MKDN_AM"
          },
          {
            "name": "SLS_FNC_CLRN_QTY",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_CLRN_QTY"
          },
          {
            "name": "SLS_FNC_SCN_QTY",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_SCN_QTY"
          },
          {
            "name": "INV_SHRK_AM",
            "dataType": "double",
            "sourceColumn": "INV_SHRK_AM"
          },
          {
            "name": "INV_CLRN_QTY",
            "dataType": "double",
            "sourceColumn": "INV_CLRN_QTY"
          },
          {
            "name": "SLS_FNC_AM_COMP",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_COMP"
          },
          {
            "name": "SLS_FNC_AM_NCOMP",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_NCOMP"
          },
          {
            "name": "COGS_FNC",
            "dataType": "double",
            "sourceColumn": "COGS_FNC"
          },
          {
            "name": "DM_FNC_RRTL_AM",
            "dataType": "double",
            "sourceColumn": "DM_FNC_RRTL_AM"
          },
          {
            "name": "SLS_FNC_MKDN_AM",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_MKDN_AM"
          },
          {
            "name": "SLS_FNC_RRTL_MKDN_AM",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_RRTL_MKDN_AM"
          },
          {
            "name": "SLS_FNC_AN_PLN_AM",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AN_PLN_AM"
          },
          {
            "name": "DM_FNC_AN_PLN_AM",
            "dataType": "double",
            "sourceColumn": "DM_FNC_AN_PLN_AM"
          },
          {
            "name": "INV_SHRK_AN_PLN_AM",
            "dataType": "double",
            "sourceColumn": "INV_SHRK_AN_PLN_AM"
          },
          {
            "name": "SLS_FNC_NCLRN_AM",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_NCLRN_AM"
          },
          {
            "name": "DM_FNC_NCLRN_AM",
            "dataType": "double",
            "sourceColumn": "DM_FNC_NCLRN_AM"
          },
          {
            "name": "DM_FNC_DIFF_TY_VS_AP",
            "dataType": "double",
            "sourceColumn": "DM_FNC_DIFF_TY_VS_AP"
          },
          {
            "name": "SLS_FNC_DIFF_TY_VS_AP",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_DIFF_TY_VS_AP"
          },
          {
            "name": "INV_SHRK_DIFF_TY_VS_AP",
            "dataType": "double",
            "sourceColumn": "INV_SHRK_DIFF_TY_VS_AP"
          },
          {
            "name": "SLS_PLN_QT_DIFF_TY_VS_AP",
            "dataType": "double",
            "sourceColumn": "SLS_PLN_QT_DIFF_TY_VS_AP"
          },
          {
            "name": "SLS_FNC_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_LY_CLDR"
          },
          {
            "name": "SLS_FNC_QTY_LY_CLDR",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_QTY_LY_CLDR"
          },
          {
            "name": "DM_FNC_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "DM_FNC_AM_LY_CLDR"
          },
          {
            "name": "DM_FNC_CLRN_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "DM_FNC_CLRN_AM_LY_CLDR"
          },
          {
            "name": "DM_FNC_PROMO_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "DM_FNC_PROMO_AM_LY_CLDR"
          },
          {
            "name": "SLS_FNC_CLRN_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_AM_LY_CLDR"
          },
          {
            "name": "SLS_FNC_CLRN_MKDN_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_MKDN_AM_LY_CLDR"
          },
          {
            "name": "SLS_FNC_PROMO_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_AM_LY_CLDR"
          },
          {
            "name": "SLS_FNC_PROMO_MKDN_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_MKDN_AM_LY_CLDR"
          },
          {
            "name": "SLS_FNC_CLRN_QTY_LY_CLDR",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_CLRN_QTY_LY_CLDR"
          },
          {
            "name": "SLS_FNC_SCN_QTY_LY_CLDR",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_SCN_QTY_LY_CLDR"
          },
          {
            "name": "INV_SHRK_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "INV_SHRK_AM_LY_CLDR"
          },
          {
            "name": "INV_CLRN_QTY_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "INV_CLRN_QTY_LY_CLDR"
          },
          {
            "name": "SLS_FNC_AM_COMP_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_COMP_LY_CLDR"
          },
          {
            "name": "SLS_FNC_AM_NCOMP_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_NCOMP_LY_CLDR"
          },
          {
            "name": "COGS_FNC_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "COGS_FNC_LY_CLDR"
          },
          {
            "name": "DM_FNC_RRTL_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "DM_FNC_RRTL_AM_LY_CLDR"
          },
          {
            "name": "SLS_FNC_MKDN_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_MKDN_AM_LY_CLDR"
          },
          {
            "name": "SLS_FNC_RRTL_MKDN_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_RRTL_MKDN_AM_LY_CLDR"
          },
          {
            "name": "SLS_FNC_NCLRN_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_NCLRN_AM_LY_CLDR"
          },
          {
            "name": "DM_FNC_NCLRN_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "DM_FNC_NCLRN_AM_LY_CLDR"
          },
          {
            "name": "SLS_FNC_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_LY_FSC"
          },
          {
            "name": "SLS_FNC_QTY_LY_FSC",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_QTY_LY_FSC"
          },
          {
            "name": "DM_FNC_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_AM_LY_FSC"
          },
          {
            "name": "DM_FNC_CLRN_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_CLRN_AM_LY_FSC"
          },
          {
            "name": "DM_FNC_PROMO_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_PROMO_AM_LY_FSC"
          },
          {
            "name": "SLS_FNC_CLRN_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_AM_LY_FSC"
          },
          {
            "name": "SLS_FNC_CLRN_MKDN_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_MKDN_AM_LY_FSC"
          },
          {
            "name": "SLS_FNC_PROMO_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_AM_LY_FSC"
          },
          {
            "name": "SLS_FNC_PROMO_MKDN_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_MKDN_AM_LY_FSC"
          },
          {
            "name": "SLS_FNC_CLRN_QTY_LY_FSC",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_CLRN_QTY_LY_FSC"
          },
          {
            "name": "SLS_FNC_SCN_QTY_LY_FSC",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_SCN_QTY_LY_FSC"
          },
          {
            "name": "INV_SHRK_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "INV_SHRK_AM_LY_FSC"
          },
          {
            "name": "INV_CLRN_QTY_LY_FSC",
            "dataType": "double",
            "sourceColumn": "INV_CLRN_QTY_LY_FSC"
          },
          {
            "name": "SLS_FNC_AM_COMP_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_COMP_LY_FSC"
          },
          {
            "name": "SLS_FNC_AM_NCOMP_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_NCOMP_LY_FSC"
          },
          {
            "name": "COGS_FNC_LY_FSC",
            "dataType": "double",
            "sourceColumn": "COGS_FNC_LY_FSC"
          },
          {
            "name": "DM_FNC_RRTL_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_RRTL_AM_LY_FSC"
          },
          {
            "name": "SLS_FNC_MKDN_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_MKDN_AM_LY_FSC"
          },
          {
            "name": "SLS_FNC_RRTL_MKDN_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_RRTL_MKDN_AM_LY_FSC"
          },
          {
            "name": "SLS_FNC_NCLRN_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_NCLRN_AM_LY_FSC"
          },
          {
            "name": "DM_FNC_NCLRN_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_NCLRN_AM_LY_FSC"
          },
          {
            "name": "SLS_FNC_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_LY_HLDY"
          },
          {
            "name": "SLS_FNC_QTY_LY_HLDY",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_QTY_LY_HLDY"
          },
          {
            "name": "DM_FNC_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "DM_FNC_AM_LY_HLDY"
          },
          {
            "name": "DM_FNC_CLRN_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "DM_FNC_CLRN_AM_LY_HLDY"
          },
          {
            "name": "DM_FNC_PROMO_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "DM_FNC_PROMO_AM_LY_HLDY"
          },
          {
            "name": "SLS_FNC_CLRN_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_AM_LY_HLDY"
          },
          {
            "name": "SLS_FNC_CLRN_MKDN_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_MKDN_AM_LY_HLDY"
          },
          {
            "name": "SLS_FNC_PROMO_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_AM_LY_HLDY"
          },
          {
            "name": "SLS_FNC_PROMO_MKDN_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_MKDN_AM_LY_HLDY"
          },
          {
            "name": "SLS_FNC_CLRN_QTY_LY_HLDY",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_CLRN_QTY_LY_HLDY"
          },
          {
            "name": "SLS_FNC_SCN_QTY_LY_HLDY",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_SCN_QTY_LY_HLDY"
          },
          {
            "name": "INV_SHRK_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "INV_SHRK_AM_LY_HLDY"
          },
          {
            "name": "INV_CLRN_QTY_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "INV_CLRN_QTY_LY_HLDY"
          },
          {
            "name": "SLS_FNC_AM_COMP_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_COMP_LY_HLDY"
          },
          {
            "name": "SLS_FNC_AM_NCOMP_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_NCOMP_LY_HLDY"
          },
          {
            "name": "COGS_FNC_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "COGS_FNC_LY_HLDY"
          },
          {
            "name": "DM_FNC_RRTL_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "DM_FNC_RRTL_AM_LY_HLDY"
          },
          {
            "name": "SLS_FNC_MKDN_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_MKDN_AM_LY_HLDY"
          },
          {
            "name": "SLS_FNC_RRTL_MKDN_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_RRTL_MKDN_AM_LY_HLDY"
          },
          {
            "name": "SLS_FNC_NCLRN_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_NCLRN_AM_LY_HLDY"
          },
          {
            "name": "DM_FNC_NCLRN_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "DM_FNC_NCLRN_AM_LY_HLDY"
          },
          {
            "name": "SLS_FNC_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "DM_FNC_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "DM_FNC_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "INV_SHRK_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "INV_SHRK_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "COGS_FNC_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "COGS_FNC_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "SLS_FNC_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_FNC_QTY_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_QTY_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "DM_FNC_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "INV_SHRK_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "INV_SHRK_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "INV_CLRN_QTY_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "INV_CLRN_QTY_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "COGS_FNC_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "COGS_FNC_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "SLS_FNC_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "DM_FNC_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "DM_FNC_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "INV_SHRK_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "INV_SHRK_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "COGS_FNC_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "COGS_FNC_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "SLS_FNC_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_LLY_FSC"
          },
          {
            "name": "SLS_FNC_QTY_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_QTY_LLY_FSC"
          },
          {
            "name": "DM_FNC_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_AM_LLY_FSC"
          },
          {
            "name": "DM_FNC_CLRN_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_CLRN_AM_LLY_FSC"
          },
          {
            "name": "DM_FNC_PROMO_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_PROMO_AM_LLY_FSC"
          },
          {
            "name": "SLS_FNC_CLRN_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_AM_LLY_FSC"
          },
          {
            "name": "SLS_FNC_CLRN_MKDN_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_MKDN_AM_LLY_FSC"
          },
          {
            "name": "SLS_FNC_PROMO_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_AM_LLY_FSC"
          },
          {
            "name": "SLS_FNC_PROMO_MKDN_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_MKDN_AM_LLY_FSC"
          },
          {
            "name": "SLS_FNC_CLRN_QTY_LLY_FSC",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_CLRN_QTY_LLY_FSC"
          },
          {
            "name": "SLS_FNC_SCN_QTY_LLY_FSC",
            "dataType": "int64",
            "sourceColumn": "SLS_FNC_SCN_QTY_LLY_FSC"
          },
          {
            "name": "INV_SHRK_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "INV_SHRK_AM_LLY_FSC"
          },
          {
            "name": "INV_CLRN_QTY_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "INV_CLRN_QTY_LLY_FSC"
          },
          {
            "name": "SLS_FNC_AM_COMP_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_COMP_LLY_FSC"
          },
          {
            "name": "SLS_FNC_AM_NCOMP_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_NCOMP_LLY_FSC"
          },
          {
            "name": "COGS_FNC_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "COGS_FNC_LLY_FSC"
          },
          {
            "name": "DM_FNC_RRTL_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_RRTL_AM_LLY_FSC"
          },
          {
            "name": "SLS_FNC_MKDN_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_MKDN_AM_LLY_FSC"
          },
          {
            "name": "SLS_FNC_RRTL_MKDN_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_RRTL_MKDN_AM_LLY_FSC"
          },
          {
            "name": "SLS_FNC_NCLRN_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_NCLRN_AM_LLY_FSC"
          },
          {
            "name": "DM_FNC_NCLRN_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_NCLRN_AM_LLY_FSC"
          },
          {
            "name": "SLS_FNC_AM_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "DM_FNC_AM_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_AM_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "INV_SHRK_AM_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "INV_SHRK_AM_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "COGS_FNC_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "COGS_FNC_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC"
          },
          {
            "name": "DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC"
          }
        ],
        "partitions": [
          {
            "name": "Daily_Sales_202109",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210901 and [TM_SKY] <= 20210930)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210901 and [TM_SKY] <= 20210930)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Daily_Sales_202102",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210201 and [TM_SKY] <= 20210228)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210201 and [TM_SKY] <= 20210228)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Daily_Sales_202103",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210301 and [TM_SKY] <= 20210331)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210301 and [TM_SKY] <= 20210331)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Daily_Sales_202104",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210401 and [TM_SKY] <= 20210430)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210401 and [TM_SKY] <= 20210430)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Daily_Sales_202105",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210501 and [TM_SKY] <= 20210531)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210501 and [TM_SKY] <= 20210531)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Daily_Sales_202106",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210601 and [TM_SKY] <= 20210630)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210601 and [TM_SKY] <= 20210630)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Daily_Sales_202107",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210701 and [TM_SKY] <= 20210731)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210701 and [TM_SKY] <= 20210731)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Daily_Sales_202108",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210801 and [TM_SKY] <= 20210831)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210801 and [TM_SKY] <= 20210831)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Daily_Sales_202110",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211001 and [TM_SKY] <= 20211031)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211001 and [TM_SKY] <= 20211031)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Daily_Sales_202101",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210101 and [TM_SKY] <= 20210131)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210101 and [TM_SKY] <= 20210131)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Daily_Sales_202111",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211101 and [TM_SKY] <= 20211130)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211101 and [TM_SKY] <= 20211130)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Daily_Sales_202112",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211201 and [TM_SKY] <= 20211231)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_DLY_SL_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_DLY_SL_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_DLY_SL_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"P_SUB_CT_ID\", \"BYR_HST_SKY\", \"BYR_SKY\", \"UT_ID\", \"SLS_PLN_QT\", \"SLS_FNC_AM\", \"SLS_FNC_QTY\", \"DM_FNC_AM\", \"DM_FNC_CLRN_AM\", \"DM_FNC_PROMO_AM\", \"SLS_FNC_CLRN_AM\", \"SLS_FNC_CLRN_MKDN_AM\", \"SLS_FNC_PROMO_AM\", \"SLS_FNC_PROMO_MKDN_AM\", \"SLS_FNC_CLRN_QTY\", \"SLS_FNC_SCN_QTY\", \"INV_SHRK_AM\", \"INV_CLRN_QTY\", \"SLS_FNC_AM_COMP\", \"SLS_FNC_AM_NCOMP\", \"COGS_FNC\", \"DM_FNC_RRTL_AM\", \"SLS_FNC_MKDN_AM\", \"SLS_FNC_RRTL_MKDN_AM\", \"SLS_FNC_AN_PLN_AM\", \"DM_FNC_AN_PLN_AM\", \"INV_SHRK_AN_PLN_AM\", \"SLS_FNC_NCLRN_AM\", \"DM_FNC_NCLRN_AM\", \"DM_FNC_DIFF_TY_VS_AP\", \"SLS_FNC_DIFF_TY_VS_AP\", \"INV_SHRK_DIFF_TY_VS_AP\", \"SLS_PLN_QT_DIFF_TY_VS_AP\", \"SLS_FNC_AM_LY_CLDR\", \"SLS_FNC_QTY_LY_CLDR\", \"DM_FNC_AM_LY_CLDR\", \"DM_FNC_CLRN_AM_LY_CLDR\", \"DM_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_CLRN_AM_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_LY_CLDR\", \"SLS_FNC_PROMO_AM_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_LY_CLDR\", \"SLS_FNC_CLRN_QTY_LY_CLDR\", \"SLS_FNC_SCN_QTY_LY_CLDR\", \"INV_SHRK_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"SLS_FNC_AM_COMP_LY_CLDR\", \"SLS_FNC_AM_NCOMP_LY_CLDR\", \"COGS_FNC_LY_CLDR\", \"DM_FNC_RRTL_AM_LY_CLDR\", \"SLS_FNC_MKDN_AM_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_LY_CLDR\", \"SLS_FNC_NCLRN_AM_LY_CLDR\", \"DM_FNC_NCLRN_AM_LY_CLDR\", \"SLS_FNC_AM_LY_FSC\", \"SLS_FNC_QTY_LY_FSC\", \"DM_FNC_AM_LY_FSC\", \"DM_FNC_CLRN_AM_LY_FSC\", \"DM_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_CLRN_AM_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LY_FSC\", \"SLS_FNC_PROMO_AM_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LY_FSC\", \"SLS_FNC_CLRN_QTY_LY_FSC\", \"SLS_FNC_SCN_QTY_LY_FSC\", \"INV_SHRK_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"SLS_FNC_AM_COMP_LY_FSC\", \"SLS_FNC_AM_NCOMP_LY_FSC\", \"COGS_FNC_LY_FSC\", \"DM_FNC_RRTL_AM_LY_FSC\", \"SLS_FNC_MKDN_AM_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LY_FSC\", \"SLS_FNC_NCLRN_AM_LY_FSC\", \"DM_FNC_NCLRN_AM_LY_FSC\", \"SLS_FNC_AM_LY_HLDY\", \"SLS_FNC_QTY_LY_HLDY\", \"DM_FNC_AM_LY_HLDY\", \"DM_FNC_CLRN_AM_LY_HLDY\", \"DM_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_CLRN_AM_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_LY_HLDY\", \"SLS_FNC_PROMO_AM_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_LY_HLDY\", \"SLS_FNC_CLRN_QTY_LY_HLDY\", \"SLS_FNC_SCN_QTY_LY_HLDY\", \"INV_SHRK_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"SLS_FNC_AM_COMP_LY_HLDY\", \"SLS_FNC_AM_NCOMP_LY_HLDY\", \"COGS_FNC_LY_HLDY\", \"DM_FNC_RRTL_AM_LY_HLDY\", \"SLS_FNC_MKDN_AM_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_LY_HLDY\", \"SLS_FNC_NCLRN_AM_LY_HLDY\", \"DM_FNC_NCLRN_AM_LY_HLDY\", \"SLS_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_CLDR\", \"INV_SHRK_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_CLDR\", \"COGS_FNC_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR\", \"SLS_FNC_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_FSC\", \"COGS_FNC_DIFF_TY_VS_LY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC\", \"SLS_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LY_HLDY\", \"INV_SHRK_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LY_HLDY\", \"COGS_FNC_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY\",\"SLS_FNC_AM_LLY_FSC\", \"SLS_FNC_QTY_LLY_FSC\", \"DM_FNC_AM_LLY_FSC\", \"DM_FNC_CLRN_AM_LLY_FSC\", \"DM_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_CLRN_AM_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_LLY_FSC\", \"SLS_FNC_PROMO_AM_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_LLY_FSC\", \"SLS_FNC_CLRN_QTY_LLY_FSC\", \"SLS_FNC_SCN_QTY_LLY_FSC\", \"INV_SHRK_AM_LLY_FSC\", \"INV_CLRN_QTY_LLY_FSC\", \"SLS_FNC_AM_COMP_LLY_FSC\", \"SLS_FNC_AM_NCOMP_LLY_FSC\", \"COGS_FNC_LLY_FSC\", \"DM_FNC_RRTL_AM_LLY_FSC\", \"SLS_FNC_MKDN_AM_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_LLY_FSC\", \"SLS_FNC_NCLRN_AM_LLY_FSC\", \"DM_FNC_NCLRN_AM_LLY_FSC\",  \"SLS_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_PROMO_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_SCN_QTY_DIFF_TY_VS_LLY_FSC\", \"INV_SHRK_AM_DIFF_TY_VS_LLY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_COMP_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_AM_NCOMP_DIFF_TY_VS_LLY_FSC\", \"COGS_FNC_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC\", \"SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\", \"DM_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211201 and [TM_SKY] <= 20211231)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Weekly_Inventory",
        "isHidden": true,
        "columns": [
          {
            "name": "GEO_HST_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "GEO_HST_SKY"
          },
          {
            "name": "GEO_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "GEO_SKY"
          },
          {
            "name": "TM_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "TM_SKY"
          },
          {
            "name": "BYR_HST_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BYR_HST_SKY"
          },
          {
            "name": "BYR_SKY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BYR_SKY"
          },
          {
            "name": "P_SUB_CT_ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "P_SUB_CT_ID"
          },
          {
            "name": "UT_ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "UT_ID"
          },
          {
            "name": "TG_INV_CST_AM",
            "dataType": "double",
            "sourceColumn": "TG_INV_CST_AM"
          },
          {
            "name": "TG_CLRN_INV_CST_AM",
            "dataType": "double",
            "sourceColumn": "TG_CLRN_INV_CST_AM"
          },
          {
            "name": "INV_CLRN_QTY",
            "dataType": "int64",
            "sourceColumn": "INV_CLRN_QTY"
          },
          {
            "name": "TG_INV_QT",
            "dataType": "int64",
            "sourceColumn": "TG_INV_QT"
          },
          {
            "name": "TG_INV_CST_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "TG_INV_CST_AM_LY_CLDR"
          },
          {
            "name": "TG_CLRN_INV_CST_AM_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "TG_CLRN_INV_CST_AM_LY_CLDR"
          },
          {
            "name": "INV_CLRN_QTY_LY_CLDR",
            "dataType": "int64",
            "sourceColumn": "INV_CLRN_QTY_LY_CLDR"
          },
          {
            "name": "TG_INV_QTY_LY_CLDR",
            "dataType": "int64",
            "sourceColumn": "TG_INV_QTY_LY_CLDR"
          },
          {
            "name": "TG_INV_CST_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "TG_INV_CST_AM_LY_FSC"
          },
          {
            "name": "TG_CLRN_INV_CST_AM_LY_FSC",
            "dataType": "double",
            "sourceColumn": "TG_CLRN_INV_CST_AM_LY_FSC"
          },
          {
            "name": "INV_CLRN_QTY_LY_FSC",
            "dataType": "int64",
            "sourceColumn": "INV_CLRN_QTY_LY_FSC"
          },
          {
            "name": "TG_INV_QTY_LY_FSC",
            "dataType": "int64",
            "sourceColumn": "TG_INV_QTY_LY_FSC"
          },
          {
            "name": "TG_INV_CST_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "TG_INV_CST_AM_LY_HLDY"
          },
          {
            "name": "TG_CLRN_INV_CST_AM_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "TG_CLRN_INV_CST_AM_LY_HLDY"
          },
          {
            "name": "INV_CLRN_QTY_LY_HLDY",
            "dataType": "int64",
            "sourceColumn": "INV_CLRN_QTY_LY_HLDY"
          },
          {
            "name": "TG_INV_QTY_LY_HLDY",
            "dataType": "int64",
            "sourceColumn": "TG_INV_QTY_LY_HLDY"
          },
          {
            "name": "TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR",
            "dataType": "double",
            "sourceColumn": "TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR",
            "dataType": "int64",
            "sourceColumn": "INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "TG_INV_QTY_DIFF_TY_VS_LY_CLDR",
            "dataType": "int64",
            "sourceColumn": "TG_INV_QTY_DIFF_TY_VS_LY_CLDR"
          },
          {
            "name": "TG_INV_CST_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "TG_INV_CST_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC",
            "dataType": "double",
            "sourceColumn": "TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "INV_CLRN_QTY_DIFF_TY_VS_LY_FSC",
            "dataType": "int64",
            "sourceColumn": "INV_CLRN_QTY_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "TG_INV_QTY_DIFF_TY_VS_LY_FSC",
            "dataType": "int64",
            "sourceColumn": "TG_INV_QTY_DIFF_TY_VS_LY_FSC"
          },
          {
            "name": "TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY",
            "dataType": "double",
            "sourceColumn": "TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY",
            "dataType": "int64",
            "sourceColumn": "INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY"
          },
          {
            "name": "TG_INV_QTY_DIFF_TY_VS_LY_HLDY",
            "dataType": "int64",
            "sourceColumn": "TG_INV_QTY_DIFF_TY_VS_LY_HLDY"
          }
        ],
        "partitions": [
          {
            "name": "Weekly_Inventory_202101",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210101 and [TM_SKY] <= 20210131)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210101 and [TM_SKY] <= 20210131)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Weekly_Inventory_202102",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210201 and [TM_SKY] <= 20210228)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210201 and [TM_SKY] <= 20210228)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Weekly_Inventory_202103",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210301 and [TM_SKY] <= 20210331)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210301 and [TM_SKY] <= 20210331)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Weekly_Inventory_202104",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210401 and [TM_SKY] <= 20210430)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210401 and [TM_SKY] <= 20210430)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Weekly_Inventory_202105",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210501 and [TM_SKY] <= 20210531)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210501 and [TM_SKY] <= 20210531)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Weekly_Inventory_202106",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210601 and [TM_SKY] <= 20210630)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210601 and [TM_SKY] <= 20210630)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Weekly_Inventory_202107",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210701 and [TM_SKY] <= 20210731)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210701 and [TM_SKY] <= 20210731)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Weekly_Inventory_202108",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210801 and [TM_SKY] <= 20210831)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210801 and [TM_SKY] <= 20210831)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Weekly_Inventory_202109",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210901 and [TM_SKY] <= 20210930)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20210901 and [TM_SKY] <= 20210930)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Weekly_Inventory_202110",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211001 and [TM_SKY] <= 20211031)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211001 and [TM_SKY] <= 20211031)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Weekly_Inventory_202111",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211101 and [TM_SKY] <= 20211130)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211101 and [TM_SKY] <= 20211130)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Weekly_Inventory_202112",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211201 and [TM_SKY] <= 20211231)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC = Source{[Schema=\"PRES\",Item=\"V_FCT_WK_STRT_INV_P_SUB_CT_CALC\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(PRES_V_FCT_WK_STRT_INV_P_SUB_CT_CALC,{\"GEO_HST_SKY\", \"GEO_SKY\", \"TM_SKY\", \"BYR_HST_SKY\", \"BYR_SKY\", \"P_SUB_CT_ID\", \"UT_ID\", \"TG_INV_CST_AM\", \"TG_CLRN_INV_CST_AM\", \"INV_CLRN_QTY\", \"TG_INV_QT\", \"TG_INV_CST_AM_LY_CLDR\", \"TG_CLRN_INV_CST_AM_LY_CLDR\", \"INV_CLRN_QTY_LY_CLDR\", \"TG_INV_QTY_LY_CLDR\", \"TG_INV_CST_AM_LY_FSC\", \"TG_CLRN_INV_CST_AM_LY_FSC\", \"INV_CLRN_QTY_LY_FSC\", \"TG_INV_QTY_LY_FSC\", \"TG_INV_CST_AM_LY_HLDY\", \"TG_CLRN_INV_CST_AM_LY_HLDY\", \"INV_CLRN_QTY_LY_HLDY\", \"TG_INV_QTY_LY_HLDY\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_CLDR\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_QTY_DIFF_TY_VS_LY_CLDR\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_FSC\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_QTY_DIFF_TY_VS_LY_FSC\", \"TG_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"TG_CLRN_INV_CST_AM_DIFF_TY_VS_LY_HLDY\", \"INV_CLRN_QTY_DIFF_TY_VS_LY_HLDY\", \"TG_INV_QTY_DIFF_TY_VS_LY_HLDY\"}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [TM_SKY] >= 20211201 and [TM_SKY] <= 20211231)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Metric_Switch",
        "columns": [
          {
            "name": "Type",
            "dataType": "string",
            "sourceColumn": "TYP",
            "sortByColumn": "Index"
          },
          {
            "name": "Index",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "INDX_ID",
            "summarizeBy": "none"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_MTRC_SWTH = Source{[Schema=\"PRES\",Item=\"V_MTRC_SWTH\"]}[Data]",
                "in",
                "    PRES_V_MTRC_SWTH"
              ]
            }
          }
        ]
      },
      {
        "name": "RefreshTime",
        "columns": [
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "DAY_DT"
          },
          {
            "name": "Refresh_Time",
            "dataType": "dateTime",
            "sourceColumn": "SSAS_RFSH_TM"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_RFSH_TM = Source{[Schema=\"PRES\",Item=\"V_RFSH_TM\"]}[Data]",
                "in",
                "    PRES_V_RFSH_TM"
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Hierarchy1"
          }
        ]
      },
      {
        "name": "Metrics",
        "columns": [
          {
            "name": "INDX_ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "INDX_ID"
          },
          {
            "type": "calculated",
            "name": "DUMMY_1",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true
          },
          {
            "type": "calculated",
            "name": "DUMMY_2",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true
          },
          {
            "type": "calculated",
            "name": "DUMMY_3",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true
          },
          {
            "type": "calculated",
            "name": "DUMMY_4",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true
          },
          {
            "type": "calculated",
            "name": "DUMMY_5",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true
          },
          {
            "type": "calculated",
            "name": "DUMMY",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true
          },
          {
            "type": "calculated",
            "name": "DUMMY_6",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true
          },
          {
            "type": "calculated",
            "name": "DUMMY_7",
            "dataType": "int64",
            "isDataTypeInferred": true
          },
          {
            "type": "calculated",
            "name": "DUMMY_8",
            "dataType": "int64",
            "isDataTypeInferred": true
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_MTRC = Source{[Schema=\"PRES\",Item=\"V_MTRC\"]}[Data]",
                "in",
                "    PRES_V_MTRC"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Title: % Diff",
            "expression": "IF (    HASONEFILTER ( Metric_Switch[Type] ),    SWITCH (        FILTERS ( Metric_Switch[Type]  ),        \"Sales Diff LY\", \"% Sales Diff LY\",        \"Sales Diff AP\",\"% Sales Diff AP\",        \"DM Diff LY\", \"% DM (FNC) Diff LY\",        \"DM Diff AP\", \"% DM (FNC) Diff AP\",        \"Txn Comp Diff LY\", \"% Txn Comp Diff LY\",        BLANK ()    ),     \"% Sales Diff LY\" ) ",
            "displayFolder": "Others"
          },
          {
            "name": "Title: $ / Cnt Diff",
            "expression": "IF (    HASONEFILTER ( Metric_Switch[Type] ),    SWITCH (        FILTERS ( Metric_Switch[Type] ),        \"Sales Diff LY\", \"$ Sales Diff LY\",        \"Sales Diff AP\",\"$ Sales Diff AP\",        \"DM Diff LY\", \"$ DM (FNC) Diff LY\",        \"DM Diff AP\", \"$ DM (FNC) Diff AP\",        \"Txn Comp Diff LY\", \"Txn Comp Diff LY\",        BLANK ()    ),     \"$ Sales Diff LY\")",
            "displayFolder": "Others"
          },
          {
            "name": "Sls (FNC): $ % Diff TYLYF",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Diff TYLYF], [Sls (FNC): $ LYF], BLANK () ),'Time'[Date]< VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ % Diff TYLYH",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Diff TYLYH], [Sls (FNC): $ LYH], BLANK () ),'Time'[Date]< VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LYF % Wk Cntb",
            "expression": "DIVIDE([Sls (FNC): $ LYF],[Sls (FNC): $ LYF Wk Ttl],BLANK())",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LYF Wk Ttl",
            "expression": "CALCULATE([Sls (FNC): $ LYF],SUMMARIZE('Time','Time'[Week End Date]),ALLEXCEPT('Time','Time'[Calendar Type]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LYH Wk Ttl",
            "expression": "CALCULATE([Sls (FNC): $ LYH],SUMMARIZE('Time','Time'[Week End Date]),ALLEXCEPT('Time','Time'[Calendar Type]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LYH % Wk Cntb",
            "expression": "DIVIDE([Sls (FNC): $ LYH],[Sls (FNC): $ LYH Wk Ttl],BLANK())",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LYC Wk Ttl",
            "expression": "CALCULATE([Sls (FNC): $ LYC],SUMMARIZE('Time','Time'[Week End Date]),ALLEXCEPT('Time','Time'[Calendar Type]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LYC % Wk Cntb",
            "expression": "DIVIDE([Sls (FNC): $ LYC],[Sls (FNC): $ LYC Wk Ttl],BLANK())",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ AP % Wk Cntb",
            "expression": "DIVIDE([Sls (FNC): $ AP],[Sls (FNC): $ AP Wk Ttl],BLANK())",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ AP Wk Ttl",
            "expression": "CALCULATE([Sls (FNC): $ AP],SUMMARIZE('Time','Time'[Week End Date]),All('Time'))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn % LYF",
            "expression": "DIVIDE([Sls (FNC): $ Clrn Mkdn LYF],[Sls (FNC): $ Clrn LYF]+[Sls (FNC): $ Clrn Mkdn LYF],BLANK())",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn % LYH",
            "expression": "DIVIDE([Sls (FNC): $ Clrn Mkdn LYH],[Sls (FNC): $ Clrn LYH]+[Sls (FNC): $ Clrn Mkdn LYH],BLANK())",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn % LYC",
            "expression": "DIVIDE([Sls (FNC): $ Clrn Mkdn LYC],[Sls (FNC): $ Clrn LYC]+[Sls (FNC): $ Clrn Mkdn LYC],BLANK())",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn",
            "expression": "SUM(Daily_Sales[SLS_FNC_CLRN_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn",
            "expression": "SUM(Daily_Sales[SLS_FNC_CLRN_MKDN_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Clrn Qty",
            "expression": "SUM(Daily_Sales[SLS_FNC_CLRN_QTY])",
            "formatString": "#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn %",
            "description": "Clearance Markdown %",
            "expression": "DIVIDE([Sls (FNC): $ Clrn Mkdn],[Sls (FNC): $ Clrn]+[Sls (FNC): $ Clrn Mkdn],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg % Diff TYLYC",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Reg Diff TYLYC], [Sls (FNC): $ Reg LYC], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo % Diff TYLYC",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Promo Diff TYLYC], [Sls (FNC): $ Promo LYC], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn % Diff TYLYC",
            "expression": [
              "CALCULATE(DIVIDE ( [Sls (FNC): $ Clrn Diff TYLYC], [Sls (FNC): $ Clrn LYC], BLANK () ))",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn % Diff TYLYC",
            "expression": [
              "CALCULATE(DIVIDE ( [Sls (FNC): $ Non-Clrn Diff TYLYC], [Sls (FNC): $ Reg LYC], BLANK () ))",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn",
            "expression": "SUM(Daily_Sales[SLS_FNC_NCLRN_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo",
            "expression": "SUM(Daily_Sales[SLS_FNC_PROMO_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg",
            "expression": "SUM(Daily_Sales[SLS_FNC_RRTL_MKDN_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg % Diff TYLYF",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Reg Diff TYLYF], [Sls (FNC): $ Reg LYF], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo % Diff TYLYF",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Promo Diff TYLYF], [Sls (FNC): $ Promo LYF], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn % Diff TYLYF",
            "expression": [
              "CALCULATE(DIVIDE ( [Sls (FNC): $ Clrn Diff TYLYF], [Sls (FNC): $ Clrn LYF], BLANK () ))",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn % Diff TYLYF",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Non-Clrn Diff TYLYF], [Sls (FNC): $ Reg LYF], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg % Diff TYLYH",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Reg Diff TYLYH], [Sls (FNC): $ Reg LYH], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo % Diff TYLYH",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Promo Diff TYLYH], [Sls (FNC): $ Promo LYH], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn % Diff TYLYH",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Clrn Diff TYLYH], [Sls (FNC): $ Clrn LYH], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn % Diff TYLYH",
            "expression": [
              "CALCULATE(DIVIDE ( [Sls (FNC): $ Non-Clrn Diff TYLYH], [Sls (FNC): $ Reg LYH], BLANK () ))",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn",
            "expression": "DIVIDE([Sls (FNC): $],[Txn],BLANK())",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Qty / Txn",
            "expression": "DIVIDE([Sls (FNC): Qty],[Txn],BLANK())",
            "formatString": "0.00",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): $ Comp % Diff TYLYF",
            "expression": "CALCULATE([Sls (FNC): $ % Diff TYLYF],Geography[Store Class]=\"COMP STORE\")",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR LYF",
            "expression": "DIVIDE ([Sls (MB): $ LYF],[Sls (MB): Qty LYF])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR % Diff TYLYF",
            "expression": "DIVIDE ([Sls (MB): $ AUR Diff TYLYF],[Sls (MB): $ AUR LYF])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Qty % Diff TYLYF",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): Qty Diff TYLYF], [Sls (FNC): Qty LYF], BLANK () ),'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Qty Diff TYLYH",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_QTY_DIFF_TY_VS_LY_HLDY]),'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Qty % Diff TYLYH",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): Qty Diff TYLYH], [Sls (FNC): Qty LYH], BLANK () ),'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): $ AUR Diff TYLYH",
            "expression": "CALCULATE([Sls (FNC): $ AUR] - [Sls (FNC): $ AUR LYH],'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Comp % Diff TYLYH",
            "expression": "CALCULATE([Sls (FNC): $ % Diff TYLYH],Geography[Store Class]=\"COMP STORE\")",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR Diff TYLYH",
            "expression": "[Sls (MB): $ AUR] - [Sls (MB): $ AUR LYH]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR % Diff TYLYH",
            "expression": "DIVIDE ([Sls (MB): $ AUR Diff TYLYH],[Sls (MB): $ AUR LYH])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Qty % Diff TYLYC",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): Qty Diff TYLYC], [Sls (FNC): Qty LYC], BLANK () ),'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): $ AUR % Diff TYLYC",
            "expression": "DIVIDE ([Sls (MB): $ AUR Diff TYLYC],[Sls (MB): $ AUR LYC])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR",
            "expression": "DIVIDE ([Sls (MB): $],[Sls (MB): Qty])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Qty",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_QTY])",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Qty",
            "expression": "SUM(Daily_Sales[SLS_FNC_QTY]) ",
            "formatString": "#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Fuel Qty AP",
            "expression": "CALCULATE(SUM (Daily_Sales[SLS_PLN_QT]),'Product'[FUEL]=\"Y\")",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Fuel"
          },
          {
            "name": "Sls (FNC): $ AUR",
            "expression": "DIVIDE([Sls (FNC): $],[Sls (FNC): Qty],BLANK())",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ AP",
            "expression": "sum(Daily_Sales[SLS_FNC_AN_PLN_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Comp % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ Comp % Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ Comp % Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ Comp % Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ Comp % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ % Diff TYAP",
            "expression": [
              "CALCULATE(DIVIDE([Sls (FNC): $ Diff TYAP],[Sls (FNC): $ AP],BLANK()))",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ % Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ % Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ % Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): $ AUR % Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): $ AUR % Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): $ AUR % Diff TYLYF]",
              ", BLANK () ),[Sls (MB): $ AUR % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Fuel Qty Diff TYAP",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_PLN_QT_DIFF_TY_VS_AP]),'Product'[FUEL]=\"Y\")",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Fuel"
          },
          {
            "name": "Sls (FNC): Qty % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): Qty % Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): Qty % Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): Qty % Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): Qty % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Fuel Qty % Diff TYAP",
            "expression": "CALCULATE(DIVIDE([Sls (FNC): Qty Diff TYAP Fuel],[Sls (FNC): Fuel Qty AP],BLANK()),'Time'[Date]<VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0 %);#,0.0 %",
            "displayFolder": "Fuel"
          },
          {
            "name": "Sls (FNC): Qty LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): Qty LYH]",
              ", \"Calendar\", [Sls (FNC): Qty LYC]",
              ", \"Fiscal\",[Sls (FNC): Qty LYF]",
              ", BLANK () ),[Sls (FNC): Qty LYF])"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): $ LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ LYH]",
              ", \"Calendar\", [Sls (FNC): $ LYC]",
              ", \"Fiscal\",[Sls (FNC): $ LYF]",
              ", BLANK () ),[Sls (FNC): $ LYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ Clrn % Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ Clrn % Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ Clrn % Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ Clrn % Diff TYLYF])",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ Non-Clrn % Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ Non-Clrn % Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ Non-Clrn % Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ Non-Clrn % Diff TYLYF])",
              "",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ Non-Clrn LYH]",
              ", \"Calendar\", [Sls (FNC): $ Non-Clrn LYC]",
              ", \"Fiscal\",[Sls (FNC): $ Non-Clrn LYF]",
              ", BLANK () ),[Sls (FNC): $ Non-Clrn LYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ Promo % Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ Promo % Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ Promo % Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ Promo % Diff TYLYF])",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ Promo LYH]",
              ", \"Calendar\", [Sls (FNC): $ Promo LYC]",
              ", \"Fiscal\",[Sls (FNC): $ Promo LYF]",
              ", BLANK () ),[Sls (FNC): $ Promo LYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ Reg % Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ Reg % Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ Reg % Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ Reg % Diff TYLYF])",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ Reg LYH]",
              ", \"Calendar\", [Sls (FNC): $ Reg LYC]",
              ", \"Fiscal\",[Sls (FNC): $ Reg LYF]",
              ", BLANK () ),[Sls (FNC): $ Reg LYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn Diff TYLYF",
            "expression": "CALCULATE([Sls (MB): Qty / Txn Diff TYLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn Diff TYLYF",
            "expression": "[Sls (MB): Qty / Txn] - [Sls (MB): Qty / Txn LYF]",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): $ / Txn Diff TYLYF",
            "expression": "[Sls (MB): $ / Txn] - [Sls (MB): $ / Txn LYF]",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn Diff TYLYF",
            "expression": "CALCULATE([Sls (FNC): $ / Txn]-[Sls (FNC): $ / Txn LYF])",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn Diff TYLYF",
            "expression": "CALCULATE([Sls (MB): $ / Txn Diff TYLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Comp $ / Txn Diff TYLYF",
            "expression": "CALCULATE([Sls (FNC): $ / Txn Diff TYLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn Diff TYLYH",
            "expression": "CALCULATE([Sls (MB): Qty / Txn Diff TYLYH],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): $ / Txn Diff TYLYH",
            "expression": "[Sls (MB): $ / Txn] - [Sls (MB): $ / Txn LYH]",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn Diff TYLYH",
            "expression": "CALCULATE([Sls (FNC): $ / Txn]-[Sls (FNC): $ / Txn LYH])",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn Diff TYLYH",
            "expression": "CALCULATE([Sls (MB): $ / Txn Diff TYLYH],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Comp $ / Txn Diff TYLYH",
            "expression": "CALCULATE([Sls (FNC): $ / Txn Diff TYLYH],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn Diff TYLYC",
            "expression": "CALCULATE([Sls (MB): Qty / Txn Diff TYLYC],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn Diff TYLYC",
            "expression": "[Sls (MB): Qty / Txn] - [Sls (MB): Qty / Txn LYC]",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): $ / Txn Diff TYLYC",
            "expression": "[Sls (MB): $ / Txn] - [Sls (MB): $ / Txn LYC]",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn Diff TYLYC",
            "expression": "CALCULATE([Sls (FNC): $ / Txn]-[Sls (FNC): $ / Txn LYC])",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn Diff TYLYC",
            "expression": "CALCULATE([Sls (MB): $ / Txn Diff TYLYC],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Comp $ / Txn Diff TYLYC",
            "expression": "CALCULATE([Sls (FNC): $ / Txn Diff TYLYC],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ % Diff TYAP WTD Ttl",
            "expression": "CALCULATE (    CALCULATE ( [Sls (FNC): $ % Diff TYAP], 'Time'[Date]<VALUES(RefreshTime[Date])),    ALL ( 'Time' ),    'Time'[Pre-Defined Date Filter] = \"Current Wk\")",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Proj Cumul Ttl",
            "expression": "CALCULATE (    [Sls (FNC): $ AP Cumul Ttl] * ( 1 + [Sls (FNC): $ % Diff TYAP WTD Ttl] ),    'Time'[Date]        >= Values(RefreshTime[Date]) - 1)",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn Diff TYLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): Comp Qty / Txn Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): Comp Qty / Txn Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): Comp Qty / Txn Diff TYLYF]",
              ", BLANK () ),[Sls (MB): Comp Qty / Txn Diff TYLYF])"
            ],
            "formatString": "0.00",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn % Diff TYLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): Comp Qty / Txn % Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): Comp Qty / Txn % Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): Comp Qty / Txn % Diff TYLYF]",
              ", BLANK () ),[Sls (MB): Comp Qty / Txn % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): $ Diff TYLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_AM_DIFF_TY_VS_LY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ % Diff TYLYF",
            "expression": [
              "DIVIDE (",
              "            [Sls (MB): $] - [Sls (MB): $ LYF],",
              "            ABS([Sls (MB): $ LYF])",
              "        )"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ % Diff TYLYH",
            "expression": [
              "DIVIDE (",
              "            [Sls (MB): $] - [Sls (MB): $ LYH],",
              "            ABS([Sls (MB): $ LYH])",
              "        )"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ % Diff TYLYC",
            "expression": [
              "DIVIDE (",
              "            [Sls (MB): $] - [Sls (MB): $ LYC],",
              "            ABS([Sls (MB): $ LYC])",
              "        )"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ AP Cumul Ttl",
            "expression": [
              "",
              "CALCULATE (",
              "    [Sls (FNC): $ AP],",
              "    FILTER (",
              "        ALL ( 'Time' ),",
              "        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )",
              "            && 'Time'[Date] <= MAX ( 'Time'[Date] )",
              "    )",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Diff TYAP",
            "expression": "CALCULATE(sum(Daily_Sales[SLS_FNC_DIFF_TY_VS_AP]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Qty / Txn LYF",
            "expression": "DIVIDE ([Sls (MB): Qty LYF],[Txn: LYF],BLANK())",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn % Diff TYLYF",
            "expression": "CALCULATE([Sls (MB): Qty / Txn % Diff TYLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn % Diff TYLYF",
            "expression": "DIVIDE ([Sls (MB): Qty / Txn Diff TYLYF],[Sls (MB): Qty / Txn LYF])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): $ Comp % Diff TYLYF",
            "expression": [
              "CALCULATE([Sls (MB): $ % Diff TYLYF],Geography[Store Class]=\"COMP STORE\")",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn % Diff TYLYF",
            "expression": "CALCULATE([Sls (MB): $ / Txn % Diff TYLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ / Txn % Diff TYLYF",
            "expression": "DIVIDE ([Sls (MB): $ / Txn Diff TYLYF],[Sls (MB): $ / Txn LYF])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ / Txn LYF",
            "expression": "DIVIDE ([Sls (MB): $ LYF],[Txn: LYF],BLANK())",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Comp $ / Txn % Diff TYLYF",
            "expression": "CALCULATE([Sls (FNC): $ / Txn % Diff TYLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn % Diff TYLYF",
            "expression": "CALCULATE(DIVIDE([Sls (FNC): $ / Txn Diff TYLYF],[Sls (FNC): $ / Txn LYF],BLANK()))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn LYF",
            "expression": "DIVIDE([Sls (FNC): $ LYF],[Txn: LYF],BLANK())",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Qty / Txn LYH",
            "expression": "DIVIDE ([Sls (MB): Qty LYH],[Txn: LYH],BLANK())",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn Diff TYLYH",
            "expression": "[Sls (MB): Qty / Txn] - [Sls (MB): Qty / Txn LYH]",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn % Diff TYLYH",
            "expression": "DIVIDE ([Sls (MB): Qty / Txn Diff TYLYH],[Sls (MB): Qty / Txn LYH])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn % Diff TYLYH",
            "expression": "CALCULATE([Sls (MB): Qty / Txn % Diff TYLYH],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): $ Comp % Diff TYLYH",
            "expression": "CALCULATE([Sls (MB): $ % Diff TYLYH],Geography[Store Class]=\"COMP STORE\")",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn % Diff TYLYH",
            "expression": "CALCULATE([Sls (MB): $ / Txn % Diff TYLYH],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ / Txn % Diff TYLYH",
            "expression": "DIVIDE ([Sls (MB): $ / Txn Diff TYLYH],[Sls (MB): $ / Txn LYH])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ / Txn LYH",
            "expression": "DIVIDE ([Sls (MB): $ LYH],[Txn: LYH],BLANK())",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Comp $ / Txn % Diff TYLYH",
            "expression": "CALCULATE([Sls (FNC): $ / Txn % Diff TYLYH],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn % Diff TYLYH",
            "expression": "CALCULATE(DIVIDE([Sls (FNC): $ / Txn Diff TYLYH],[Sls (FNC): $ / Txn LYH],BLANK()))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn LYH",
            "expression": "DIVIDE([Sls (FNC): $ LYH],[Txn: LYH],BLANK())",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Qty / Txn LYC",
            "expression": "DIVIDE ([Sls (MB): Qty LYC],[Txn: LYC],BLANK())",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn % Diff TYLYC",
            "expression": "CALCULATE([Sls (MB): Qty / Txn % Diff TYLYC],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn % Diff TYLYC",
            "expression": "DIVIDE ([Sls (MB): Qty / Txn Diff TYLYC],[Sls (MB): Qty / Txn LYC])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): $ % Diff TYLYC",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Diff TYLYC], [Sls (FNC): $ LYC], BLANK () ),'Time'[Date]< VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ Comp % Diff TYLYC",
            "expression": "CALCULATE([Sls (MB): $ % Diff TYLYC],Geography[Store Class]=\"COMP STORE\")",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn % Diff TYLYC",
            "expression": "CALCULATE([Sls (MB): $ / Txn % Diff TYLYC],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ / Txn % Diff TYLYC",
            "expression": "DIVIDE ([Sls (MB): $ / Txn Diff TYLYC],[Sls (MB): $ / Txn LYC])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ / Txn LYC",
            "expression": "DIVIDE ([Sls (MB): $ LYC],[Txn: LYC],BLANK())",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Comp $ / Txn % Diff TYLYC",
            "expression": "CALCULATE([Sls (FNC): $ / Txn % Diff TYLYC],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn % Diff TYLYC",
            "expression": "CALCULATE(DIVIDE([Sls (FNC): $ / Txn Diff TYLYC],[Sls (FNC): $ / Txn LYC],BLANK()))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn LYC",
            "expression": "DIVIDE([Sls (FNC): $ LYC],[Txn: LYC],BLANK())",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn",
            "expression": "CALCULATE([Sls (MB): Qty / Txn],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "0.00",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn",
            "expression": "DIVIDE ([Sls (MB): Qty],[Txn],BLANK())",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp $ / Txn",
            "expression": "CALCULATE([Sls (MB): $ / Txn],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ / Txn",
            "expression": "DIVIDE ([Sls (MB): $],[Txn],BLANK())",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Comp $ / Txn",
            "expression": "CALCULATE([Sls (FNC): $ / Txn],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\", [Sls (FNC): $ Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ Diff TYLYF]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): $ AUR Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): $ AUR Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): $ AUR Diff TYLYF]",
              ", BLANK () ),[Sls (MB): $ AUR Diff TYLYF])"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Qty Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\", [Sls (FNC): Qty Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): Qty Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): Qty Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): Qty Diff TYLYF])"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): $ AUR Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ AUR Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ AUR Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ AUR Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ AUR Diff TYLYF])"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\", [Sls (FNC): $ Clrn Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ Clrn Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ Clrn Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ Clrn Diff TYLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\", [Sls (FNC): $ Non-Clrn Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ Non-Clrn Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ Non-Clrn Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ Non-Clrn Diff TYLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\", [Sls (FNC): $ Promo Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ Promo Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ Promo Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ Promo Diff TYLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ Reg Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ Reg Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ Reg Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ Reg Diff TYLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\", [Sls (FNC): $ Clrn Mkdn Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ Clrn Mkdn Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ Clrn Mkdn Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ Clrn Mkdn Diff TYLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Diff TYLYC",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_AM_DIFF_TY_VS_LY_CLDR]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg Diff TYLYC",
            "expression": [
              "CALCULATE(SUM(Daily_Sales[SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_CLDR]))",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo Diff TYLYC",
            "expression": [
              "CALCULATE(SUM(Daily_Sales[SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR]))",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn Diff TYLYC",
            "expression": [
              "CALCULATE(SUM(Daily_Sales[SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR]))",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg Diff TYLYF",
            "expression": [
              "CALCULATE(SUM(Daily_Sales[SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_FSC]))",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo Diff TYLYF",
            "expression": [
              "CALCULATE(SUM(Daily_Sales[SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC]))",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn Diff TYLYF",
            "expression": [
              "CALCULATE(SUM(Daily_Sales[SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC]))",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg Diff TYLYH",
            "expression": [
              "CALCULATE(SUM(Daily_Sales[SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LY_HLDY]))",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo Diff TYLYH",
            "expression": [
              "CALCULATE(SUM(Daily_Sales[SLS_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY]))",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn Diff TYLYH",
            "expression": [
              "CALCULATE(SUM(Daily_Sales[SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY]))",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR Diff TYLYF",
            "expression": "[Sls (MB): $ AUR] - [Sls (MB): $ AUR LYF]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Qty Diff TYLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_QTY_DIFF_TY_VS_LY_FSC]),'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): $ AUR Diff TYLYF",
            "expression": "CALCULATE([Sls (FNC): $ AUR] - [Sls (FNC): $ AUR LYF],'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ AUR Diff TYLYC",
            "expression": "CALCULATE([Sls (FNC): $ AUR] - [Sls (FNC): $ AUR LYC],'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Qty Diff TYLYC",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_QTY_DIFF_TY_VS_LY_CLDR]),'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): $ AUR Diff TYLYC",
            "expression": "[Sls (MB): $ AUR] - [Sls (MB): $ AUR LYC]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Diff TYLYH",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_AM_DIFF_TY_VS_LY_HLDY]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ Diff TYLYF",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC])",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ Diff TYLYH",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ Diff TYLYC",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ AUR LY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Calendar\",[Sls (FNC): $ AUR LYC],",
              " \"Holiday\", [Sls (FNC): $ AUR LYH],",
              " \"Fiscal\", [Sls (FNC): $ AUR LYF],",
              " BLANK()",
              " ),",
              " [Sls (FNC): $ AUR LYF]",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn LY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Calendar\",[Sls (FNC): $ Clrn LYC],",
              " \"Holiday\", [Sls (FNC): $ Clrn LYH],",
              " \"Fiscal\", [Sls (FNC): $ Clrn LYF],",
              " BLANK()",
              " ),",
              " [Sls (FNC): $ Clrn LYF]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn LY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Calendar\",[Sls (FNC): $ Clrn Mkdn LYC],",
              " \"Holiday\", [Sls (FNC): $ Clrn Mkdn LYH],",
              " \"Fiscal\", [Sls (FNC): $ Clrn Mkdn LYF],",
              " BLANK()",
              " ),",
              " [Sls (FNC): $ Clrn Mkdn LYF]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR LY",
            "expression": "DIVIDE ([Sls (MB): $ LY],[Sls (MB): Qty LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ LY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Calendar\",[Sls (MB): $ LYC],",
              " \"Holiday\", [Sls (MB): $ LYH],",
              " \"Fiscal\", [Sls (MB): $ LYF],",
              " BLANK()",
              " ),",
              " [Sls (MB): $ LYF]",
              ")"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Qty LY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Calendar\",[Sls (MB): Qty LYC],",
              " \"Holiday\", [Sls (MB): Qty LYH],",
              " \"Fiscal\", [Sls (MB): Qty LYF],",
              " BLANK()",
              " ),",
              " [Sls (MB): Qty LYF]",
              ")"
            ],
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): $ LYC",
            "expression": "SUM(Daily_Sales[SLS_FNC_AM_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn LYF",
            "expression": "SUM(Daily_Sales[SLS_FNC_CLRN_AM_LY_FSC])",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn LYF",
            "expression": "SUM(Daily_Sales[SLS_FNC_CLRN_MKDN_AM_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn LYH",
            "expression": [
              "SUM(Daily_Sales[SLS_FNC_CLRN_MKDN_AM_LY_HLDY])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn LYH",
            "expression": "SUM(Daily_Sales[SLS_FNC_CLRN_AM_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn LYC",
            "expression": "SUM(Daily_Sales[SLS_FNC_CLRN_AM_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn LYC",
            "expression": "SUM(Daily_Sales[SLS_FNC_CLRN_MKDN_AM_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg LYC",
            "expression": "SUM(Daily_Sales[SLS_FNC_RRTL_MKDN_AM_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo LYC",
            "expression": [
              "SUM(Daily_Sales[SLS_FNC_PROMO_AM_LY_CLDR])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn LYC",
            "expression": [
              "SUM(Daily_Sales[SLS_FNC_NCLRN_AM_LY_CLDR]) ",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg LYF",
            "expression": "SUM(Daily_Sales[SLS_FNC_RRTL_MKDN_AM_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo LYF",
            "expression": "SUM(Daily_Sales[SLS_FNC_PROMO_AM_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn LYF",
            "expression": [
              "SUM(Daily_Sales[SLS_FNC_NCLRN_AM_LY_FSC])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg LYH",
            "expression": "SUM(Daily_Sales[SLS_FNC_RRTL_MKDN_AM_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo LYH",
            "expression": "SUM(Daily_Sales[SLS_FNC_PROMO_AM_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn LYH",
            "expression": [
              "SUM(Daily_Sales[SLS_FNC_NCLRN_AM_LY_HLDY])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Qty LYF",
            "expression": [
              "CALCULATE (sum(Daily_Sales[SLS_FNC_QTY_LY_FSC]))",
              ""
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): $ AUR LYF",
            "expression": "DIVIDE([Sls (FNC): $ LYF],[Sls (FNC): Qty LYF],BLANK())",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Qty LYH",
            "expression": [
              "CALCULATE (sum(Daily_Sales[SLS_FNC_QTY_LY_HLDY]) )",
              ""
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): $ AUR LYH",
            "expression": "DIVIDE([Sls (FNC): $ LYH],[Sls (FNC): Qty LYH],BLANK())",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR LYH",
            "expression": "DIVIDE ([Sls (MB): $ LYH],[Sls (MB): Qty LYH])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Qty LYC",
            "expression": [
              "CALCULATE (sum(Daily_Sales[SLS_FNC_QTY_LY_CLDR]) )",
              ""
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): $ AUR LYC",
            "expression": "DIVIDE([Sls (FNC): $ LYC],[Sls (FNC): Qty LYC],BLANK())",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR LYC",
            "expression": "DIVIDE ([Sls (MB): $ LYC],[Sls (MB): Qty LYC])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LYF",
            "expression": [
              "SUM(Daily_Sales[SLS_FNC_AM_LY_FSC])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LYH",
            "expression": "SUM(Daily_Sales[SLS_FNC_AM_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ LYF",
            "expression": [
              "SUM(MB_Sales[SLS_MKT_BSKT_AM_LY_FSC])",
              ""
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ LYH",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_AM_LY_HLDY])",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ LYC",
            "expression": [
              "SUM(MB_Sales[SLS_MKT_BSKT_AM_LY_CLDR])",
              ""
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Qty LYF",
            "expression": [
              "SUM(MB_Sales[SLS_MKT_BSKT_QTY_LY_FSC])",
              ""
            ],
            "formatString": "0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty LYH",
            "expression": [
              "SUM(MB_Sales[SLS_MKT_BSKT_QTY_LY_HLDY])",
              ""
            ],
            "formatString": "0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty LYC",
            "expression": [
              "SUM(MB_Sales[SLS_MKT_BSKT_QTY_LY_CLDR]) ",
              ""
            ],
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn % Diff TYLYF",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Clrn Mkdn Diff TYLYF], [Sls (FNC): $ Clrn Mkdn LYF], BLANK () ),'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn Diff TYLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn Diff TYLYH",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_HLDY]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn % Diff TYLYH",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Clrn Mkdn Diff TYLYH], [Sls (FNC): $ Clrn Mkdn LYH], BLANK () ),'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn % Diff TYLYC",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Clrn Mkdn Diff TYLYC], [Sls (FNC): $ Clrn Mkdn LYC], BLANK () ),'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn Diff TYLYC",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LY_CLDR]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn % Diff TYLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              "\"Holiday\", [Sls (FNC): $ Clrn Mkdn % Diff TYLYH]",
              ",\"Calendar\",[Sls (FNC): $ Clrn Mkdn % Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ Clrn Mkdn % Diff TYLYF]",
              ", BLANK () ), [Sls (FNC): $ Clrn Mkdn % Diff TYLYF])",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn % LY",
            "description": "Clearance Markdown % LY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              "\"Holiday\", [Sls (FNC): $ Clrn Mkdn % LYH]",
              ",\"Calendar\",[Sls (FNC): $ Clrn Mkdn % LYC]",
              ", \"Fiscal\",[Sls (FNC): $ Clrn Mkdn % LYF]",
              ", BLANK () ), [Sls (FNC): $ Clrn Mkdn % LYF])"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              "\"Holiday\", [Sls (MB): $ % Diff TYLYH]",
              ",\"Calendar\",[Sls (MB): $ % Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): $ % Diff TYLYF]",
              ", BLANK () ), [Sls (MB): $ % Diff TYLYF])"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ % Diff TYLY WTD Ttl",
            "expression": "CALCULATE (    CALCULATE ( [Sls (FNC): $ % Diff TYLY], 'Time'[Date] < Today()),    ALLEXCEPT( 'Time','Time'[Calendar Type] ),    'Time'[Pre-Defined Date Filter] = \"Current Wk\")",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Cumul Ttl",
            "expression": [
              "CALCULATE(CALCULATE (    [Sls (FNC): $],    FILTER (        ALL ( 'Time' ),        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )            && 'Time'[Date] <= MAX ( 'Time'[Date] )    )    ),'Time'[Date]<VALUES(RefreshTime[Date]))",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LY Cumul Ttl",
            "expression": "CALCULATE (    [Sls (FNC): $ LY],    FILTER (        ALLEXCEPT ( 'Time','Time'[Calendar Type] ),        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )            && 'Time'[Date] <= MAX ( 'Time'[Date] )    ))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Comp $ / Txn % Diff TYLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              "\"Holiday\", [Sls (FNC): Comp $ / Txn % Diff TYLYH]",
              ",\"Calendar\",[Sls (FNC): Comp $ / Txn % Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): Comp $ / Txn % Diff TYLYF]",
              ", BLANK () ), [Sls (FNC): Comp $ / Txn % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Comp $ / Txn Diff TYLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              "\"Holiday\", [Sls (FNC): Comp $ / Txn Diff TYLYH]",
              ",\"Calendar\",[Sls (FNC): Comp $ / Txn Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): Comp $ / Txn Diff TYLYF]",
              ", BLANK () ), [Sls (FNC): Comp $ / Txn Diff TYLYF])"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Comp Qty / Txn",
            "expression": "CALCULATE([Sls (FNC): Qty / Txn],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.00",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Comp Qty / Txn Diff TYLY",
            "expression": "CALCULATE([Sls (FNC): Qty / Txn Diff TYLY],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.00",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Qty / Txn Diff TYLY",
            "expression": [
              "CALCULATE([Sls (FNC): Qty / Txn]-[Sls (FNC): Qty / Txn LY])",
              ""
            ],
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Qty / Txn LY",
            "expression": [
              "DIVIDE([Sls (FNC): Qty LY],[Txn: LY],BLANK())",
              "",
              ""
            ],
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Comp Qty / Txn % Diff TYLY",
            "expression": [
              "CALCULATE([Sls (FNC): Qty / Txn % Diff TYLY],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Qty / Txn % Diff TYLY",
            "expression": [
              "CALCULATE(DIVIDE([Sls (FNC): Qty / Txn Diff TYLY],[Sls (FNC): Qty / Txn LY],BLANK()))",
              " "
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): $ LY % Wk Cntb",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ LYH % Wk Cntb]",
              ", \"Calendar\", [Sls (FNC): $ LYC % Wk Cntb]",
              ", \"Fiscal\",[Sls (FNC): $ LYF % Wk Cntb]",
              ", BLANK () ),[Sls (FNC): $ LYF % Wk Cntb])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn % Diff TYLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ / Txn % Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ / Txn % Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ / Txn % Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ / Txn % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn Diff TYLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ / Txn Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): $ / Txn Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): $ / Txn Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): $ / Txn Diff TYLYF])"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn LY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ / Txn LYH]",
              ", \"Calendar\", [Sls (FNC): $ / Txn LYC]",
              ", \"Fiscal\",[Sls (FNC): $ / Txn LYF]",
              ", BLANK () ),[Sls (FNC): $ / Txn LYF])"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Diff TYLYC",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Diff TYLYH",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Diff TYLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC]))",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Comp",
            "expression": "CALCULATE([Sls (FNC): $],Geography[Store Class]=\"COMP STORE\")",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non Comp",
            "expression": "CALCULATE([Sls (FNC): $],Geography[Store Class]=\"NON-COMP STORE\")",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Comp Diff TYLY",
            "expression": [
              "CALCULATE([Sls (FNC): $ Diff TYLY],Geography[Store Class]=\"COMP STORE\")",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non Comp Diff TYLY",
            "expression": "CALCULATE([Sls (FNC): $ Diff TYLY],Geography[Store Class]=\"NON-COMP STORE\")",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Comp LY",
            "expression": "CALCULATE([Sls (FNC): $ LY],Geography[Store Class]=\"COMP STORE\")",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non Comp LY",
            "expression": "CALCULATE([Sls (FNC): $ LY],Geography[Store Class]=\"NON-COMP STORE\")",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Comp % Diff TYLYC",
            "expression": "CALCULATE([Sls (FNC): $ % Diff TYLYC],Geography[Store Class]=\"COMP STORE\")",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LY Wk Ttl",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): $ LYH Wk Ttl]",
              ", \"Calendar\", [Sls (FNC): $ LYC Wk Ttl]",
              ", \"Fiscal\",[Sls (FNC): $ LYF Wk Ttl]",
              ", BLANK () ),[Sls (FNC): $ LYF Wk Ttl])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Clrn Qty LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): Clrn Qty LYH]",
              ", \"Calendar\", [Sls (FNC): Clrn Qty LYC]",
              ", \"Fiscal\",[Sls (FNC): Clrn Qty LYF]",
              ", BLANK () ),[Sls (FNC): Clrn Qty LYF])",
              ""
            ],
            "formatString": "#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Clrn Qty LYH",
            "expression": "SUM(Daily_Sales[SLS_FNC_CLRN_QTY_LY_HLDY])",
            "formatString": "#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Clrn Qty LYC",
            "expression": "SUM(Daily_Sales[SLS_FNC_CLRN_QTY_LY_CLDR])",
            "formatString": "#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Clrn Qty LYF",
            "expression": "SUM(Daily_Sales[SLS_FNC_CLRN_QTY_LY_FSC])",
            "formatString": "#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Clrn Qty Diff TYLYC",
            "expression": [
              "CALCULATE(SUM(Daily_Sales[SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_CLDR]))",
              "",
              ""
            ],
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Clrn Qty Diff TYLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_FSC]))",
            "formatString": "#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Clrn Qty Diff TYLYH",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_CLRN_QTY_DIFF_TY_VS_LY_HLDY]))",
            "formatString": "#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Clrn Qty Diff TYLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): Clrn Qty Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): Clrn Qty Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): Clrn Qty Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): Clrn Qty Diff TYLYF])"
            ],
            "formatString": "#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Clrn Qty % Diff TYLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (FNC): Clrn Qty % Diff TYLYH]",
              ", \"Calendar\", [Sls (FNC): Clrn Qty % Diff TYLYC]",
              ", \"Fiscal\",[Sls (FNC): Clrn Qty % Diff TYLYF]",
              ", BLANK () ),[Sls (FNC): Clrn Qty % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Clrn Qty % Diff TYLYH",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): Clrn QTY Diff TYLYH], [Sls (FNC): Clrn QTY LYH], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Clrn Qty % Diff TYLYF",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): Clrn QTY Diff TYLYF], [Sls (FNC): Clrn QTY LYF], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Clrn Qty % Diff TYLYC",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): Clrn QTY Diff TYLYC], [Sls (FNC): Clrn QTY LYC], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): $ Diff TYLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): $ Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): $ Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): $ Diff TYLYF]",
              ", BLANK () ),[Sls (MB): $ Diff TYLYF])"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Qty Diff TYLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): Qty Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): Qty Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): Qty Diff TYLYF]",
              ", BLANK () ),[Sls (MB): Qty Diff TYLYF])"
            ],
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty Diff TYLYH",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_HLDY])",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty Diff TYLYF",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_FSC])",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty Diff TYLYC",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_QTY_DIFF_TY_VS_LY_CLDR])",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty % Diff TYLYC",
            "expression": [
              "DIVIDE (",
              "            [Sls (MB): Qty] - [Sls (MB): Qty LYC],",
              "            ABS([Sls (MB): Qty LYC])",
              "        )",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty % Diff TYLYH",
            "expression": [
              "DIVIDE (",
              "            [Sls (MB): Qty] - [Sls (MB): Qty LYH],",
              "            ABS([Sls (MB): Qty LYH])",
              "        )"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty % Diff TYLYF",
            "expression": [
              "DIVIDE (",
              "            [Sls (MB): Qty] - [Sls (MB): Qty LYF],",
              "            ABS([Sls (MB): Qty LYF])",
              "        )"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty % Diff TYLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): Qty % Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): Qty % Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): Qty % Diff TYLYF]",
              ", BLANK () ),[Sls (MB): Qty % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): $ / Txn LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): $ / Txn LYH]",
              ", \"Calendar\", [Sls (MB): $ / Txn LYC]",
              ", \"Fiscal\",[Sls (MB): $ / Txn LYF]",
              ", BLANK () ),[Sls (MB): $ / Txn LYF])"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ / Txn Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): $ / Txn Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): $ / Txn Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): $ / Txn Diff TYLYF]",
              ", BLANK () ),[Sls (MB): $ / Txn Diff TYLYF])"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ / Txn % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): $ / Txn % Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): $ / Txn % Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): $ / Txn % Diff TYLYF]",
              ", BLANK () ),[Sls (MB): $ / Txn % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn LYC",
            "expression": "CALCULATE([Sls (MB): $ / Txn LYC],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn LYH",
            "expression": "CALCULATE([Sls (MB): $ / Txn LYH],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): Comp $ / Txn LYH]",
              ", \"Calendar\", [Sls (MB): Comp $ / Txn LYC]",
              ", \"Fiscal\",[Sls (MB): Comp $ / Txn LYF]",
              ", BLANK () ),[Sls (MB): Comp $ / Txn LYF])"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): Comp $ / Txn Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): Comp $ / Txn Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): Comp $ / Txn Diff TYLYF]",
              ", BLANK () ),[Sls (MB): Comp $ / Txn Diff TYLYF])"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): Comp $ / Txn % Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): Comp $ / Txn % Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): Comp $ / Txn % Diff TYLYF]",
              ", BLANK () ),[Sls (MB): Comp $ / Txn % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn LYC",
            "expression": "CALCULATE([Sls (MB): Qty / Txn LYC],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn LYF",
            "expression": "CALCULATE([Sls (MB): Qty / Txn LYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn LYH",
            "expression": "CALCULATE([Sls (MB): Qty / Txn LYH],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): Comp Qty / Txn LYH]",
              ", \"Calendar\", [Sls (MB): Comp Qty / Txn LYC]",
              ", \"Fiscal\",[Sls (MB): Comp Qty / Txn LYF]",
              ", BLANK () ),[Sls (MB): Comp Qty / Txn LYF])"
            ],
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): Qty / Txn LYH]",
              ", \"Calendar\", [Sls (MB): Qty / Txn LYC]",
              ", \"Fiscal\",[Sls (MB): Qty / Txn LYF]",
              ", BLANK () ),[Sls (MB): Qty / Txn LYF])"
            ],
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): Qty / Txn % Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): Qty / Txn % Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): Qty / Txn % Diff TYLYF]",
              ", BLANK () ),[Sls (MB): Qty / Txn % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): Qty / Txn Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): Qty / Txn Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): Qty / Txn Diff TYLYF]",
              ", BLANK () ),[Sls (MB): Qty / Txn Diff TYLYF])"
            ],
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): $ Comp % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): $ Comp % Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): $ Comp % Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): $ Comp % Diff TYLYF]",
              ", BLANK () ),[Sls (MB): $ Comp % Diff TYLYF])"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ Comp Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Sls (MB): $ Comp Diff TYLYH]",
              ", \"Calendar\", [Sls (MB): $ Comp Diff TYLYC]",
              ", \"Fiscal\",[Sls (MB): $ Comp Diff TYLYF]",
              ", BLANK () ),[Sls (MB): $ Comp Diff TYLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0;\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ Comp Diff TYLYC",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0;\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ Comp Diff TYLYH",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0;\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ Comp Diff TYLYF",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_AM_COMP_DIFF_TY_VS_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0;\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "DM (FNC): $ % Diff TYLYF",
            "description": "% Difference in Direct Margin $ TY vs. LY fiscal",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Diff TYLYF], [DM (FNC): $ LYF], BLANK () ),'Time'[Date]< VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): %",
            "expression": "DIVIDE([DM (FNC): $],[Sls (FNC): $],BLANK())",
            "formatString": "#,0.00 %;(#,0.00 %);#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Bps Diff TYLYF",
            "expression": [
              "CALCULATE (",
              "    ( [DM (FNC): %] - [DM (FNC): % LYF] )* 10000)",
              "    ",
              ""
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % LYF",
            "expression": "DIVIDE([DM (FNC): $ LYF],[Sls (FNC): $ LYF],BLANK())",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ % Diff TYLYH",
            "description": "% Difference in Direct Margin $ TY vs. LY holiday",
            "expression": [
              "CALCULATE(DIVIDE ( [DM (FNC): $ Diff TYLYH], [DM (FNC): $ LYH], BLANK () ),'Time'[Date]< VALUES(RefreshTime[Date]))",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % LYH",
            "expression": "DIVIDE([DM (FNC): $ LYH],[Sls (FNC): $ LYH],BLANK())",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Bps Diff TYLYH",
            "expression": [
              "CALCULATE (",
              "    ( [DM (FNC): %] - [DM (FNC): % LYH] )* 10000)",
              "    ",
              ""
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn",
            "description": "Clearance Direct Margin $",
            "expression": "SUM(Daily_Sales[DM_FNC_CLRN_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Clrn LYC",
            "expression": "DIVIDE([DM (FNC): $ Clrn LYC],[Sls (FNC): $ Clrn LYC],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % LYC",
            "expression": "DIVIDE([DM (FNC): $ LYC],[Sls (FNC): $ LYC],BLANK())",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Reg LYC",
            "expression": [
              "DIVIDE([DM (FNC): $ Reg LYC],[Sls (FNC): $ Reg LYC],BLANK())",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Promo LYC",
            "expression": [
              "DIVIDE([DM (FNC): $ Promo LYC],[Sls (FNC): $ Promo LYC],BLANK())",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00 %);#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Non-Clrn LYC",
            "expression": "DIVIDE([DM (FNC): $ Non-Clrn LYC],[Sls (FNC): $ Non-Clrn LYC],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Non-Clrn",
            "expression": "DIVIDE([DM (FNC): $ Non-Clrn],[Sls (FNC): $ Non-Clrn],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Reg",
            "expression": [
              "DIVIDE([DM (FNC): $ Reg],[Sls (FNC): $ Reg],BLANK())",
              "",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg",
            "expression": "SUM(Daily_Sales[DM_FNC_RRTL_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo",
            "expression": "SUM(Daily_Sales[DM_FNC_PROMO_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Reg LYF",
            "expression": [
              "DIVIDE([DM (FNC): $ Reg LYF],[Sls (FNC): $ Reg LYF],BLANK())",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Promo",
            "expression": "DIVIDE([DM (FNC): $ Promo],[Sls (FNC): $ Promo],BLANK()) ",
            "formatString": "#,0.00 %;(#,0.00 %);#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Promo LYF",
            "expression": [
              "DIVIDE([DM (FNC): $ Promo LYF],[Sls (FNC): $ Promo LYF],BLANK())",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00 %);#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Clrn",
            "expression": "DIVIDE([DM (FNC): $ Clrn],[Sls (FNC): $ Clrn],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Clrn LYF",
            "expression": "DIVIDE([DM (FNC): $ Clrn LYF],[Sls (FNC): $ Clrn LYF],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Non-Clrn LYF",
            "expression": [
              "DIVIDE([DM (FNC): $ Non-Clrn LYF],[Sls (FNC): $ Non-Clrn LYF],BLANK())",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Reg LYH",
            "expression": [
              "DIVIDE([DM (FNC): $ Reg LYH],[Sls (FNC): $ Reg LYH],BLANK())",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Promo LYH",
            "expression": [
              "DIVIDE([DM (FNC): $ Promo LYH],[Sls (FNC): $ Promo LYH],BLANK())",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00 %);#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Clrn LYH",
            "expression": "DIVIDE([DM (FNC): $ Clrn LYH],[Sls (FNC): $ Clrn LYH],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Non-Clrn LYH",
            "expression": [
              "DIVIDE([DM (FNC): $ Non-Clrn LYH],[Sls (FNC): $ Non-Clrn LYH],BLANK())",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn",
            "expression": "SUM(Daily_Sales[DM_FNC_NCLRN_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % AP",
            "description": "Annual Plan Direct Margin %",
            "expression": "DIVIDE([DM (FNC): $ AP],[Sls (FNC): $ AP],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ CPG",
            "expression": "DIVIDE([DM (FNC): $],[Sls (FNC): Qty],BLANK())",
            "formatString": "\\$#,0.000;(\\$#,0.000);\\$#,0.000",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ CPG AP",
            "expression": "DIVIDE([DM (FNC): $ AP], [Sls (FNC): Fuel Qty AP],BLANK())",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $",
            "description": "Direct Margin $, sourced from Finance (incl. adjustments)",
            "expression": [
              "SUM(Daily_Sales[DM_FNC_AM])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Diff TYAP",
            "expression": "CALCULATE(SUM(Daily_Sales[DM_FNC_DIFF_TY_VS_AP]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Bps Diff TYLYC",
            "expression": [
              "CALCULATE (",
              "    ( [DM (FNC): %] - [DM (FNC): % LYC] )* 10000)"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ % Diff TYLYC",
            "description": "% Difference in Direct Margin $ TY vs. LY Calendar",
            "expression": [
              "CALCULATE(DIVIDE ( [DM (FNC): $ Diff TYLYC], [DM (FNC): $ LYC], BLANK () ),'Time'[Date]< VALUES(RefreshTime[Date]))",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn LY",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Time'[Calendar Type] ),",
              "    SWITCH (",
              "        FILTERS ( 'Time'[Calendar Type] ),",
              "        \"Holiday\", [DM (FNC): $ Clrn LYH],",
              "        \"Fiscal\", [DM (FNC): $ Clrn LYF],",
              "        \"Calendar\",[DM (FNC): $ Clrn LYC],",
              "                BLANK()",
              "    ),",
              "    [DM (FNC): $ Clrn LYF]",
              ")",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): %",
            "expression": "DIVIDE ([DM (MB): $],[Sls (MB): $])",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Bps Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\", [DM (FNC): % Bps Diff TYLYH]",
              ", \"Calendar\", [DM (FNC): % Bps Diff TYLYC]",
              ", \"Fiscal\",[DM (FNC): % Bps Diff TYLYF]",
              ", BLANK () ), [DM (FNC): % Bps Diff TYLYF])"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ % Diff TYLY",
            "description": "% Difference in Direct Margin $ TY vs. LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\", [DM (FNC): $ % Diff TYLYH]",
              ", \"Calendar\", [DM (FNC): $ % Diff TYLYC]",
              ", \"Fiscal\",[DM (FNC): $ % Diff TYLYF]",
              ", BLANK () ), [DM (FNC): $ % Diff TYLYF])",
              "",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ % Diff TYAP",
            "description": "% Difference in Direct Margin $ TY vs. AP",
            "expression": "CALCULATE(DIVIDE([DM (FNC): $ Diff TYAP],[DM (FNC): $ AP],BLANK()))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ CPG Diff TYAP",
            "expression": "CALCULATE([DM (FNC): $ CPG]-[DM (FNC): $ CPG AP], 'Time'[Date]<VALUES(RefreshTime[Date]))",
            "formatString": "\\$#,0.000;(\\$#,0.000);\\$#,0.000",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): $ LYH]",
              ", \"Calendar\", [DM (FNC): $ LYC]",
              ", \"Fiscal\",[DM (FNC): $ LYF]",
              ", BLANK () ),[DM (FNC): $ LYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): % LYH]",
              ", \"Calendar\", [DM (FNC): % LYC]",
              ", \"Fiscal\",[DM (FNC): % LYF]",
              ", BLANK () ),[DM (FNC): % LYF])",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00 %);#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Clrn LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): % Clrn LYH]",
              ", \"Calendar\", [DM (FNC): % Clrn LYC]",
              ", \"Fiscal\",[DM (FNC): % Clrn LYF]",
              ", BLANK () ),[DM (FNC): % Clrn LYF])",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Non-Clrn LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): % Non-Clrn LYH]",
              ", \"Calendar\", [DM (FNC): % Non-Clrn LYC]",
              ", \"Fiscal\",[DM (FNC): % Non-Clrn LYF]",
              ", BLANK () ),[DM (FNC): % Non-Clrn LYF])",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Promo LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): % Promo LYH]",
              ", \"Calendar\", [DM (FNC): % Promo LYC]",
              ", \"Fiscal\",[DM (FNC): % Promo LYF]",
              ", BLANK () ),[DM (FNC): % Promo LYF])",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00 %);#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Reg LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): % Reg LYH]",
              ", \"Calendar\", [DM (FNC): % Reg LYC]",
              ", \"Fiscal\",[DM (FNC): % Reg LYF]",
              ", BLANK () ),[DM (FNC): % Reg LYF])",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): $ Non-Clrn LYH]",
              ", \"Calendar\", [DM (FNC): $ Non-Clrn LYC]",
              ", \"Fiscal\",[DM (FNC): $ Non-Clrn LYF]",
              ", BLANK () ),[DM (FNC): $ Non-Clrn LYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): $ Promo LYH]",
              ", \"Calendar\", [DM (FNC): $ Promo LYC]",
              ", \"Fiscal\",[DM (FNC): $ Promo LYF]",
              ", BLANK () ),[DM (FNC): $ Promo LYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): $ Reg LYH]",
              ", \"Calendar\", [DM (FNC): $ Reg LYC]",
              ", \"Fiscal\",[DM (FNC): $ Reg LYF]",
              ", BLANK () ),[DM (FNC): $ Reg LYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ % Diff TYAP WTD Ttl",
            "description": "% Difference in Cumulative Direct Margin $ for week to date TY vs. AP",
            "expression": "CALCULATE (    CALCULATE ( [DM (FNC): $ % Diff TYAP], 'Time'[Date]<VALUES(RefreshTime[Date])),    ALL ( 'Time' ),    'Time'[Pre-Defined Date Filter] = \"Current Wk\")",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ % Diff TYLYF",
            "expression": "DIVIDE ([DM (MB): $ Diff TYLYF],[DM (MB): $ LYF])",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ % Diff TYLYH",
            "expression": "DIVIDE ([DM (MB): $ Diff TYLYH],[DM (MB): $ LYH])",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ % Diff TYLYC",
            "expression": "DIVIDE ([DM (MB): $ Diff TYLYC],[DM (MB): $ LYC])",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "COGS (MB): $",
            "description": "Cost of Goods Sold, sourced from Market Basket (excl. Shrink)",
            "expression": "SUM(MB_Sales[COGS_MKT_BSKT])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "DM (FNC): $ Proj Cumul Ttl",
            "expression": [
              "",
              "CALCULATE (",
              "    [DM (FNC): $ AP Cumul Ttl] * ( 1 + [DM (FNC): $ % Diff TYAP WTD Ttl] ),",
              "    'Time'[Date]",
              "        >= VALUES ( RefreshTime[Date] ) - 1",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ AP Cumul Ttl",
            "description": "Cumulative Annual Plan Direct Margin $ for the current week",
            "expression": "CALCULATE (    [DM (FNC): $ AP],    FILTER (        ALL ( 'Time' ),        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )            && 'Time'[Date] <= MAX ( 'Time'[Date] )    ))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Bps Diff TYAP",
            "expression": "CALCULATE( ( [DM (FNC): %] - [DM (FNC): % AP] ) * 10000)",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): % Bps Diff TYLYF",
            "expression": "CALCULATE (([DM (MB): %] - [DM (MB): % LYF])*10000)",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): % LYF",
            "expression": "DIVIDE ([DM (MB): $ LYF],[Sls (MB): $ LYF])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): % Bps Diff TYLYH",
            "expression": "CALCULATE (([DM (MB): %] - [DM (MB): % LYH])*10000)",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): % LYH",
            "expression": "DIVIDE ([DM (MB): $ LYH],[Sls (MB): $ LYH])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): % Bps Diff TYLYC",
            "expression": "CALCULATE (([DM (MB): %] - [DM (MB): % LYC])*10000)",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): % LYC",
            "expression": "DIVIDE ([DM (MB): $ LYC],[Sls (MB): $ LYC])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ AP",
            "description": "Annual Plan Direct Margin $",
            "expression": "SUM(Daily_Sales[DM_FNC_AN_PLN_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $",
            "expression": "[Sls (MB): $] - [COGS (MB): $]",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\", [DM (FNC): $ Diff TYLYH]",
              ", \"Calendar\", [DM (FNC): $ Diff TYLYC]",
              ", \"Fiscal\",[DM (FNC): $ Diff TYLYF]",
              ", BLANK () ),[DM (FNC): $ Diff TYLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ CPG Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): $ CPG Diff TYLYH]",
              ", \"Calendar\", [DM (FNC): $ CPG Diff TYLYC]",
              ", \"Fiscal\",[DM (FNC): $ CPG Diff TYLYF]",
              ", BLANK () ),[DM (FNC): $ CPG Diff TYLYF])"
            ],
            "formatString": "\\$#,0.000;(\\$#,0.000);\\$#,0.000",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (MB): $ Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\", [DM (MB): $ Diff TYLYH]",
              ", \"Calendar\", [DM (MB): $ Diff TYLYC]",
              ", \"Fiscal\",[DM (MB): $ Diff TYLYF]",
              ", BLANK () ),[DM (MB): $ Diff TYLYF]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Diff TYLYC",
            "expression": "CALCULATE(SUM(Daily_Sales[DM_FNC_AM_DIFF_TY_VS_LY_CLDR]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ CPG Diff TYLYF",
            "expression": "CALCULATE([DM (FNC): $ CPG]-[DM (FNC): $ CPG LYF])",
            "formatString": "\\$#,0.000;(\\$#,0.000);\\$#,0.000",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ CPG Diff TYLYC",
            "expression": "CALCULATE([DM (FNC): $ CPG]-[DM (FNC): $ CPG LYC])",
            "formatString": "\\$#,0.000;(\\$#,0.000);\\$#,0.000",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ Diff TYLYH",
            "expression": "CALCULATE(sum(Daily_Sales[DM_FNC_AM_DIFF_TY_VS_LY_HLDY]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ Diff TYLYF",
            "expression": "SUM(MB_Sales[DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ Diff TYLYH",
            "expression": "SUM(MB_Sales[DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ Diff TYLYC",
            "expression": "SUM(MB_Sales[DMGN_MKT_BSKT_AM_DIFF_TY_VS_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Diff TYLYF",
            "expression": "CALCULATE(sum(Daily_Sales[DM_FNC_AM_DIFF_TY_VS_LY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ CPG Diff TYLYH",
            "expression": "CALCULATE([DM (FNC): $ CPG]-[DM (FNC): $ CPG LYH])",
            "formatString": "\\$#,0.000;(\\$#,0.000);\\$#,0.000",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ CPG LY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Calendar\",[DM (FNC): $ CPG LYC],",
              " \"Holiday\", [DM (FNC): $ CPG LYH],",
              " \"Fiscal\", [DM (FNC): $ CPG LYF],",
              " BLANK()",
              " ),",
              " [DM (FNC): $ CPG LYF]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (MB): $ LY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Calendar\",[DM (MB): $ LYC],",
              " \"Holiday\", [DM (MB): $ LYH],",
              " \"Fiscal\", [DM (MB): $ LYF],",
              " BLANK()",
              " ),",
              " [DM (MB): $ LYF]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ LYC",
            "expression": "SUM(Daily_Sales[DM_FNC_AM_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn LYF",
            "expression": "SUM(Daily_Sales[DM_FNC_CLRN_AM_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn LYH",
            "expression": "SUM(Daily_Sales[DM_FNC_CLRN_AM_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn LYC",
            "expression": "SUM(Daily_Sales[DM_FNC_CLRN_AM_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg LYC",
            "expression": "SUM(Daily_Sales[DM_FNC_RRTL_AM_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo LYC",
            "expression": [
              "SUM(Daily_Sales[DM_FNC_PROMO_AM_LY_CLDR])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn LYC",
            "expression": "SUM(Daily_Sales[DM_FNC_NCLRN_AM_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg LYF",
            "expression": "SUM(Daily_Sales[DM_FNC_RRTL_AM_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo LYF",
            "expression": "SUM(Daily_Sales[DM_FNC_PROMO_AM_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn LYF",
            "expression": "SUM(Daily_Sales[DM_FNC_NCLRN_AM_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg LYH",
            "expression": "SUM(Daily_Sales[DM_FNC_RRTL_AM_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo LYH",
            "expression": "SUM(Daily_Sales[DM_FNC_PROMO_AM_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn LYH",
            "expression": "SUM(Daily_Sales[DM_FNC_NCLRN_AM_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ CPG LYF",
            "expression": "DIVIDE([DM (FNC): $ LYF],[Sls (FNC): Qty LYF],BLANK())",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ CPG LYH",
            "expression": "DIVIDE([DM (FNC): $ LYH],[Sls (FNC): Qty LYH],BLANK())",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ CPG LYC",
            "expression": "DIVIDE([DM (FNC): $ LYC],[Sls (FNC): Qty LYC],BLANK())",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ LYH",
            "expression": "SUM(Daily_Sales[DM_FNC_AM_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ LYH",
            "expression": "SUM(MB_Sales[DMGN_MKT_BSKT_AM_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ LYF",
            "expression": "SUM(Daily_Sales[DM_FNC_AM_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ LYF",
            "expression": "SUM(MB_Sales[DMGN_MKT_BSKT_AM_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ LYC",
            "expression": [
              "SUM(MB_Sales[DMGN_MKT_BSKT_AM_LY_CLDR])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ % Diff TYLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              "\"Holiday\", [DM (MB): $ % Diff TYLYH]",
              ",\"Calendar\",[DM (MB): $ % Diff TYLYC]",
              ", \"Fiscal\",[DM (MB): $ % Diff TYLYF]",
              ", BLANK () ), [DM (MB): $ % Diff TYLYF])"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Cumul Ttl",
            "expression": "CALCULATE(CALCULATE (    [DM (FNC): $],    FILTER (        ALL ( 'Time' ),        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )            && 'Time'[Date] <= MAX ( 'Time'[Date] )    )    ),'Time'[Date]<VALUES(RefreshTime[Date]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ LY Cumul Ttl",
            "expression": "CALCULATE (    [DM (FNC): $ LY],    FILTER (        ALLEXCEPT ( 'Time','Time'[Calendar Type] ),        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )            && 'Time'[Date] <= MAX ( 'Time'[Date] )    ))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): $ Clrn Diff TYLYH]",
              ", \"Calendar\", [DM (FNC): $ Clrn Diff TYLYC]",
              ", \"Fiscal\",[DM (FNC): $ Clrn Diff TYLYF]",
              ", BLANK () ),[DM (FNC): $ Clrn Diff TYLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn Diff TYLYC",
            "expression": "CALCULATE(SUM(Daily_Sales[DM_FNC_CLRN_AM_DIFF_TY_VS_LY_CLDR]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn Diff TYLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[DM_FNC_CLRN_AM_DIFF_TY_VS_LY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn Diff TYLYH",
            "expression": "CALCULATE(SUM(Daily_Sales[DM_FNC_CLRN_AM_DIFF_TY_VS_LY_HLDY]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn % Diff TYLY",
            "description": "% Difference in Clearance Direct Margin $ TY vs. LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): $ Clrn % Diff TYLYH]",
              ", \"Calendar\", [DM (FNC): $ Clrn % Diff TYLYC]",
              ", \"Fiscal\",[DM (FNC): $ Clrn % Diff TYLYF]",
              ", BLANK () ),[DM (FNC): $ Clrn % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn % Diff TYLYH",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Clrn Diff TYLYH], ABS([DM (FNC): $ Clrn LYH]), BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn % Diff TYLYC",
            "description": "% Difference in Clearance Direct Margin $ TY vs. LY calendar",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Clrn Diff TYLYC], ABS([DM (FNC): $ Clrn LYC]), BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn % Diff TYLYF",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Clrn Diff TYLYF], ABS([DM (FNC): $ Clrn LYF]), BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): $ Non-Clrn Diff TYLYH]",
              ", \"Calendar\", [DM (FNC): $ Non-Clrn Diff TYLYC]",
              ", \"Fiscal\",[DM (FNC): $ Non-Clrn Diff TYLYF]",
              ", BLANK () ),[DM (FNC): $ Non-Clrn Diff TYLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn Diff TYLYH",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_HLDY]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn Diff TYLYC",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_CLDR]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn Diff TYLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_NCLRN_AM_DIFF_TY_VS_LY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): $ Non-Clrn % Diff TYLYH]",
              ", \"Calendar\", [DM (FNC): $ Non-Clrn % Diff TYLYC]",
              ", \"Fiscal\",[DM (FNC): $ Non-Clrn % Diff TYLYF]",
              ", BLANK () ),[DM (FNC): $ Non-Clrn % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn % Diff TYLYC",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Non-Clrn Diff TYLYC], ABS([DM (FNC): $ Non-Clrn LYC]), BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn % Diff TYLYF",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Non-Clrn Diff TYLYF], ABS([DM (FNC): $ Non-Clrn LYF]), BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn % Diff TYLYH",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Non-Clrn Diff TYLYH], ABS([DM (FNC): $ Non-Clrn LYH]), BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): $ Promo Diff TYLYH]",
              ", \"Calendar\", [DM (FNC): $ Promo Diff TYLYC]",
              ", \"Fiscal\",[DM (FNC): $ Promo Diff TYLYF]",
              ", BLANK () ),[DM (FNC): $ Promo Diff TYLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo Diff TYLYH",
            "expression": "CALCULATE(SUM(Daily_Sales[DM_FNC_PROMO_AM_DIFF_TY_VS_LY_HLDY]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo Diff TYLYC",
            "expression": "CALCULATE(SUM(Daily_Sales[DM_FNC_PROMO_AM_DIFF_TY_VS_LY_CLDR]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo Diff TYLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[DM_FNC_PROMO_AM_DIFF_TY_VS_LY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo % Diff TYLYH",
            "expression": [
              "CALCULATE(DIVIDE ( [DM (FNC): $ Promo Diff TYLYH], [DM (FNC): $ Promo LYH], BLANK () ))",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo % Diff TYLYC",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Promo Diff TYLYC], [DM (FNC): $ Promo LYC], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): $ Promo % Diff TYLYH]",
              ", \"Calendar\", [DM (FNC): $ Promo % Diff TYLYC]",
              ", \"Fiscal\",[DM (FNC): $ Promo % Diff TYLYF]",
              ", BLANK () ),[DM (FNC): $ Promo % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo % Diff TYLYF",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Promo Diff TYLYF], [DM (FNC): $ Promo LYF], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg Diff TYLYC",
            "expression": "CALCULATE(SUM(Daily_Sales[DM_FNC_RRTL_AM_DIFF_TY_VS_LY_CLDR]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg Diff TYLYH",
            "expression": "CALCULATE(SUM(Daily_Sales[DM_FNC_RRTL_AM_DIFF_TY_VS_LY_HLDY]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg Diff TYLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[DM_FNC_RRTL_AM_DIFF_TY_VS_LY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): $ Reg Diff TYLYH]",
              ", \"Calendar\", [DM (FNC): $ Reg Diff TYLYC]",
              ", \"Fiscal\",[DM (FNC): $ Reg Diff TYLYF]",
              ", BLANK () ),[DM (FNC): $ Reg Diff TYLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (FNC): $ Reg % Diff TYLYH]",
              ", \"Calendar\", [DM (FNC): $ Reg % Diff TYLYC]",
              ", \"Fiscal\",[DM (FNC): $ Reg % Diff TYLYF]",
              ", BLANK () ),[DM (FNC): $ Reg % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg % Diff TYLYC",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Reg Diff TYLYC], ABS([DM (FNC): $ Reg LYC]), BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg % Diff TYLYH",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Reg Diff TYLYH], ABS([DM (FNC): $ Reg LYH]), BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg % Diff TYLYF",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Reg Diff TYLYF], ABS([DM (FNC): $ Reg LYF]), BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): % LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (MB): % LYH]",
              ", \"Calendar\", [DM (MB): % LYC]",
              ", \"Fiscal\",[DM (MB): % LYF]",
              ", BLANK () ),[DM (MB): % LYF])",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): % Bps Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[DM (MB): % Bps Diff TYLYH]",
              ", \"Calendar\", [DM (MB): % Bps Diff TYLYC]",
              ", \"Fiscal\",[DM (MB): % Bps Diff TYLYF]",
              ", BLANK () ),[DM (MB): % Bps Diff TYLYF])"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Reg Bps Diff TYLY",
            "expression": [
              "CALCULATE( ( [DM (FNC): % Reg] - [DM (FNC): % Reg LY] ) * 10000)",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Promo Bps Diff TYLY",
            "expression": "CALCULATE(( [DM (FNC): % Promo] - [DM (FNC): % Promo LY] ) * 10000)",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Clrn Bps Diff TYLY",
            "expression": "CALCULATE( ( [DM (FNC): % Clrn] - [DM (FNC): % Clrn LY] ) * 10000)",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "Txn",
            "expression": [
              "SWITCH (",
              "    TRUE (),",
              "    ISFILTERED ( 'Product'[L3-Sub Category] ), [Txn: L3],",
              "    ISFILTERED ( 'Product'[L4-Category] ), [Txn: L4],",
              "    ISFILTERED ( 'Product'[L5-Business Segment] ), [Txn: L5],",
              "    ISFILTERED ( 'Product'[L6-Merchandise Area] ), IF (",
              "        CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"FRESH\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"GROCERY\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"HARDLINES\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"HEALTH AND BEAUTY\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"IN AND OUTDOOR HOME\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"PETS AND CONSUMABLES\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"PRESCRIPTIONS\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"SOFTLINES\" )",
              "            && NOT ( CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"Gas Station\" ) ),",
              "        [Txn: L7],",
              "        [Txn: L6]",
              "    ),",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L3",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L3-Sub Category] ),",
              "   CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[P_SUB_CT_ID])",
              "        )",
              "    ),      ",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L4",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L4-Category] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[P_CT_ID])",
              "        )",
              "    ),       ",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L5",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L5-Business Segment] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[BUS_SEG_ID])",
              "        )",
              "    )",
              "    ,",
              "    BLANK ()",
              ")"
            ],
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L6",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L6-Merchandise Area] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[MDS_ARE_ID])",
              "        )",
              "    ),",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L7",
            "expression": [
              "",
              "   CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[MJR_CORP_ID])",
              "        )",
              "    )",
              "",
              ""
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp Cumul Ttl",
            "expression": [
              "CALCULATE([Txn: Cumul Ttl],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
              ""
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp Hcy Pen",
            "expression": "CALCULATE([Txn: Hcy Pen],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Txn: Comp LYH]",
              ", \"Calendar\", [Txn: Comp LYC]",
              ", \"Fiscal\",[Txn: Comp LYF]",
              ", BLANK () ),[Txn: Comp LYF])",
              ""
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp LY Cumul Ttl",
            "expression": [
              "IF(HASONEFILTER('Time'[Calendar Type]),",
              "SWITCH(FILTERS ( 'Time'[Calendar Type] ),",
              "\"Fiscal\",[Txn: Comp LYF Cumul Ttl],",
              "\"Holiday\",[Txn: Comp LYH Cumul Ttl],",
              "\"Calendar\",[Txn: Comp LYC Cumul Ttl],",
              "BLANK()),",
              "[Txn: Comp LYF Cumul Ttl])",
              ""
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp Pen",
            "expression": [
              "CALCULATE([Txn: Pen],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
              ""
            ],
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Count / Day",
            "expression": [
              "AVERAGEX( KEEPFILTERS(VALUES('Time'[Date])), CALCULATE([Txn]))",
              ""
            ],
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Count / Day % Diff TYLY",
            "expression": "DIVIDE ([Txn: Count / Day Diff TYLY],[Txn: Count / Day LY])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Count / Day Diff TYLY",
            "expression": [
              "[Txn: Count / Day] - [Txn: Count / Day LY]",
              ""
            ],
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Count / Day LY",
            "expression": [
              "AVERAGEX( KEEPFILTERS(VALUES('Time'[Date])), CALCULATE([Txn: LY]))",
              ""
            ],
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Cumul Ttl",
            "expression": [
              "CALCULATE (",
              "    CALCULATE (",
              "        [Txn],",
              "        FILTER (",
              "            ALL ( 'Time' ),",
              "            'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )",
              "                && 'Time'[Date] <= MAX ( 'Time'[Date] )",
              "        )",
              "    ),",
              "    'Time'[Date] < TODAY ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Dgtl Pen",
            "expression": [
              "DIVIDE ([Txn], CALCULATE ([Txn], ALL('Channel')), BLANK())",
              ""
            ],
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Dgtl Pen Bps Diff TYLY",
            "expression": "([Txn: Dgtl Pen] - [Txn: Dgtl Pen LY])*10000",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Dgtl Pen LY",
            "expression": [
              "DIVIDE ([Txn: LY], CALCULATE ([Txn: LY], ALL('Channel')), BLANK())",
              ""
            ],
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Hcy Pen",
            "expression": [
              "",
              "SWITCH (",
              "    TRUE (),",
              "    ISFILTERED ( 'Product'[L3-Sub Category] ), DIVIDE ( [Txn: L3], [Txn: L4 all L3], BLANK () ),",
              "    ISFILTERED ( 'Product'[L4-Category] ), DIVIDE ( [Txn: L4], [Txn: L5 all L4], BLANK () ),",
              "    ISFILTERED ( 'Product'[L5-Business Segment] ), DIVIDE ( [Txn: L5], [Txn: L6 all L5], BLANK () ),",
              "    ISFILTERED ( 'Product'[L6-Merchandise Area] ), DIVIDE ( [Txn: L6], [Txn: L7 all L6], BLANK () ),",
              "    BLANK ()",
              ")"
            ],
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L4 all L3",
            "expression": [
              "calculate([Txn: L4],GROUPBY(ALL('Product'),'Product'[L3-Sub Category]))",
              ""
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L5 all L4",
            "expression": [
              "calculate([Txn: L5],GROUPBY(ALL('Product'),'Product'[L4-Category]))",
              ""
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L6 all L5",
            "expression": [
              "calculate([Txn: L6],GROUPBY(ALL('Product'),'Product'[L5-Business Segment]))",
              ""
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L7 all L6",
            "expression": [
              "calculate([Txn: L7],GROUPBY(ALL('Product'),'Product'[L6-Merchandise Area]))",
              ""
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L7 LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Txn: L7 LYH]",
              ", \"Calendar\", [Txn: L7 LYC]",
              ", \"Fiscal\",[Txn: L7 LYF]",
              ", BLANK () ),[Txn: L7 LYF])",
              ""
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: LY Cumul Ttl",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              "\"Holiday\", [Txn: LYH Cumul Ttl]",
              ",\"Calendar\",[Txn: LYC Cumul Ttl]",
              ", \"Fiscal\",[Txn: LYF Cumul Ttl]",
              ", BLANK () ), [Txn: LYF Cumul Ttl])"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Pen",
            "expression": [
              "IF (",
              "    ISBLANK ( [Txn] ),",
              "    BLANK (),",
              "    DIVIDE ( [Txn], CALCULATE ( [Txn: L7], ALL ( 'Product' ) ), BLANK () )",
              ")"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Pen Bps Diff TYLY",
            "expression": "([Txn: Pen] - [Txn: Pen LY])*10000",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Pen LY",
            "expression": [
              "IF (",
              "    ISBLANK ( [Txn: LY] ),",
              "    BLANK (),",
              "    DIVIDE ( [Txn: LY], CALCULATE ( [Txn: L7 LY], ALL ( 'Product' ) ), BLANK () )",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp % Diff TYLYH",
            "expression": "CALCULATE([Txn: % Diff TYLYH],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: LYH",
            "expression": [
              "SWITCH (",
              "    TRUE (),",
              "    ISFILTERED ( 'Product'[L3-Sub Category] ), [Txn: L3 LYH],",
              "    ISFILTERED ( 'Product'[L4-Category] ), [Txn: L4 LYH],",
              "    ISFILTERED ( 'Product'[L5-Business Segment] ), [Txn: L5 LYH],",
              "    ISFILTERED ( 'Product'[L6-Merchandise Area] ), IF (",
              "        CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"FRESH\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"GROCERY\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"HARDLINES\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"HEALTH AND BEAUTY\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"IN AND OUTDOOR HOME\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"PETS AND CONSUMABLES\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"PRESCRIPTIONS\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"SOFTLINES\" )",
              "            && NOT ( CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"Gas Station\" ) ),",
              "        [Txn: L7 LYH],",
              "        [Txn: L6 LYH]",
              "    ),",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp Diff TYLYH",
            "expression": "CALCULATE([Txn: Diff TYLYH],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: % Diff TYLYH",
            "expression": "CALCULATE(DIVIDE([Txn: Diff TYLYH],[Txn: LYH],BLANK()))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: LYF",
            "expression": [
              "SWITCH (",
              "    TRUE (),",
              "    ISFILTERED ( 'Product'[L3-Sub Category] ), [Txn: L3 LYF],",
              "    ISFILTERED ( 'Product'[L4-Category] ), [Txn: L4 LYF],",
              "    ISFILTERED ( 'Product'[L5-Business Segment] ), [Txn: L5 LYF],",
              "    ISFILTERED ( 'Product'[L6-Merchandise Area] ), IF (",
              "        CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"FRESH\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"GROCERY\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"HARDLINES\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"HEALTH AND BEAUTY\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"IN AND OUTDOOR HOME\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"PETS AND CONSUMABLES\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"PRESCRIPTIONS\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"SOFTLINES\" )",
              "            && NOT ( CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"Gas Station\" ) ),",
              "        [Txn: L7 LYF],",
              "        [Txn: L6 LYF]",
              "    ),",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp Diff TYLYC",
            "expression": "CALCULATE([Txn: Diff TYLYC],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Diff TYLYC",
            "expression": "CALCULATE([Txn]-[Txn: LYC])",
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: LYC",
            "expression": [
              "SWITCH (",
              "    TRUE (),",
              "    ISFILTERED ( 'Product'[L3-Sub Category] ), [Txn: L3 LYC],",
              "    ISFILTERED ( 'Product'[L4-Category] ), [Txn: L4 LYC],",
              "    ISFILTERED ( 'Product'[L5-Business Segment] ), [Txn: L5 LYC],",
              "    ISFILTERED ( 'Product'[L6-Merchandise Area] ), IF (",
              "        CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"FRESH\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"GROCERY\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"HARDLINES\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"HEALTH AND BEAUTY\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"IN AND OUTDOOR HOME\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"PETS AND CONSUMABLES\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"PRESCRIPTIONS\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"SOFTLINES\" )",
              "            && NOT ( CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"Gas Station\" ) ),",
              "        [Txn: L7 LYC],",
              "        [Txn: L6 LYC]",
              "    ),",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp % Diff TYLYC",
            "expression": "CALCULATE([Txn: % Diff TYLYC],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: % Diff TYLYC",
            "expression": "CALCULATE(DIVIDE([Txn: Diff TYLYC],[Txn: LYC],BLANK()))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp % Diff TYLYF",
            "expression": "CALCULATE([Txn: % Diff TYLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp",
            "expression": "CALCULATE([Txn],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp Diff TYLYF",
            "expression": "CALCULATE([Txn: Diff TYLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: % Diff TYLYF",
            "expression": "CALCULATE(DIVIDE([Txn: Diff TYLYF],[Txn: LYF],BLANK()))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Diff TYLYF",
            "expression": "CALCULATE([Txn]-[Txn: LYF])",
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Txn: Comp % Diff TYLYH]",
              ", \"Calendar\", [Txn: Comp % Diff TYLYC]",
              ", \"Fiscal\",[Txn: Comp % Diff TYLYF]",
              ", BLANK () ),[Txn: Comp % Diff TYLYF])",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Txn: Comp Diff TYLYH]",
              ", \"Calendar\", [Txn: Comp Diff TYLYC]",
              ", \"Fiscal\",[Txn: Comp Diff TYLYF]",
              ", BLANK () ),[Txn: Comp Diff TYLYF])",
              ""
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Txn: Diff TYLYH]",
              ", \"Calendar\", [Txn: Diff TYLYC]",
              ", \"Fiscal\",[Txn: Diff TYLYF]",
              ", BLANK () ),[Txn: Diff TYLYF])",
              ""
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp LYF Cumul Ttl",
            "expression": "CALCULATE([Txn: LYF Cumul Ttl],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp % Diff TYLY WTD Ttl",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Txn: Comp % Diff TYLYH WTD Ttl] ",
              ", \"Calendar\", [Txn: Comp % Diff TYLYC WTD Ttl]",
              ", \"Fiscal\",[Txn: Comp % Diff TYLYF WTD Ttl]",
              ", BLANK () ),[Txn: Comp % Diff TYLYF WTD Ttl])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp % Diff TYLYF WTD Ttl",
            "expression": [
              "",
              "CALCULATE (",
              "    CALCULATE ( [Txn: Comp % Diff TYLYF], 'Time'[Date]<VALUES(RefreshTime[Date])),",
              "    ALLEXCEPT( 'Time','Time'[Calendar Type] ),",
              "    'Time'[Pre-Defined Date Filter] = \"Current Wk\"",
              ")"
            ],
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp % Diff TYLYH WTD Ttl",
            "expression": [
              "",
              "CALCULATE (",
              "    CALCULATE ( [Txn: Comp % Diff TYLYH], 'Time'[Date]<VALUES(RefreshTime[Date])),",
              "    ALLEXCEPT( 'Time','Time'[Calendar Type] ),",
              "    'Time'[Pre-Defined Date Filter] = \"Current Wk\"",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp % Diff TYLYC WTD Ttl",
            "expression": [
              "",
              "CALCULATE (",
              "    CALCULATE ( [Txn: Comp % Diff TYLYC], 'Time'[Date]<VALUES(RefreshTime[Date])),",
              "    ALLEXCEPT( 'Time','Time'[Calendar Type] ),",
              "    'Time'[Pre-Defined Date Filter] = \"Current Wk\"",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: LYH Cumul Ttl",
            "expression": "CALCULATE (    [Txn: LYH],    FILTER (        ALLEXCEPT ( 'Time','Time'[Calendar Type] ),        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )            && 'Time'[Date] <= MAX ( 'Time'[Date] )    ))",
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp LYH Cumul Ttl",
            "expression": "CALCULATE([Txn: LYH Cumul Ttl],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: LYC Cumul Ttl",
            "expression": "CALCULATE (    [Txn: LYC],    FILTER (        ALLEXCEPT ( 'Time','Time'[Calendar Type] ),        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )            && 'Time'[Date] <= MAX ( 'Time'[Date] )    ))",
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp LYC Cumul Ttl",
            "expression": "CALCULATE([Txn: LYC Cumul Ttl],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Diff TYLYH",
            "expression": "CALCULATE([Txn]-[Txn: LYH])",
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: LY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              "\"Holiday\", [Txn: LYH]",
              ",\"Calendar\",[Txn: LYC]",
              ", \"Fiscal\",[Txn: LYF]",
              ", BLANK () ), [Txn: LYF])"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L7 LYC",
            "expression": [
              "CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_CLDR]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[MJR_CORP_ID])",
              "        )",
              "    )"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L7 LYF",
            "expression": [
              "CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_FSC]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[MJR_CORP_ID])",
              "        )",
              "    )"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L7 LYH",
            "expression": [
              "CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_HLDY]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[MJR_CORP_ID])",
              "        )",
              "    )"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L3 LYC",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L3-Sub Category] ),",
              "   CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_CLDR]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[P_SUB_CT_ID])",
              "        )",
              "    ),      ",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L3 LYF",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L3-Sub Category] ),",
              "   CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_FSC]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[P_SUB_CT_ID])",
              "        )",
              "    ),      ",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L3 LYH",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L3-Sub Category] ),",
              "   CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_HLDY]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[P_SUB_CT_ID])",
              "        )",
              "    ),      ",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L3 LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Txn: L3 LYH]",
              ", \"Calendar\", [Txn: L3 LYC]",
              ", \"Fiscal\",[Txn: L3 LYF]",
              ", BLANK () ),[Txn: L3 LYF])"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L4 LYH",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L4-Category] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_HLDY]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[P_CT_ID])",
              "        )",
              "    ),       ",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L4 LYF",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L4-Category] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_FSC]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[P_CT_ID])",
              "        )",
              "    ),       ",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L4 LYC",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L4-Category] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_CLDR]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[P_CT_ID])",
              "        )",
              "    ),       ",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L4 LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Txn: L4 LYH]",
              ", \"Calendar\", [Txn: L4 LYC]",
              ", \"Fiscal\",[Txn: L4 LYF]",
              ", BLANK () ),[Txn: L4 LYF])"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L5 LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Txn: L5 LYH]",
              ", \"Calendar\", [Txn: L5 LYC]",
              ", \"Fiscal\",[Txn: L5 LYF]",
              ", BLANK () ),[Txn: L5 LYF])"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L5 LYC",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L5-Business Segment] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_CLDR]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[BUS_SEG_ID])",
              "        )",
              "    )",
              "    ,",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L5 LYF",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L5-Business Segment] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_FSC]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[BUS_SEG_ID])",
              "        )",
              "    )",
              "    ,",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L5 LYH",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L5-Business Segment] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_HLDY]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[BUS_SEG_ID])",
              "        )",
              "    )",
              "    ,",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L6 LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Txn: L6 LYH]",
              ", \"Calendar\", [Txn: L6 LYC]",
              ", \"Fiscal\",[Txn: L6 LYF]",
              ", BLANK () ),[Txn: L6 LYF])"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L6 LYH",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L6-Merchandise Area] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_HLDY]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[MDS_ARE_ID])",
              "        )",
              "    ),",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L6 LYC",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L6-Merchandise Area] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_CLDR]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[MDS_ARE_ID])",
              "        )",
              "    ),",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L6 LYF",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L6-Merchandise Area] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LY_FSC]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[MDS_ARE_ID])",
              "        )",
              "    ),",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Txn: % Diff TYLYH]",
              ", \"Calendar\", [Txn: % Diff TYLYC]",
              ", \"Fiscal\",[Txn: % Diff TYLYF]",
              ", BLANK () ),[Txn: % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp LYH",
            "expression": "CALCULATE([Txn: LYH],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp LYC",
            "expression": "CALCULATE([Txn: LYC],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp LYF",
            "expression": "CALCULATE([Txn: LYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: LYF Cumul Ttl",
            "expression": [
              "CALCULATE (",
              "    [Txn: LYF],",
              "    FILTER (",
              "        ALLEXCEPT ( 'Time', 'Time'[Calendar Type] ),",
              "        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )",
              "            && 'Time'[Date] <= MAX ( 'Time'[Date] )",
              "    )",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Inv: $ Shrk Diff TYLYC",
            "expression": "CALCULATE(SUM(Daily_Sales[INV_SHRK_AM_DIFF_TY_VS_LY_CLDR]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk % Diff TYLYC",
            "expression": "CALCULATE(DIVIDE ( [Inv: $ Shrk Diff TYLYC], [Inv: $ Shrk LYC], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Clrn Bgn Wk LYF",
            "expression": "CALCULATE(Sum(Weekly_Inventory[TG_CLRN_INV_CST_AM_LY_FSC]),ALLSELECTED('Time'))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: % Bgn Wk Ttl Inv LYF",
            "expression": "DIVIDE([Inv: $ Clrn Bgn Wk LYF],[Inv: $ Bgn Wk LYF],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Bgn Wk LYF",
            "expression": "CALCULATE(Sum(Weekly_Inventory[TG_INV_CST_AM_LY_FSC]),ALLSELECTED('Time'))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: Clrn Bgn Wk Sell Thru LYF",
            "expression": "DIVIDE([Sls (FNC): $ Clrn LYF]-[DM (FNC): $ Clrn LYF],[Sls (FNC): $ Clrn LYF]-[DM (FNC): $ Clrn LYF]+[Inv: $ Clrn Bgn Wk LYF],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Clrn Bgn Wk LYH",
            "expression": "CALCULATE(Sum(Weekly_Inventory[TG_CLRN_INV_CST_AM_LY_HLDY]),ALLSELECTED('Time'))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Bgn Wk LYH",
            "expression": "CALCULATE(Sum(Weekly_Inventory[TG_INV_CST_AM_LY_HLDY]),ALLSELECTED('Time'))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: % Bgn Wk Ttl Inv LYH",
            "expression": "DIVIDE([Inv: $ Clrn Bgn Wk LYH],[Inv: $ Bgn Wk LYH],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: Clrn Bgn Wk Sell Thru LYH",
            "expression": "DIVIDE([Sls (FNC): $ Clrn LYH]-[DM (FNC): $ Clrn LYH],[Sls (FNC): $ Clrn LYH]-[DM (FNC): $ Clrn LYH]+[Inv: $ Clrn Bgn Wk LYH],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Bgn Wk LYC",
            "expression": "CALCULATE(Sum(Weekly_Inventory[TG_INV_CST_AM_LY_CLDR]),ALLSELECTED('Time'))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Clrn Bgn Wk LYC",
            "expression": [
              "CALCULATE(Sum(Weekly_Inventory[TG_CLRN_INV_CST_AM_LY_CLDR]),ALLSELECTED('Time'))",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: % Bgn Wk Ttl Inv LYC",
            "expression": "DIVIDE([Inv: $ Clrn Bgn Wk LYC],[Inv: $ Bgn Wk LYC],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: Clrn Bgn Wk Sell Thru LYC",
            "expression": "DIVIDE([Sls (FNC): $ Clrn LYC]-[DM (FNC): $ Clrn LYC],[Sls (FNC): $ Clrn LYC]-[DM (FNC): $ Clrn LYC]+[Inv: $ Clrn Bgn Wk LYC],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Clrn Bgn Wk",
            "expression": "CALCULATE(Sum(Weekly_Inventory[TG_CLRN_INV_CST_AM]),ALLSELECTED('Time'))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: % Bgn Wk Ttl Inv",
            "expression": "DIVIDE([Inv: $ Clrn Bgn Wk],[Inv: $ Bgn Wk],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Bgn Wk",
            "expression": "CALCULATE(Sum(Weekly_Inventory[TG_INV_CST_AM]),ALLSELECTED('Time'))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: Clrn Bgn Wk Sell Thru",
            "expression": "DIVIDE([Sls (FNC): $ Clrn]-[DM (FNC): $ Clrn],[Sls (FNC): $ Clrn]-[DM (FNC): $ Clrn]+[Inv: $ Clrn Bgn Wk],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: Clrn Qty Sell Thru",
            "description": "Clearance Inventory Quantity Sell Thru %",
            "expression": "DIVIDE([Sls (FNC): Clrn Qty], [Inv: Clrn Qty],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: Clrn Qty",
            "expression": "SUM(Daily_Sales[INV_CLRN_QTY])",
            "formatString": "#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk",
            "expression": "SUM(Daily_Sales[INV_SHRK_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk AP",
            "expression": "SUM(Daily_Sales[INV_SHRK_AN_PLN_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk % Diff TYLYF",
            "expression": "CALCULATE(DIVIDE ( [Inv: $ Shrk Diff TYLYF], [Inv: $ Shrk LYF], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk % Diff TYLYH",
            "expression": "CALCULATE(DIVIDE ( [Inv: $ Shrk Diff TYLYH], [Inv: $ Shrk LYH], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk % Diff TYAP",
            "expression": "CALCULATE(DIVIDE([Inv: $ Shrk Diff TYAP],[Inv: $ Shrk AP],BLANK()))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk Diff TYAP",
            "expression": "CALCULATE([Inv: $ Shrk]-[Inv: $ Shrk AP])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Inv: $ Shrk % Diff TYLYH]",
              ", \"Calendar\", [Inv: $ Shrk % Diff TYLYC]",
              ", \"Fiscal\",[Inv: $ Shrk % Diff TYLYF]",
              ", BLANK () ),[Inv: $ Shrk % Diff TYLYF])",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Inv: $ Shrk LYH]",
              ", \"Calendar\", [Inv: $ Shrk LYC]",
              ", \"Fiscal\",[Inv: $ Shrk LYF]",
              ", BLANK () ),[Inv: $ Shrk LYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\", [Inv: $ Shrk Diff TYLYH]",
              ", \"Calendar\", [Inv: $ Shrk Diff TYLYC]",
              ", \"Fiscal\",[Inv: $ Shrk Diff TYLYF]",
              ", BLANK () ),[Inv: $ Shrk Diff TYLYF]",
              ")",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk Diff TYLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[INV_SHRK_AM_DIFF_TY_VS_LY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk Diff TYLYH",
            "expression": "CALCULATE(SUM(Daily_Sales[INV_SHRK_AM_DIFF_TY_VS_LY_HLDY]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk LYC",
            "expression": [
              "SUM(Daily_Sales[INV_SHRK_AM_LY_CLDR])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk LYF",
            "expression": [
              "SUM(Daily_Sales[INV_SHRK_AM_LY_FSC])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Shrk LYH",
            "expression": [
              "SUM(Daily_Sales[INV_SHRK_AM_LY_HLDY])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Clrn Bgn Wk LY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              "\"Holiday\", [Inv: $ Clrn Bgn Wk LYH]",
              ",\"Calendar\",[Inv: $ Clrn Bgn Wk LYC]",
              ", \"Fiscal\",[Inv: $ Clrn Bgn Wk LYF]",
              ", BLANK () ), [Inv: $ Clrn Bgn Wk LYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: % Bgn Wk Ttl Inv LY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              "\"Holiday\", [Inv: % Bgn Wk Ttl Inv LYH]",
              ",\"Calendar\",[Inv: % Bgn Wk Ttl Inv LYC]",
              ", \"Fiscal\",[Inv: % Bgn Wk Ttl Inv LYF]",
              ", BLANK () ), [Inv: % Bgn Wk Ttl Inv LYF])"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: Clrn Bgn Wk Sell Thru LY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              "\"Holiday\", [Inv: Clrn Bgn Wk Sell Thru LYH]",
              ",\"Calendar\",[Inv: Clrn Bgn Wk Sell Thru LYC]",
              ", \"Fiscal\",[Inv: Clrn Bgn Wk Sell Thru LYF]",
              ", BLANK () ), [Inv: Clrn Bgn Wk Sell Thru LYF])"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: $ Bgn Wk LY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              "\"Holiday\", [Inv: $ Bgn Wk LYH]",
              ",\"Calendar\",[Inv: $ Bgn Wk LYC]",
              ", \"Fiscal\",[Inv: $ Bgn Wk LYF]",
              ", BLANK () ), [Inv: $ Bgn Wk LYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Title % Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ( 'Metric_Switch'[Type] ),",
              "        \"Sales Diff LY\", \"% Sales Diff LY\",",
              "        \"Sales Diff AP\", \"% Sales Diff AP\",",
              "        \"DM Diff LY\", \"% DM (FNC) Diff LY\",",
              "        \"DM Diff AP\", \"% DM (FNC) Diff AP\",",
              "        \"Txn Comp Diff LY\", \"% Txn Comp Diff LY\",",
              "        BLANK ()",
              "    ),",
              "    \"% Sales Diff LY\"",
              ")"
            ],
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (FNC): $ or Txn Diff Switch",
            "expression": [
              "",
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              " ",
              "IF (",
              " HASONEFILTER ( 'Metric_Switch'[Type] ),",
              " SWITCH (",
              " FILTERS ('Metric_Switch'[Type] ),",
              " \"Sales Diff LY\",[Sls (FNC): $ Diff TYLY],",
              " \"Sales Diff AP\",[Sls (FNC): $ Diff TYAP],",
              " \"DM Diff LY\", [DM (FNC): $ Diff TYLY],",
              " \"DM Diff AP\", [DM (FNC): $ Diff TYAP],",
              " \"Txn Comp Diff LY\", [Txn: Comp Diff TYLYF],",
              " BLANK ()",
              " ),",
              " [Sls (FNC): $ Diff TYLY]",
              "),",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Holiday\",",
              " ",
              "IF (",
              " HASONEFILTER ( 'Metric_Switch'[Type] ),",
              " SWITCH (",
              " FILTERS ('Metric_Switch'[Type] ),",
              " \"Sales Diff LY\",[Sls (FNC): $ Diff TYLYH],",
              " \"Sales Diff AP\",[Sls (FNC): $ Diff TYAP],",
              " \"DM Diff LY\", [DM (FNC): $ Diff TYLYH],",
              " \"DM Diff AP\", [DM (FNC): $ Diff TYAP],",
              " \"Txn Comp Diff LY\", [Txn: Comp Diff TYLYH],",
              " BLANK ()",
              " ),",
              " [Sls (FNC): $ % Diff TYLYH]",
              "),",
              "IF (",
              " HASONEFILTER ( 'Metric_Switch'[Type] ),",
              " SWITCH (",
              " FILTERS ('Metric_Switch'[Type] ),",
              " \"Sales Diff LY\",[Sls (FNC): $ Diff TYLYC],",
              " \"Sales Diff AP\",[Sls (FNC): $ Diff TYAP],",
              " \"DM Diff LY\", [DM (FNC): $ Diff TYLYC],",
              " \"DM Diff AP\",  [DM (FNC): $ Diff TYAP],",
              " \"Txn Comp Diff LY\", [Txn: Comp Diff TYLYC],",
              " BLANK ()",
              " ),[Sls (FNC): $ Diff TYLYC]",
              " ",
              ")",
              "))",
              "",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (FNC): $ or Txn % Diff Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "",
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ('Metric_Switch'[Type] ),",
              "        \"Sales Diff LY\", [Sls (FNC): $ % Diff TYLYF],",
              "        \"Sales Diff AP\", [Sls (FNC): $ % Diff TYAP],",
              "        \"DM Diff LY\", [DM (FNC): $ % Diff TYLYF],",
              "        \"DM Diff AP\", [DM (FNC): $ % Diff TYAP],",
              "        \"Txn Comp Diff LY\", [Txn: Comp % Diff TYLYF],",
              "        BLANK ()",
              "    ),",
              "    [Sls (FNC): $ % Diff TYLYF]",
              "),",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Holiday\",",
              "",
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ('Metric_Switch'[Type] ),",
              "        \"Sales Diff LY\",[Sls (FNC): $ % Diff TYLYH],",
              "        \"Sales Diff AP\",[Sls (FNC): $ % Diff TYAP],",
              "        \"DM Diff LY\", [DM (FNC): $ % Diff TYLYH],",
              "        \"DM Diff AP\", [DM (FNC): $ % Diff TYAP],",
              "        \"Txn Comp Diff LY\", [Txn: Comp % Diff TYLYH],",
              "        BLANK ()",
              "    ),",
              "    [Sls (FNC): $ % Diff TYLYH]",
              "),",
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ('Metric_Switch'[Type] ),",
              "        \"Sales Diff LY\",[Sls (FNC): $ % Diff TYLYC],",
              "        \"Sales Diff AP\",[Sls (FNC): $ % Diff TYAP],",
              "        \"DM Diff LY\", [DM (FNC): $ % Diff TYLYC],",
              "        \"DM Diff AP\", [DM (FNC): $ % Diff TYAP],",
              "        \"Txn Comp Diff LY\", [Txn: Comp % Diff TYLYC],",
              "        BLANK ()",
              "    ),[Sls (FNC): $ % Diff TYLYC]",
              "",
              ")",
              "))"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ Switch",
            "expression": "SWITCH(TRUE(),    ISCROSSFILTERED('Channel'),[DM (MB): $],    [DM (FNC): $])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: Comp $ / Txn  Switch",
            "description": "Switch metric for Sales per Txn",
            "expression": "SWITCH(TRUE(),    ISCROSSFILTERED('Channel'),[Sls (MB): Comp $ / Txn],    [Sls (FNC): Comp $ / Txn])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ or Txn Cumul Ttl Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ( 'Metric_Switch'[Type] ),",
              "        \"Sales Diff LY\", [Sls: $ Cumul Ttl Dgtl Switch],",
              "        \"Sales Diff AP\", [Sls: $ Cumul Ttl Dgtl Switch],",
              "        \"DM Diff LY\", [DM: $ Cumul Ttl Dgtl Switch],",
              "        \"DM Diff AP\", [DM: $ Cumul Ttl Dgtl Switch],",
              "        \"Txn Comp Diff LY\", [Txn: Comp Cumul Ttl],",
              "        \"Sales Diff LLY\", [Sls: $ Cumul Ttl Dgtl Switch],",
              "        \"DM Diff LLY\", [DM: $ Cumul Ttl Dgtl Switch],",
              "        \"Txn Comp Diff LLY\",  [Txn: Comp Cumul Ttl],",
              "        BLANK()",
              "    ),",
              "    [Sls: $ Cumul Ttl Dgtl Switch]",
              ")"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ Cumul Ttl Dgtl Switch",
            "expression": [
              "CALCULATE(CALCULATE (",
              "    [Sls: $ Switch],",
              "    FILTER (",
              "        ALL ( 'Time' ),",
              "        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )",
              "            && 'Time'[Date] <= MAX ( 'Time'[Date] )",
              "    )",
              "    ),'Time'[Date]<VALUES(RefreshTime[Date])",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ LY Cumul Ttl Dgtl Switch",
            "expression": [
              "CALCULATE (",
              "    [Sls: $ LY Dgtl Switch],",
              "    FILTER (",
              "        ALLEXCEPT ( 'Time','Time'[Calendar Type] ),",
              "        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )",
              "            && 'Time'[Date] <= MAX ( 'Time'[Date] )",
              "    )",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ Cumul Ttl Dgtl Switch",
            "expression": [
              "CALCULATE(CALCULATE (",
              "    [DM: $ Switch],",
              "    FILTER (",
              "        ALL ( 'Time' ),",
              "        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )",
              "            && 'Time'[Date] <= MAX ( 'Time'[Date] )",
              "    )",
              "    ),'Time'[Date]<VALUES(RefreshTime[Date])",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ LY Cumul Ttl Dgtl Switch",
            "expression": [
              "CALCULATE (",
              "    [DM: $ LY Dgtl Switch],",
              "    FILTER (",
              "        ALLEXCEPT ( 'Time','Time'[Calendar Type] ),",
              "        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )",
              "            && 'Time'[Date] <= MAX ( 'Time'[Date] )",
              "    )",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ AP Cumul Ttl Dgtl Switch",
            "expression": [
              "CALCULATE (",
              "    [Sls: $ AP Dgtl Switch],",
              "    FILTER (",
              "        ALLEXCEPT ( 'Time','Time'[Calendar Type] ),",
              "        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )",
              "            && 'Time'[Date] <= MAX ( 'Time'[Date] )",
              "    )",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ AP Cumul Ttl Dgtl Switch",
            "expression": [
              "CALCULATE (",
              "    [DM: $ AP Dgtl Switch],",
              "    FILTER (",
              "        ALLEXCEPT ( 'Time','Time'[Calendar Type] ),",
              "        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )",
              "            && 'Time'[Date] <= MAX ( 'Time'[Date] )",
              "    )",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ or Txn LY Cumul Ttl Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ( 'Metric_Switch'[Type] ),",
              "        \"Sales Diff LY\", [Sls: $ LY Cumul Ttl Dgtl Switch],",
              "        \"Sales Diff AP\", [Sls: $ LY Cumul Ttl Dgtl Switch],",
              "        \"DM Diff LY\", [DM: $ LY Cumul Ttl Dgtl Switch],",
              "        \"DM Diff AP\", [DM: $ LY Cumul Ttl Dgtl Switch],",
              "        \"Txn Comp Diff LY\", [Txn: Comp LY Cumul Ttl],       ",
              "         BLANK()",
              "    ),",
              "    [Sls: $ LY Cumul Ttl Dgtl Switch]",
              ")"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ AP Cumul Ttl Switch",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ( 'Metric_Switch'[Type] ),",
              "        \"Sales Diff LY\", [Sls: $ AP Cumul Ttl Dgtl Switch] ,",
              "        \"Sales Diff AP\", [Sls: $ AP Cumul Ttl Dgtl Switch] ,",
              "        \"DM Diff LY\", [DM: $ AP Cumul Ttl Dgtl Switch],",
              "        \"DM Diff AP\", [DM: $ AP Cumul Ttl Dgtl Switch],",
              "        \"Sales Diff LLY\", [Sls: $ AP Cumul Ttl Dgtl Switch] ,",
              "        \"DM Diff LLY\", [DM: $ AP Cumul Ttl Dgtl Switch],",
              "        BLANK ()",
              "    ),",
              "    [Sls: $ AP Cumul Ttl Dgtl Switch]",
              ")"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ Proj Wk Ttl Switch",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ( 'Metric_Switch'[Type] ),",
              "        \"Sales Diff LY\", [Sls: $ Proj Wk Ttl Dgtl Switch],",
              "        \"Sales Diff AP\", [Sls: $ Proj Wk Ttl Dgtl Switch],",
              "        \"DM Diff LY\", [DM: $ Proj Wk Ttl Dgtl Switch],",
              "        \"DM Diff AP\", [DM: $ Proj Wk Ttl Dgtl Switch],",
              "        \"Sales Diff LLY\", [Sls: $ Proj Wk Ttl Dgtl Switch],",
              "        \"DM Diff LLY\", [DM: $ Proj Wk Ttl Dgtl Switch],",
              "        BLANK ()",
              "    ),",
              "    [Sls: $ Proj Wk Ttl Dgtl Switch]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ % Diff TYLY WTD Ttl Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ( 'Metric_Switch'[Type] ),",
              "        \"Sales Diff LY\", [Sls: $ % Diff TYLY WTD Ttl Dgtl Switch],",
              "        \"Sales Diff AP\", [Sls: $ % Diff TYLY WTD Ttl Dgtl Switch],",
              "        \"DM Diff LY\", [DM: $ % Diff TYLY WTD Ttl Dgtl Switch],",
              "        \"DM Diff AP\", [DM: $ % Diff TYLY WTD Ttl Dgtl Switch],",
              "        \"Txn Comp Diff LY\", [Txn: Comp % Diff TYLY WTD Ttl],",
              "        \"Sales Diff LLY\", [Sls: $ % Diff TYLLY WTD Ttl Dgtl Switch],",
              "        \"DM Diff LLY\", [DM: $ % Diff TYLLY WTD Ttl Dgtl Switch],",
              "        \"Txn Comp Diff LLY\", [Txn: Comp % Diff TYLLY WTD Ttl],",
              "        BLANK ()",
              "    ),",
              "    [Sls: $ % Diff TYLY WTD Ttl Dgtl Switch]",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ AP Dgtl Switch",
            "expression": [
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),BLANK(),",
              "    [DM (FNC): $ AP]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ % Diff TYAP WTD Ttl Dgtl Switch",
            "expression": [
              "CALCULATE (",
              "    CALCULATE ( ",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),BLANK(),",
              "    [Sls (FNC): $ % Diff TYAP]",
              ")",
              ", 'Time'[Date]<VALUES(RefreshTime[Date])),",
              "    ALL ( 'Time' ),",
              "    'Time'[Pre-Defined Date Filter] = \"Current Wk\"",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ % Diff TYAP WTD Ttl Dgtl Switch",
            "expression": [
              "CALCULATE (",
              "    CALCULATE ( ",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),BLANK(),",
              "    [DM (FNC): $ % Diff TYAP]",
              ")",
              ", 'Time'[Date]<VALUES(RefreshTime[Date])),",
              "    ALL ( 'Time' ),",
              "    'Time'[Pre-Defined Date Filter] = \"Current Wk\"",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ % Diff TYLY WTD Ttl Dgtl Switch",
            "expression": [
              "CALCULATE (",
              "    CALCULATE ( ",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ % Diff TYLY],",
              "    [Sls (FNC): $ % Diff TYLY]",
              ")",
              ", 'Time'[Date] < Today()),",
              "    ALLEXCEPT( 'Time','Time'[Calendar Type] ),",
              "    'Time'[Pre-Defined Date Filter] = \"Current Wk\"",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ % Diff TYLY WTD Ttl Dgtl Switch",
            "expression": [
              "CALCULATE (",
              "    CALCULATE ( ",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ % Diff TYLY],",
              "    [DM (FNC): $ % Diff TYLY]",
              ")",
              ", 'Time'[Date] < Today()),",
              "    ALLEXCEPT( 'Time','Time'[Calendar Type] ),",
              "    'Time'[Pre-Defined Date Filter] = \"Current Wk\"",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ AP Dgtl Switch",
            "expression": [
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),BLANK(),",
              "    [Sls (FNC): $ AP]",
              ")"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ Proj Wk Ttl Dgtl Switch",
            "expression": [
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),BLANK(),",
              "    [Sls (FNC): $ Proj Wk Ttl Switch]",
              ")"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (FNC): $ Proj Wk Ttl Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ( 'Metric_Switch'[Type] ),",
              "        \"Sales Diff LY\", [Sls (FNC): $ Proj Cumul Ttl],",
              "        \"Sales Diff AP\", [Sls (FNC): $ Proj Cumul Ttl],",
              "        \"DM Diff LY\", [DM (FNC): $ Proj Cumul Ttl],",
              "        \"DM Diff AP\", [DM (FNC): $ Proj Cumul Ttl],",
              "        \"Sales Diff LLY\", [Sls (FNC): $ Proj Cumul Ttl],",
              "        \"DM Diff LLY\", [DM (FNC): $ Proj Cumul Ttl],",
              "        BLANK ()",
              "    ),",
              "    [Sls (FNC): $ Proj Cumul Ttl]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ Proj Wk Ttl Dgtl Switch",
            "expression": [
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),BLANK(),",
              "    [DM (FNC): $ Proj Cumul Ttl]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: % Switch",
            "expression": "SWITCH(TRUE(),    ISCROSSFILTERED('Channel'),[DM (MB): %],    [DM (FNC): %])",
            "formatString": "#,0.00 %;(#,0.00 %);#,0.00 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ Diff TYAP Switch",
            "expression": "SWITCH(TRUE(),    ISCROSSFILTERED('Channel'),BLANK(),    [Sls (FNC): $ Diff TYAP])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ Diff TYAP Switch",
            "expression": "SWITCH(TRUE(),    ISCROSSFILTERED('Channel'),BLANK(),    [DM (FNC): $ Diff TYAP])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ % Diff TYAP Switch",
            "expression": "SWITCH(TRUE(),    ISCROSSFILTERED('Channel'),BLANK(),    [Sls (FNC): $ % Diff TYAP])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ % Diff TYAP Switch",
            "expression": "SWITCH(TRUE(),    ISCROSSFILTERED('Channel'),BLANK(),    [DM (FNC): $ % Diff TYAP])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: % Bps Diff TYAP Switch",
            "expression": "SWITCH(TRUE(),    ISCROSSFILTERED('Channel'),BLANK(),    [DM (FNC): % Bps Diff TYAP])",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ % Diff TYLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ % Diff TYLYF],    [DM (FNC): $ % Diff TYLYF]",
              "),",
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Holiday\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ % Diff TYLYH],    [DM (FNC): $ % Diff TYLYH]",
              "),",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ % Diff TYLYC],    [DM (FNC): $ % Diff TYLYC]",
              ")",
              "",
              "))"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ % Diff TYLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ % Diff TYLYF],    [Sls (FNC): $ % Diff TYLYF]",
              "),",
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Holiday\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ % Diff TYLYH],    [Sls (FNC): $ % Diff TYLYH]",
              "),",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ % Diff TYLYC],    [Sls (FNC): $ % Diff TYLYC]",
              ")",
              "",
              "))"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: % Bps Diff TYLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): % Bps Diff TYLYF],    [DM (FNC): % Bps Diff TYLYF]",
              "),",
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Holiday\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): % Bps Diff TYLYH],    [DM (FNC): % Bps Diff TYLYH]",
              "),",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): % Bps Diff TYLYC],    [DM (FNC): % Bps Diff TYLYC]",
              ")",
              "",
              "))"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ Comp % Diff TYLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ Comp % Diff TYLYF],    [Sls (FNC): $ Comp % Diff TYLYF]",
              "),",
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Holiday\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ Comp % Diff TYLYH],    [Sls (FNC): $ Comp % Diff TYLYH]",
              "),",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ Comp % Diff TYLYC],    [Sls (FNC): $ Comp % Diff TYLYC]",
              ")",
              "",
              "))"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ % Diff TYAP WTD Ttl Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ( 'Metric_Switch'[Type] ),",
              "        \"Sales Diff LY\", [Sls: $ % Diff TYAP WTD Ttl Dgtl Switch],",
              "        \"Sales Diff AP\", [Sls: $ % Diff TYAP WTD Ttl Dgtl Switch],",
              "        \"DM Diff LY\", [DM: $ % Diff TYAP WTD Ttl Dgtl Switch],",
              "        \"DM Diff AP\", [DM: $ % Diff TYAP WTD Ttl Dgtl Switch],",
              "        \"Sales Diff LLY\", [Sls: $ % Diff TYAP WTD Ttl Dgtl Switch],",
              "        \"DM Diff LLY\", [DM: $ % Diff TYAP WTD Ttl Dgtl Switch],",
              "        BLANK ()",
              "    ),",
              "    [Sls: $ % Diff TYAP WTD Ttl Dgtl Switch]",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ LY Dgtl Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ LYF],",
              "    [DM (FNC): $ LYF]",
              "),",
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Holiday\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ LYH],",
              "    [DM (FNC): $ LYH]",
              "),",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ LYC],",
              "    [DM (FNC): $ LYC]",
              ")",
              "",
              "))"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ LY Dgtl Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ LYF],",
              "    [Sls (FNC): $ LYF]",
              "),",
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Holiday\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ LYH],",
              "    [Sls (FNC): $ LYH]",
              "),",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ LYC],",
              "    [Sls (FNC): $ LYC]",
              ")",
              "",
              "))"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ Switch",
            "expression": "SWITCH(TRUE(), ISCROSSFILTERED('Channel'),[Sls (MB): $], [Sls (FNC): $])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: Comp $ / Txn Diff TYLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): Comp $ / Txn Diff TYLYF],    [Sls (FNC): Comp $ / Txn Diff TYLYF]",
              "),",
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Holiday\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): Comp $ / Txn Diff TYLYH],    [Sls (FNC): Comp $ / Txn Diff TYLYH]",
              "),",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): Comp $ / Txn Diff TYLYC],    [Sls (FNC): Comp $ / Txn Diff TYLYC]",
              ")",
              "",
              "))"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: Comp $ / Txn % Diff TYLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): Comp $ / Txn % Diff TYLYF],   [Sls (FNC): Comp $ / Txn % Diff TYLYF]",
              "),",
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Holiday\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): Comp $ / Txn % Diff TYLYH],   [Sls (FNC): Comp $ / Txn % Diff TYLYH]",
              "),",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): Comp $ / Txn % Diff TYLYC],   [Sls (FNC): Comp $ / Txn % Diff TYLYC]",
              ")",
              "",
              "))"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ or Txn Diff Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ( 'Metric_Switch'[Type] ),",
              "        \"Sales Diff LY\", [Sls: $ Diff TYLY Switch],",
              "        \"Sales Diff AP\", [Sls: $ Diff TYAP Switch],",
              "        \"DM Diff LY\", [DM: $ Diff TYLY Switch],",
              "        \"DM Diff AP\", [DM: $ Diff TYAP Switch],",
              "        \"Txn Comp Diff LY\", [Txn: Comp Diff TYLY],",
              "        BLANK ()",
              "    ),",
              "    [Sls: $ Diff TYLY Switch]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ Diff TYLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ Diff TYLYF],    [Sls (FNC): $ Diff TYLYF]",
              "),",
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Holiday\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ Diff TYLYH],    [Sls (FNC): $ Diff TYLYH]",
              "),",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ Diff TYLYC],    [Sls (FNC): $ Diff TYLYC]",
              ")",
              "",
              "))"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ Diff TYLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ Diff TYLYF],    [DM (FNC): $ Diff TYLYF]",
              "),",
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Holiday\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ Diff TYLYH],    [DM (FNC): $ Diff TYLYH]",
              "),",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ Diff TYLYC],    [DM (FNC): $ Diff TYLYC]",
              ")",
              "",
              "))"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (FNC): $ AP Cumul Ttl Switch",
            "expression": [
              "IF (    HASONEFILTER ( Metric_Switch[Type] ),   ",
              " SWITCH (        FILTERS ( Metric_Switch[Type] ),        ",
              "\"Sales Diff LY\", [Sls (FNC): $ AP Cumul Ttl],       ",
              "\"Sales Diff AP\", [Sls (FNC): $ AP Cumul Ttl],        ",
              "\"DM Diff LY\", [DM (FNC): $ AP Cumul Ttl],        ",
              "\"DM Diff AP\", [DM (FNC): $ AP Cumul Ttl],        ",
              "BLANK ()    ),    [Sls (FNC): $ AP Cumul Ttl])",
              ""
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (FNC): $ or Txn Cumul Ttl Switch",
            "expression": [
              "IF (    HASONEFILTER (Metric_Switch[Type]),    ",
              "SWITCH (        FILTERS ( Metric_Switch[Type] ),        ",
              "\"Sales Diff LY\", [Sls (FNC): $ Cumul Ttl],        ",
              "\"Sales Diff AP\", [Sls (FNC): $ Cumul Ttl],        ",
              "\"DM Diff LY\", [DM (FNC): $ Cumul Ttl],        ",
              "\"DM Diff AP\", [DM (FNC): $ Cumul Ttl],        ",
              "\"Txn Comp Diff LY\", [Txn: Comp Cumul Ttl],        ",
              "BLANK ()    ),    [Sls (FNC): $ Cumul Ttl])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (FNC): $ or Txn LY Cumul Ttl Switch",
            "expression": [
              "",
              "IF (    HASONEFILTER ( Metric_Switch[Type] ),    SWITCH (        FILTERS ( Metric_Switch[Type]  ),        ",
              "\"Sales Diff LY\", [Sls (FNC): $ LY Cumul Ttl],        ",
              "\"Sales Diff AP\", [Sls (FNC): $ LY Cumul Ttl],        ",
              "\"DM Diff LY\", [DM (FNC): $ LY Cumul Ttl],        ",
              "\"DM Diff AP\", [DM (FNC): $ LY Cumul Ttl],        ",
              "\"Txn Comp Diff LY\", [Txn: Comp LY Cumul Ttl],        BLANK ()    ),    [Sls (FNC): $ LY Cumul Ttl])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (FNC): $",
            "expression": "SUM('Daily_Sales'[SLS_FNC_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "----",
            "expression": "\"\"",
            "displayFolder": "Others"
          },
          {
            "name": "Title: Cumul Ttls",
            "expression": "IF ( HASONEFILTER ( Metric_Switch[Type] ), SWITCH ( FILTERS ( Metric_Switch[Type] ), \"Sales Diff LY\", \"Cumulative $Sales & Projection\", \"Sales Diff AP\",\"Cumulative $Sales & Projection\", \"DM Diff LY\", \"Cumulative $DM (FNC) & Projection\", \"DM Diff AP\", \"Cumulative $DM (FNC) & Projection\", \"Txn Comp Diff LY\", \"Cumulative Comp Txn\", BLANK () ), \"Cumulative $Sales\")",
            "displayFolder": "Others"
          },
          {
            "name": "Cldr: LY Dates",
            "expression": [
              "CALCULATE (",
              "    IF ( HASONEVALUE ( 'Time'[Date] ), VALUES ( 'Time'[FCL_DAY_DT_LY] ), BLANK () ),",
              "    'Time'[Calendar Type] = \"Fiscal\"",
              ")"
            ],
            "displayFolder": "Others"
          },
          {
            "name": "Cldr: LYC Dates",
            "expression": [
              "CALCULATE (",
              "    IF ( HASONEVALUE ( 'Time'[Date] ), VALUES ( 'Time'[DAY_DT_LY] ), BLANK () ),",
              "    'Time'[Calendar Type] = \"Calendar\"",
              ")"
            ],
            "displayFolder": "Others"
          },
          {
            "name": "Cldr: LYH Dates",
            "expression": [
              "CALCULATE (",
              "    IF ( HASONEVALUE ( 'Time'[Date] ), VALUES ( 'Time'[LY_HLDY_DAY_DT]), BLANK () ),",
              "    'Time'[Calendar Type] = \"Holiday\"",
              ")"
            ],
            "displayFolder": "Others"
          },
          {
            "name": "Synapse IT Load Desc 1",
            "expression": "CALCULATE(VALUES('Synapse_Load_IT_Desc'[INDX_DSC]),'Synapse_Load_IT_Desc'[INDX_ID]=1)",
            "displayFolder": "Others"
          },
          {
            "name": "Synapse IT Load Desc 2",
            "expression": "CALCULATE(VALUES('Synapse_Load_IT_Desc'[INDX_DSC]),'Synapse_Load_IT_Desc'[INDX_ID]=2)",
            "displayFolder": "Others"
          },
          {
            "name": "Synapse IT Load Desc 3",
            "expression": "CALCULATE(VALUES('Synapse_Load_IT_Desc'[INDX_DSC]),'Synapse_Load_IT_Desc'[INDX_ID]=3)",
            "displayFolder": "Others"
          },
          {
            "name": "Synapse IT Load Desc 4",
            "expression": "CALCULATE(VALUES('Synapse_Load_IT_Desc'[INDX_DSC]),'Synapse_Load_IT_Desc'[INDX_ID]=4)",
            "displayFolder": "Others"
          },
          {
            "name": "Synapse IT Load Desc 5",
            "expression": " CALCULATE(VALUES('Synapse_Load_IT_Desc'[INDX_DSC]),'Synapse_Load_IT_Desc'[INDX_ID]=5)",
            "displayFolder": "Others"
          },
          {
            "name": "Synapse IT Load Desc 6",
            "expression": "CALCULATE(VALUES('Synapse_Load_IT_Desc'[INDX_DSC]),'Synapse_Load_IT_Desc'[INDX_ID]=6)",
            "displayFolder": "Others"
          },
          {
            "name": "Synapse IT Load Desc 7",
            "expression": "CALCULATE(VALUES('Synapse_Load_IT_Desc'[INDX_DSC]),'Synapse_Load_IT_Desc'[INDX_ID]=7)",
            "displayFolder": "Others"
          },
          {
            "name": "Synapse IT Load Desc 8",
            "expression": "CALCULATE(VALUES('Synapse_Load_IT_Desc'[INDX_DSC]),'Synapse_Load_IT_Desc'[INDX_ID]=8)",
            "displayFolder": "Others"
          },
          {
            "name": "Synapse IT Load Desc 9",
            "expression": "CALCULATE(VALUES('Synapse_Load_IT_Desc'[INDX_DSC]),'Synapse_Load_IT_Desc'[INDX_ID]=9)",
            "displayFolder": "Others"
          },
          {
            "name": "Synapse IT Load Desc 10",
            "expression": " CALCULATE(VALUES('Synapse_Load_IT_Desc'[INDX_DSC]),'Synapse_Load_IT_Desc'[INDX_ID]=10)",
            "displayFolder": "Others"
          },
          {
            "name": "COGS (FNC): $",
            "description": "Cost of Goods Sold, sourced from Finance (incl. Shrink)",
            "expression": [
              "SUM(Daily_Sales[COGS_FNC])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (FNC): $ LYC",
            "description": "Cost of Goods Sold LY Calendar, sourced from Finance (incl. Shrink)",
            "expression": [
              "SUM(Daily_Sales[COGS_FNC_LY_CLDR])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (FNC): $ LYF",
            "description": "Cost of Goods Sold LY fiscal, sourced from Finance (incl. Shrink)",
            "expression": "SUM(Daily_Sales[COGS_FNC_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (FNC): $ LYH",
            "description": "Cost of Goods Sold LY holiday, sourced from Finance (incl. Shrink)",
            "expression": "SUM(Daily_Sales[COGS_FNC_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (FNC): $ LY",
            "description": "Cost of Goods Sold LY, sourced from Finance (incl. Shrink)",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[COGS (FNC): $ LYH]",
              ", \"Calendar\", [COGS (FNC): $ LYC]",
              ", \"Fiscal\",[COGS (FNC): $ LYF]",
              ", BLANK () ),[COGS (FNC): $ LYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (FNC): $ Diff TYLY",
            "description": "$ Difference in Cost of Goods Sold TY vs. LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[COGS (FNC): $ Diff TYLYH]",
              ", \"Calendar\", [COGS (FNC): $ Diff TYLYC]",
              ", \"Fiscal\",[COGS (FNC): $ Diff TYLYF]",
              ", BLANK () ),[COGS (FNC): $ Diff TYLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (FNC): $ Diff TYLYH",
            "description": "$ Difference in Cost of Goods Sold TY vs. LY Holiday",
            "expression": "CALCULATE(SUM(Daily_Sales[COGS_FNC_DIFF_TY_VS_LY_HLDY]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (FNC): $ Diff TYLYF",
            "description": "$ Difference in Cost of Goods Sold TY vs. LY Fiscal",
            "expression": "CALCULATE(SUM(Daily_Sales[COGS_FNC_DIFF_TY_VS_LY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (FNC): $ Diff TYLYC",
            "description": "$ Difference in Cost of Goods Sold TY vs. LY Calendar",
            "expression": [
              "CALCULATE (",
              "    SUM ( Daily_Sales[COGS_FNC_DIFF_TY_VS_LY_CLDR] ))"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (FNC): $ % Diff TYLY",
            "description": "% Difference in Cost of Goods Sold TY vs. LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[COGS (FNC): $ % Diff TYLYH]",
              ", \"Calendar\", [COGS (FNC): $ % Diff TYLYC]",
              ", \"Fiscal\",[COGS (FNC): $ % Diff TYLYF]",
              ", BLANK () ),[COGS (FNC): $ % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (FNC): $ % Diff TYLYH",
            "description": "% Difference in Cost of Goods Sold TY vs. LY holiday",
            "expression": "CALCULATE(DIVIDE ( [COGS (FNC): $ Diff TYLYH], [COGS (FNC): $ LYH], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (FNC): $ % Diff TYLYC",
            "description": "% Difference in Cost of Goods Sold TY vs. LY Calendar",
            "expression": "CALCULATE(DIVIDE ( [COGS (FNC): $ Diff TYLYC], [COGS (FNC): $ LYC], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (FNC): $ % Diff TYLYF",
            "description": "% Difference in Cost of Goods Sold TY vs. LY Fiscal",
            "expression": "CALCULATE(DIVIDE ( [COGS (FNC): $ Diff TYLYF], [COGS (FNC): $ LYF], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ LY",
            "description": "Cost of Goods Sold, sourced from Market Basket (excl. Shrink) last year",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[COGS (MB): $ LYH]",
              ", \"Calendar\", [COGS (MB): $ LYC]",
              ", \"Fiscal\",[COGS (MB): $ LYF]",
              ", BLANK () ),[COGS (MB): $ LYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ LYH",
            "description": "Cost of Goods Sold, sourced from Market Basket (excl. Shrink) last year holiday",
            "expression": "SUM(MB_Sales[COGS_MKT_BSKT_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ LYF",
            "description": "Cost of Goods Sold, sourced from Market Basket (excl. Shrink) last year fiscal",
            "expression": "SUM(MB_Sales[COGS_MKT_BSKT_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ LYC",
            "description": "Cost of Goods Sold, sourced from Market Basket (excl. Shrink) last year calendar",
            "expression": "SUM(MB_Sales[COGS_MKT_BSKT_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ Diff TYLY",
            "description": "Cost of Goods Sold, sourced from Market Basket (excl. Shrink) difference between TY and LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[COGS (MB): $ Diff TYLYH]",
              ", \"Calendar\", [COGS (MB): $ Diff TYLYC]",
              ", \"Fiscal\",[COGS (MB): $ Diff TYLYF]",
              ", BLANK () ),[COGS (MB): $ Diff TYLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ Diff TYLYH",
            "description": "Cost of Goods Sold, sourced from Market Basket (excl. Shrink) difference between TY and LY holiday",
            "expression": "SUM(MB_Sales[COGS_MKT_BSKT_DIFF_TY_VS_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ Diff TYLYC",
            "description": "Cost of Goods Sold, sourced from Market Basket (excl. Shrink) difference between TY and LY calendar",
            "expression": "SUM(MB_Sales[COGS_MKT_BSKT_DIFF_TY_VS_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ Diff TYLYF",
            "description": "Cost of Goods Sold, sourced from Market Basket (excl. Shrink) difference between TY and LY fiscal",
            "expression": "SUM(MB_Sales[COGS_MKT_BSKT_DIFF_TY_VS_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ % Diff TYLY",
            "description": "Cost of Goods Sold, sourced from Market Basket (excl. Shrink) percent difference between TY and LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[COGS (MB): $ % Diff TYLYH]",
              ", \"Calendar\", [COGS (MB): $ % Diff TYLYC]",
              ", \"Fiscal\",[COGS (MB): $ % Diff TYLYF]",
              ", BLANK () ),[COGS (MB): $ % Diff TYLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "COGS"
          },
          {
            "name": "DM (FNC): $ % CPG Diff TYAP",
            "description": "% Difference in Direct Margin $ Cents Per Gallon TY vs. AP",
            "expression": [
              "CALCULATE(DIVIDE ( [DM (FNC): $ CPG Diff TYAP], [DM (FNC): $ CPG AP], BLANK () ))",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ % CPG Diff TYLYH",
            "description": "% Difference in Direct Margin $ Cents Per Gallon TY vs. LY holiday",
            "expression": [
              "CALCULATE(DIVIDE ( [DM (FNC): $ CPG Diff TYLYH], [DM (FNC): $ CPG LYH], BLANK () ))",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ % CPG Diff TYLYC",
            "description": "% Difference in Direct Margin $ Cents Per Gallon TY vs. LY Calendar",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ CPG Diff TYLYC], [DM (FNC): $ CPG LYC], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ % CPG Diff TYLYF",
            "description": "% Difference in Direct Margin $ Cents Per Gallon TY vs. LY fiscal",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ CPG Diff TYLYF], [DM (FNC): $ CPG LYF], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ % CPG Diff TYLY",
            "description": "% Difference in Direct Margin $ Cents Per Gallon TY vs. LY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Calendar\",[DM (FNC): $ % CPG Diff TYLYC],",
              " \"Holiday\", [DM (FNC): $ % CPG Diff TYLYH],",
              " \"Fiscal\", [DM (FNC): $ % CPG Diff TYLYF],",
              " BLANK()",
              " ),",
              " [DM (FNC): $ % CPG Diff TYLYF]",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Fuel"
          },
          {
            "name": "Dct (MB): $ Circ",
            "description": "Circular Discount $",
            "expression": "SUM(MB_Sales[CALC_CIRC_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Circ LY",
            "description": "Circular Discount $ last year",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Dct (MB): $ Circ LYH]",
              ", \"Calendar\", [Dct (MB): $ Circ LYC]",
              ", \"Fiscal\",[Dct (MB): $ Circ LYF]",
              ", BLANK () ),[Dct (MB): $ Circ LYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Circ LYH",
            "description": "Circular Discount $ last year holiday",
            "expression": "SUM(MB_Sales[CALC_CIRC_AM_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Circ LYC",
            "description": "Circular Discount $ last year calendar",
            "expression": "SUM(MB_Sales[CALC_CIRC_AM_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Circ LYF",
            "description": "Circular Discount $ last year fiscal",
            "expression": "SUM(MB_Sales[CALC_CIRC_AM_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Circ Diff TYLY",
            "description": "Circular Discount $ difference between TY and LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Dct (MB): $ Circ Diff TYLYH]",
              ", \"Calendar\", [Dct (MB): $ Circ Diff TYLYC]",
              ", \"Fiscal\",[Dct (MB): $ Circ Diff TYLYF]",
              ", BLANK () ),[Dct (MB): $ Circ Diff TYLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Circ Diff TYLYH",
            "description": "Circular Discount $ difference between TY and LY Holiday",
            "expression": "SUM(MB_Sales[CALC_CIRC_AM_DIFF_TY_VS_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Circ Diff TYLYF",
            "description": "Circular Discount $ difference between TY and LY Fiscal",
            "expression": "SUM(MB_Sales[CALC_CIRC_AM_DIFF_TY_VS_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Circ Diff TYLYC",
            "description": "Circular Discount $ difference between TY and LY Calendar",
            "expression": "SUM(MB_Sales[CALC_CIRC_AM_DIFF_TY_VS_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Clrn",
            "description": "Clearance $",
            "expression": "SUM(MB_Sales[CALC_CLRN_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Clrn LY",
            "description": "Clearance $ last year",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Dct (MB): $ Clrn LYH]",
              ", \"Calendar\", [Dct (MB): $ Clrn LYC]",
              ", \"Fiscal\",[Dct (MB): $ Clrn LYF]",
              ", BLANK () ),[Dct (MB): $ Clrn LYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Clrn LYH",
            "description": "Clearance $ last year holiday",
            "expression": "SUM(MB_Sales[CALC_CLRN_AM_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Clrn LYF",
            "description": "Clearance $ last year fiscal",
            "expression": "SUM(MB_Sales[CALC_CLRN_AM_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Clrn LYC",
            "description": "Clearance $ last year calendar",
            "expression": "SUM(MB_Sales[CALC_CLRN_AM_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Clrn Diff TYLY",
            "description": "Clearance $ diff TY vs LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Dct (MB): $ Clrn Diff TYLYH]",
              ", \"Calendar\", [Dct (MB): $ Clrn Diff TYLYC]",
              ", \"Fiscal\",[Dct (MB): $ Clrn Diff TYLYF]",
              ", BLANK () ),[Dct (MB): $ Clrn Diff TYLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Clrn Diff TYLYH",
            "description": "Clearance $ diff TY vs LY holiday",
            "expression": "SUM(MB_Sales[CALC_CLRN_AM_DIFF_TY_VS_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Clrn Diff TYLYC",
            "description": "Clearance $ diff TY vs LY calendar",
            "expression": "SUM(MB_Sales[CALC_CLRN_AM_DIFF_TY_VS_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Clrn Diff TYLYF",
            "description": "Clearance $ diff TY vs LY fiscal",
            "expression": "SUM(MB_Sales[CALC_CLRN_AM_DIFF_TY_VS_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ DCirc",
            "description": "Digital Circular Discount $",
            "expression": "SUM(MB_Sales[CALC_DGTL_CIRC_AM])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ DCirc LY",
            "description": "Digital Circular Discount $ last year",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Dct (MB): $ DCirc LYH]",
              ", \"Calendar\", [Dct (MB): $ DCirc LYC]",
              ", \"Fiscal\",[Dct (MB): $ DCirc LYF]",
              ", BLANK () ),[Dct (MB): $ DCirc LYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ DCirc LYH",
            "description": "Digital Circular Discount $ last year holiday",
            "expression": "SUM(MB_Sales[CALC_DGTL_CIRC_AM_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ DCirc LYF",
            "description": "Digital Circular Discount $ last year fiscal",
            "expression": "SUM(MB_Sales[CALC_DGTL_CIRC_AM_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ DCirc LYC",
            "description": "Digital Circular Discount $ last year calendar",
            "expression": "SUM(MB_Sales[CALC_DGTL_CIRC_AM_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ DCirc Diff TYLY",
            "description": "Digital Circular Discount $ difference between TY and LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Dct (MB): $ DCirc Diff TYLYH]",
              ", \"Calendar\", [Dct (MB): $ DCirc Diff TYLYC]",
              ", \"Fiscal\",[Dct (MB): $ DCirc Diff TYLYF]",
              ", BLANK () ),[Dct (MB): $ DCirc Diff TYLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ DCirc Diff TYLYH",
            "description": "Digital Circular Discount $ difference between TY and LY holiday",
            "expression": "SUM(MB_Sales[CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_HLDY])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ DCirc Diff TYLYF",
            "description": "Digital Circular Discount $ difference between TY and LY fiscal",
            "expression": "SUM(MB_Sales[CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ DCirc Diff TYLYC",
            "description": "Digital Circular Discount $ difference between TY and LY calendar",
            "expression": "SUM(MB_Sales[CALC_DGTL_CIRC_AM_DIFF_TY_VS_LY_CLDR])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Str: Count",
            "expression": "COUNTROWS(DISTINCT(VALUES(MB_Sales[GEO_SKY])))",
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Count LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Str: Count LYH]",
              ", \"Calendar\", [Str: Count LYC]",
              ", \"Fiscal\",[Str: Count LYF]",
              ", BLANK () ),[Str: Count LYF])",
              ""
            ],
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Count LYH",
            "expression": [
              "CALCULATE (",
              "    COUNTROWS ( DISTINCT ( VALUES ( MB_Sales[GEO_SKY] ) ) ),",
              "    FILTER (",
              "        ALL ( 'Time' ),",
              "        CONTAINS (",
              "            VALUES ( 'Time'[LY_HLDY_DAY_DT] ),",
              "            'Time'[LY_HLDY_DAY_DT], 'Time'[Date]",
              "        )",
              "    )",
              ")"
            ],
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Count LYC",
            "expression": [
              "CALCULATE (",
              "    COUNTROWS ( DISTINCT ( VALUES ( MB_Sales[GEO_SKY] ) ) ),",
              "    FILTER (",
              "        ALL ( 'Time' ),",
              "        CONTAINS ( VALUES ( 'Time'[DAY_DT_LY] ), Time[DAY_DT_LY], 'Time'[Date] )",
              "    )",
              ")"
            ],
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Count LYF",
            "expression": [
              "CALCULATE (",
              "    COUNTROWS ( DISTINCT ( VALUES ( MB_Sales[GEO_SKY] ) ) ),",
              "    FILTER (",
              "        ALL ( 'Time' ),",
              "        CONTAINS (",
              "            VALUES ( 'Time'[FCL_DAY_DT_LY] ),",
              "            'Time'[FCL_DAY_DT_LY], 'Time'[Date]",
              "        )",
              "    )",
              ")"
            ],
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Count Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Str: Count Diff TYLYH]",
              ", \"Calendar\", [Str: Count Diff TYLYC]",
              ", \"Fiscal\",[Str: Count Diff TYLYF]",
              ", BLANK () ),[Str: Count Diff TYLYF])",
              ""
            ],
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Count % Diff TYLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Str: Count % Diff TYLYH]",
              ", \"Calendar\", [Str: Count % Diff TYLYC]",
              ", \"Fiscal\",[Str: Count % Diff TYLYF]",
              ", BLANK () ),[Str: Count % Diff TYLYF])",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Count Diff TYLYH",
            "expression": "CALCULATE ([Str: Count] - [Str: Count LYH])",
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Count Diff TYLYF",
            "expression": "CALCULATE ([Str: Count] - [Str: Count LYF])",
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Count Diff TYLYC",
            "expression": "CALCULATE ([Str: Count] - [Str: Count LYC])",
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Count % Diff TYLYH",
            "expression": "DIVIDE ([Str: Count Diff TYLYH],[Str: Count LYH])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Count % Diff TYLYF",
            "expression": "DIVIDE ([Str: Count Diff TYLYF],[Str: Count LYF])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Count % Diff TYLYC",
            "expression": "DIVIDE ([Str: Count Diff TYLYC],[Str: Count LYC])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Dgtl Count",
            "expression": [
              "CALCULATE (",
              "    COUNTROWS ( DISTINCT ( VALUES ( MB_Sales[GEO_SKY] ) ) ),",
              "    'Channel'[SHOP_CHNL_CT] > 0",
              ")"
            ],
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Dgtl Count LY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Holiday\",[Str: Dgtl Count LYH]",
              ", \"Calendar\", [Str: Dgtl Count LYC]",
              ", \"Fiscal\",[Str: Dgtl Count LYF]",
              ", BLANK () ),[Str: Dgtl Count LYF])"
            ],
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Dgtl Count LYH",
            "expression": [
              "CALCULATE (",
              "    [Str: Dgtl Count],",
              "    FILTER (",
              "        ALL ( 'TIME' ),",
              "        CONTAINS ( VALUES ( 'Time'[LY_HLDY_DAY_DT] ), 'Time'[LY_HLDY_DAY_DT], TIME[Date] )",
              "    )",
              ")"
            ],
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Dgtl Count LYF",
            "expression": [
              "CALCULATE (",
              "    [Str: Dgtl Count],",
              "    FILTER (",
              "        ALL ( 'TIME' ),",
              "        CONTAINS ( VALUES ( 'Time'[FCL_DAY_DT_LY] ), 'Time'[FCL_DAY_DT_LY], TIME[Date] )",
              "    )",
              ")"
            ],
            "displayFolder": "Store Count"
          },
          {
            "name": "Str: Dgtl Count LYC",
            "expression": [
              "CALCULATE (",
              "    [Str: Dgtl Count],",
              "    FILTER (",
              "        ALL ( 'TIME' ),",
              "        CONTAINS ( VALUES ( TIME[DAY_DT_LY] ), TIME[DAY_DT_LY], TIME[Date] )",
              "    )",
              ")"
            ],
            "displayFolder": "Store Count"
          },
          {
            "name": "COGS (MB): $ % Diff TYLYH",
            "description": "Cost of Goods Sold, sourced from Market Basket (excl. Shrink) percent difference between TY and LY holiday",
            "expression": "DIVIDE ( [COGS (MB): $] - [COGS (MB): $ LYH], ABS ( [COGS (MB): $ LYH] ) )",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ % Diff TYLYC",
            "description": "Cost of Goods Sold, sourced from Market Basket (excl. Shrink) percent difference between TY and LY calendar",
            "expression": "DIVIDE ( [COGS (MB): $] - [COGS (MB): $ LYC], ABS ( [COGS (MB): $ LYC] ) )",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ % Diff TYLYF",
            "description": "Cost of Goods Sold, sourced from Market Basket (excl. Shrink) percent difference between TY and LY fiscal",
            "expression": "DIVIDE ( [COGS (MB): $] - [COGS (MB): $ LYF], ABS ( [COGS (MB): $ LYF] ) )",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "COGS"
          },
          {
            "name": "Sls: Comp Qty / Txn  Switch ",
            "expression": "SWITCH(TRUE(),    ISCROSSFILTERED('Channel'),[Sls (MB): Comp Qty / Txn],    [Sls (FNC): Comp Qty / Txn])",
            "formatString": "#,0.00;(#,0);#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (FNC): $ % Diff TYAP WTD",
            "expression": " CALCULATE([Sls (FNC): $ % Diff TYAP] ,'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "DM (FNC): $ % Diff TYAP WTD",
            "expression": " CALCULATE([DM (FNC): $ % Diff TYAP] ,'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "Sls (FNC): $ Diff TYAP WTD",
            "expression": " CALCULATE([Sls (FNC): $ Diff TYAP] , 'Time'[Date]<VALUES(RefreshTime[Date]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Last Sales Date",
            "expression": " CALCULATE(Max('Time'[Date]),'Time'[Date]<VALUES(RefreshTime[Date]))",
            "formatString": "MM/dd/yyyy",
            "displayFolder": "Others",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"1033\" Group=\"ShortDate\" FormatString=\"MM/dd/yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "DATA STATUS",
            "expression": [
              " CALCULATE(IF(AND([Sls (FNC): $]>0,[Sls (MB): $]>0), \"All Data Loaded\",IF([Sls (FNC): $]>0, \"Sales Loaded\",\"Yest not Loaded\")), 'Time'[Date] = TODAY()-1)",
              ""
            ],
            "displayFolder": "Others"
          },
          {
            "name": "Sls (FNC): Qty Diff TYAP Fuel",
            "expression": " CALCULATE([Sls (FNC): Qty]-[Sls (FNC): Fuel Qty AP],'Time'[Date]<VALUES(RefreshTime[Date]))",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Fuel"
          },
          {
            "name": "Sls (FNC): $ Clrn LY FCL",
            "expression": [
              " ",
              "   CALCULATE (        [Sls (FNC): $ Clrn],",
              "   FILTER (            ALL ( 'Time' ),            ",
              "   CONTAINS ( ( VALUES ( 'Time' ) ), 'Time'[FCL_DAY_DT_LY], 'Time'[Date] ) ) )"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "DM (FNC): $ Clrn LY FCL",
            "expression": [
              " ",
              "   CALCULATE (        [DM (FNC): $ Clrn],",
              "   FILTER (            ALL ( 'Time' ),            ",
              "   CONTAINS ( ( VALUES ( 'Time' ) ), 'Time'[FCL_DAY_DT_LY], 'Time'[Date] ) ) )"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Sls (FNC): $ Clrn LY HLDY",
            "expression": [
              " ",
              "   CALCULATE (        [Sls (FNC): $ Clrn],",
              "   FILTER (            ALL ( 'Time' ),            ",
              "   CONTAINS ( ( VALUES ( 'Time' ) ), 'Time'[LY_HLDY_DAY_DT], 'Time'[Date] ) ) )"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "DM (FNC): $ Clrn LY HLDY",
            "expression": [
              " ",
              "   CALCULATE (        [DM (FNC): $ Clrn],",
              "   FILTER (            ALL ( 'Time' ),            ",
              "   CONTAINS ( ( VALUES ( 'Time' ) ), 'Time'[LY_HLDY_DAY_DT], 'Time'[Date] ) ) )"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Sls (FNC): $ Clrn LY CLDR",
            "expression": [
              " ",
              "   CALCULATE (        [Sls (FNC): $ Clrn],",
              "   FILTER (            ALL ( 'Time' ),            ",
              "   CONTAINS ( ( VALUES ( 'Time' ) ), 'Time'[DAY_DT_LY], 'Time'[Date] ) ) )"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "DM (FNC): $ Clrn LY CLDR",
            "expression": [
              " ",
              "   CALCULATE (        [DM (FNC): $ Clrn],",
              "   FILTER (            ALL ( 'Time' ),            ",
              "   CONTAINS ( ( VALUES ( 'Time' ) ), 'Time'[DAY_DT_LY], 'Time'[Date] ) ) ) "
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: Clrn Bgn Wk Sell Thru LY FCL",
            "expression": [
              "",
              "DIVIDE([Sls (FNC): $ Clrn LY FCL]-[DM (FNC): $ Clrn LY FCL],[Sls (FNC): $ Clrn LY FCL]-[DM (FNC): $ Clrn LY FCL]+[Inv: $ Clrn Bgn Wk LYF],BLANK())"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: Clrn Bgn Wk Sell Thru LY HLDY",
            "expression": [
              "",
              "DIVIDE([Sls (FNC): $ Clrn LY HLDY]-[DM (FNC): $ Clrn LY HLDY],[Sls (FNC): $ Clrn LY HLDY]-[DM (FNC): $ Clrn LY HLDY]+[Inv: $ Clrn Bgn Wk LYF],BLANK())"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: Clrn Bgn Wk Sell Thru LY CLDR",
            "expression": [
              "",
              "DIVIDE([Sls (FNC): $ Clrn LY CLDR]-[DM (FNC): $ Clrn LY CLDR],[Sls (FNC): $ Clrn LY CLDR]-[DM (FNC): $ Clrn LY CLDR]+[Inv: $ Clrn Bgn Wk LYF],BLANK())"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Inv: Clrn Bgn Wk Sell Thru LY Switch",
            "expression": [
              " ",
              "\tIF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "\tSWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              "\t\"Holiday\", [Inv: Clrn Bgn Wk Sell Thru LY HLDY]",
              "\t,\"Calendar\",[Inv: Clrn Bgn Wk Sell Thru LY CLDR]",
              "\t, \"Fiscal\",[Inv: Clrn Bgn Wk Sell Thru LY FCL]",
              "\t, BLANK () ), [Inv: Clrn Bgn Wk Sell Thru LY FCL])"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Inv: Clrn Bgn Wk Sell Thru WTD",
            "expression": " IF([Inv: Clrn Bgn Wk Sell Thru] = 0, BLANK(), [Inv: Clrn Bgn Wk Sell Thru])",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Inventory"
          },
          {
            "name": "Sls (FNC): $  WTD",
            "expression": " IF([Sls (FNC): $] = 0, BLANK(), [Sls (FNC): $])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "DM (FNC): $ WTD",
            "expression": " IF([DM (FNC): $] = 0, BLANK(), [DM (FNC): $])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Qty WTD",
            "expression": " IF([Sls (FNC): Qty] = 0, BLANK(), [Sls (FNC): Qty])",
            "formatString": "#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn LYF",
            "expression": "CALCULATE([Sls (MB): $ / Txn LYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))"
          },
          {
            "name": "Sls (MB): Comp $ / Txn LLYF",
            "expression": "CALCULATE([Sls (MB): $ / Txn LLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LLYF",
            "expression": "SUM(Daily_Sales[SLS_FNC_AM_LLY_FSC])",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LLYF Wk Ttl",
            "expression": "CALCULATE([Sls (FNC): $ LLYF],SUMMARIZE('Time','Time'[Week End Date]),ALLEXCEPT('Time','Time'[Calendar Type]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LLYF % Wk Cntb",
            "expression": "DIVIDE([Sls (FNC): $ LLYF],[Sls (FNC): $ LYF Wk Ttl],BLANK())",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LLY Cumul Ttl",
            "expression": "CALCULATE (    [Sls (FNC): $ LLY],    FILTER (        ALLEXCEPT ( 'Time','Time'[Calendar Type] ),        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )            && 'Time'[Date] <= MAX ( 'Time'[Date] )    ))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ LLYF]",
              ", BLANK () ),[Sls (FNC): $ LLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non Comp LLY",
            "expression": "CALCULATE([Sls (FNC): $ LLY],Geography[Store Class]=\"NON-COMP STORE\")",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Diff TYLLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_AM_DIFF_TY_VS_LLY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ Diff TYLLYF]",
              ", BLANK () ),[Sls (FNC): $ Diff TYLLYF]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Diff TYLLYF], [Sls (FNC): $ LLYF], BLANK () ),'Time'[Date]< VALUES(RefreshTime[Date]))"
          },
          {
            "name": "Sls (FNC): $ % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ % Diff TYLLYF]",
              ", BLANK () ),[Sls (FNC): $ % Diff TYLLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ % Diff TYLLY WTD Ttl",
            "expression": "CALCULATE (    CALCULATE ( [Sls (FNC): $ % Diff TYLLY], 'Time'[Date] < Today()),    ALLEXCEPT( 'Time','Time'[Calendar Type] ),    'Time'[Pre-Defined Date Filter] = \"Current Wk\")",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Txn: L3 LLYF",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L3-Sub Category] ),",
              "   CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LLY_FSC]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[P_SUB_CT_ID])",
              "        )",
              "    ),      ",
              "    BLANK ()",
              ")"
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L3 LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Txn: L3 LLYF]",
              ", BLANK () ),[Txn: L3 LLYF])"
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L4 LLYF",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L4-Category] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LLY_FSC]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[P_CT_ID])",
              "        )",
              "    ),       ",
              "    BLANK ()",
              ")"
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L4 LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Txn: L4 LLYF]",
              ", BLANK () ),[Txn: L4 LLYF])"
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L5 LLYF",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L5-Business Segment] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LLY_FSC]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[BUS_SEG_ID])",
              "        )",
              "    )",
              "    ,",
              "    BLANK ()",
              ")"
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L5 LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Txn: L5 LLYF]",
              ", BLANK () ),[Txn: L5 LLYF])"
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L6 LLYF",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Product'[L6-Merchandise Area] ),",
              "    CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LLY_FSC]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[MDS_ARE_ID])",
              "        )",
              "    ),",
              "    BLANK ()",
              ")"
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L6 LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Txn: L6 LLYF]",
              ", BLANK () ),[Txn: L6 LLYF])"
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L7 LLYF",
            "expression": [
              "CALCULATE (",
              "        SUM ( Txn_Sales[FNC_TN_CNT_LLY_FSC]),",
              "        INTERSECT (",
              "            ALL ( Txn_Sales[P_CT_BUS_KEY]),",
              "            VALUES ( 'Product'[MJR_CORP_ID])",
              "        )",
              "    )"
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: L7 LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Txn: L7 LLYF]",
              ", BLANK () ),[Txn: L7 LLYF])",
              ""
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: LLYF",
            "expression": [
              "SWITCH (",
              "    TRUE (),",
              "    ISFILTERED ( 'Product'[L3-Sub Category] ), [Txn: L3 LLYF],",
              "    ISFILTERED ( 'Product'[L4-Category] ), [Txn: L4 LLYF],",
              "    ISFILTERED ( 'Product'[L5-Business Segment] ), [Txn: L5 LLYF],",
              "    ISFILTERED ( 'Product'[L6-Merchandise Area] ), IF (",
              "        CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"FRESH\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"GROCERY\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"HARDLINES\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"HEALTH AND BEAUTY\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"IN AND OUTDOOR HOME\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"PETS AND CONSUMABLES\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"PRESCRIPTIONS\" )",
              "            && CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"SOFTLINES\" )",
              "            && NOT ( CONTAINS ( 'Product', 'Product'[L6-Merchandise Area], \"Gas Station\" ) ),",
              "        [Txn: L7 LLYF],",
              "        [Txn: L6 LLYF]",
              "    ),",
              "    BLANK ()",
              ")"
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: LLYF Cumul Ttl",
            "expression": [
              "CALCULATE (",
              "    [Txn: LLYF],",
              "    FILTER (",
              "        ALLEXCEPT ( 'Time', 'Time'[Calendar Type] ),",
              "        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )",
              "            && 'Time'[Date] <= MAX ( 'Time'[Date] )",
              "    )",
              ")"
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: LLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Txn: LLYF]",
              ", BLANK () ), [Txn: LLYF])"
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Pen LLY",
            "expression": [
              "IF (",
              "    ISBLANK ( [Txn: LLY] ),",
              "    BLANK (),",
              "    DIVIDE ( [Txn: LLY], CALCULATE ( [Txn: L7 LLY], ALL ( 'Product' ) ), BLANK () )",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Pen Bps Diff TYLLY",
            "expression": "([Txn: Pen] - [Txn: Pen LLY])*10000",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Diff TYLLYF",
            "expression": "CALCULATE([Txn]-[Txn: LLYF])",
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Txn: Diff TYLLYF]",
              ", BLANK () ),[Txn: Diff TYLLYF])",
              ""
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Dgtl Pen LLY",
            "expression": "DIVIDE ([Txn: LLY], CALCULATE ([Txn: LLY], ALL('Channel')), BLANK())",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Dgtl Pen Bps Diff TYLLY",
            "expression": "([Txn: Dgtl Pen] - [Txn: Dgtl Pen LLY])*10000",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Count / Day LLY",
            "expression": "AVERAGEX( KEEPFILTERS(VALUES('Time'[Date])), CALCULATE([Txn: LLY]))",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Count / Day Diff TYLLY",
            "expression": [
              "[Txn: Count / Day] - [Txn: Count / Day LLY]",
              ""
            ],
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Count / Day % Diff TYLLY",
            "expression": "DIVIDE ([Txn: Count / Day Diff TYLLY],[Txn: Count / Day LLY])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp LLYF",
            "expression": "CALCULATE([Txn: LLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp LLYF Cumul Ttl",
            "expression": "CALCULATE([Txn: LLYF Cumul Ttl],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Txn: Comp LLYF]",
              ", BLANK () ),[Txn: Comp LLYF])",
              ""
            ],
            "formatString": "0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp Diff TYLLYF",
            "expression": "CALCULATE([Txn: Diff TYLLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Txn: Comp Diff TYLLYF]",
              ", BLANK () ),[Txn: Comp Diff TYLLYF])",
              ""
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE([Txn: Diff TYLLYF],[Txn: LLYF],BLANK()))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Txn: % Diff TYLLYF]",
              ", BLANK () ),[Txn: % Diff TYLLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp % Diff TYLLYF",
            "expression": "CALCULATE([Txn: % Diff TYLLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp % Diff TYLLYF WTD Ttl",
            "expression": [
              "",
              "CALCULATE (",
              "    CALCULATE ( [Txn: Comp % Diff TYLLYF], 'Time'[Date]<VALUES(RefreshTime[Date])),",
              "    ALLEXCEPT( 'Time','Time'[Calendar Type] ),",
              "    'Time'[Pre-Defined Date Filter] = \"Current Wk\"",
              ")"
            ],
            "displayFolder": "Transactions"
          },
          {
            "name": "Sls (MB): Qty LLYF",
            "expression": "SUM(MB_Sales_LLY[SLS_MKT_BSKT_QTY_LLY_FSC])",
            "formatString": "0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty LLY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Fiscal\", [Sls (MB): Qty LLYF],",
              " BLANK()",
              " ),",
              " [Sls (MB): Qty LLYF]",
              ")"
            ],
            "formatString": "0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty Diff TYLLYF",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_QTY])-SUM(MB_Sales_LLY[SLS_MKT_BSKT_QTY_LLY_FSC])",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty Diff TYLLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): Qty Diff TYLLYF]",
              ", BLANK () ),[Sls (MB): Qty Diff TYLLYF])"
            ],
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn LLYF",
            "expression": "DIVIDE ([Sls (MB): Qty LLYF],[Txn: LLYF],BLANK())",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): Qty / Txn LLYF]",
              ", BLANK () ),[Sls (MB): Qty / Txn LLYF])"
            ],
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn Diff TYLLYF",
            "expression": "[Sls (MB): Qty / Txn] - [Sls (MB): Qty / Txn LLYF]",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): Qty / Txn % Diff TYLLYF]",
              ", BLANK () ),[Sls (MB): Qty / Txn % Diff TYLLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty % Diff TYLLYF",
            "expression": [
              "DIVIDE (",
              "            [Sls (MB): Qty] - [Sls (MB): Qty LLYF],",
              "            ABS([Sls (MB): Qty LLYF])",
              "        )"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty % Diff TYLLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): Qty % Diff TYLLYF]",
              ", BLANK () ),[Sls (MB): Qty % Diff TYLLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Qty / Txn % Diff TYLLYF",
            "expression": "DIVIDE ([Sls (MB): Qty / Txn Diff TYLLYF],[Sls (MB): Qty / Txn LLYF])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn LLYF",
            "expression": "CALCULATE([Sls (MB): Qty / Txn LLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): Comp Qty / Txn LLYF]",
              ", BLANK () ),[Sls (MB): Comp Qty / Txn LLYF])"
            ],
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn Diff TYLLYF",
            "expression": "CALCULATE([Sls (MB): Qty / Txn Diff TYLLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn Diff TYLLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): Comp Qty / Txn Diff TYLLYF]",
              ", BLANK () ),[Sls (MB): Comp Qty / Txn Diff TYLLYF])"
            ],
            "formatString": "0.00",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn % Diff TYLLYF",
            "expression": "CALCULATE([Sls (MB): Qty / Txn % Diff TYLLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn % Diff TYLLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): Comp Qty / Txn % Diff TYLLYF]",
              ", BLANK () ),[Sls (MB): Comp Qty / Txn % Diff TYLLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): $ / Txn LLYF",
            "expression": "DIVIDE ([Sls (MB): $ LLYF],[Txn: LLYF],BLANK())",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ LLYF",
            "expression": "SUM(MB_Sales_LLY[SLS_MKT_BSKT_AM_LLY_FSC])",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ LLY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Fiscal\", [Sls (MB): $ LLYF],",
              " BLANK()",
              " ),",
              " [Sls (MB): $ LLYF]",
              ")"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ Diff TYLLYF",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_AM]) - SUM(MB_Sales_LLY[SLS_MKT_BSKT_AM_LLY_FSC])",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ Diff TYLLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): $ Diff TYLLYF]",
              ", BLANK () ),[Sls (MB): $ Diff TYLLYF])"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ Comp Diff TYLLYF",
            "expression": "SUM(MB_Sales[SLS_MKT_BSKT_AM_COMP]) - SUM(MB_Sales_LLY[SLS_MKT_BSKT_AM_COMP_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0;\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ Comp Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): $ Comp Diff TYLLYF]",
              ", BLANK () ),[Sls (MB): $ Comp Diff TYLLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0;\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ % Diff TYLLYF",
            "expression": [
              "DIVIDE (",
              "            [Sls (MB): $] - [Sls (MB): $ LLYF],",
              "            ABS([Sls (MB): $ LLYF])",
              "        )"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              " \"Fiscal\",[Sls (MB): $ % Diff TYLLYF]",
              ", BLANK () ), [Sls (MB): $ % Diff TYLLYF])"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ Comp % Diff TYLLYF",
            "expression": "CALCULATE([Sls (MB): $ % Diff TYLLYF],Geography[Store Class]=\"COMP STORE\")",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ Comp % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): $ Comp % Diff TYLLYF]",
              ", BLANK () ),[Sls (MB): $ Comp % Diff TYLLYF])",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR LLYF",
            "expression": "DIVIDE ([Sls (MB): $ LLYF],[Sls (MB): Qty LLYF])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR LLY",
            "expression": "DIVIDE ([Sls (MB): $ LLY],[Sls (MB): Qty LLY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR Diff TYLLYF",
            "expression": "[Sls (MB): $ AUR] - [Sls (MB): $ AUR LLYF]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): $ AUR Diff TYLLYF]",
              ", BLANK () ),[Sls (MB): $ AUR Diff TYLLYF])"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR % Diff TYLLYF",
            "expression": "DIVIDE ([Sls (MB): $ AUR Diff TYLLYF],[Sls (MB): $ AUR LLYF])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): $ AUR % Diff TYLLYF]",
              ", BLANK () ),[Sls (MB): $ AUR % Diff TYLLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ / Txn Diff TYLLYF",
            "expression": "[Sls (MB): $ / Txn] - [Sls (MB): $ / Txn LLYF]",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ / Txn Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): $ / Txn Diff TYLLYF]",
              ", BLANK () ),[Sls (MB): $ / Txn Diff TYLLYF])"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ / Txn % Diff TYLLYF",
            "expression": "DIVIDE ([Sls (MB): $ / Txn Diff TYLLYF],[Sls (MB): $ / Txn LLYF])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ / Txn % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): $ / Txn % Diff TYLLYF]",
              ", BLANK () ),[Sls (MB): $ / Txn % Diff TYLLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Qty LLYF",
            "expression": [
              "CALCULATE (sum(Daily_Sales[SLS_FNC_QTY_LLY_FSC]))",
              ""
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Qty LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): Qty LLYF]",
              ", BLANK () ),[Sls (FNC): Qty LLYF])"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Qty Diff TYLLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_QTY_DIFF_TY_VS_LLY_FSC]),'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Qty Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): Qty Diff TYLLYF]",
              ", BLANK () ),[Sls (FNC): Qty Diff TYLLYF])"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Qty / Txn LLY",
            "expression": "DIVIDE([Sls (FNC): Qty LLY],[Txn: LLY],BLANK())",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Qty / Txn Diff TYLLY",
            "expression": [
              "CALCULATE([Sls (FNC): Qty / Txn]-[Sls (FNC): Qty / Txn LLY])",
              ""
            ],
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Qty / Txn % Diff TYLLY",
            "expression": "CALCULATE(DIVIDE([Sls (FNC): Qty / Txn Diff TYLLY],[Sls (FNC): Qty / Txn LLY],BLANK()))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Qty % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): Qty Diff TYLLYF], [Sls (FNC): Qty LLYF], BLANK () ),'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Qty % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): Qty % Diff TYLLYF]",
              ", BLANK () ),[Sls (FNC): Qty % Diff TYLLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Comp Qty / Txn Diff TYLLY",
            "expression": "CALCULATE([Sls (FNC): Qty / Txn Diff TYLLY],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "0.00",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Comp Qty / Txn % Diff TYLLY",
            "expression": "CALCULATE([Sls (FNC): Qty / Txn % Diff TYLLY],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (FNC): Comp $ / Txn Diff TYLLYF",
            "expression": "CALCULATE([Sls (FNC): $ / Txn Diff TYLLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn LLYF",
            "expression": "DIVIDE([Sls (FNC): $ LLYF],[Txn: LLYF],BLANK())",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn Diff TYLLYF",
            "expression": "CALCULATE([Sls (FNC): $ / Txn]-[Sls (FNC): $ / Txn LLYF])",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE([Sls (FNC): $ / Txn Diff TYLLYF],[Sls (FNC): $ / Txn LLYF],BLANK()))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ / Txn LLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ / Txn LLYF]",
              ", BLANK () ),[Sls (FNC): $ / Txn LLYF])"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ AUR LLYF",
            "expression": "DIVIDE([Sls (FNC): $ LLYF],[Sls (FNC): Qty LLYF],BLANK())",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ AUR LLY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Fiscal\", [Sls (FNC): $ AUR LLYF],",
              " BLANK()",
              " ),",
              " [Sls (FNC): $ AUR LLYF]",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ AUR Diff TYLLYF",
            "expression": "CALCULATE([Sls (FNC): $ AUR] - [Sls (FNC): $ AUR LLYF],'Time'[Date] <  VALUES(RefreshTime[Date]))"
          },
          {
            "name": "Sls (FNC): $ AUR Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ AUR Diff TYLLYF]",
              ", BLANK () ),[Sls (FNC): $ AUR Diff TYLLYF])"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Clrn Diff TYLLYF], [Sls (FNC): $ Clrn LLYF], BLANK () ))",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn LLYF",
            "expression": "SUM(Daily_Sales[SLS_FNC_CLRN_AM_LLY_FSC])",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn LLY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Fiscal\", [Sls (FNC): $ Clrn LLYF],",
              " BLANK()",
              " ),",
              " [Sls (FNC): $ Clrn LLYF]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Diff TYLLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC]))",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ Clrn Diff TYLLYF]",
              ", BLANK () ),[Sls (FNC): $ Clrn Diff TYLLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ Clrn % Diff TYLLYF]",
              ", BLANK () ),[Sls (FNC): $ Clrn % Diff TYLLYF])",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Comp Diff TYLLY",
            "expression": "CALCULATE([Sls (FNC): $ Diff TYLLY],Geography[Store Class]=\"COMP STORE\")",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Comp % Diff TYLLYF",
            "expression": "CALCULATE([Sls (FNC): $ % Diff TYLLYF],Geography[Store Class]=\"COMP STORE\")",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn LLYF",
            "expression": "SUM(Daily_Sales[SLS_FNC_CLRN_MKDN_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn LLY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Fiscal\", [Sls (FNC): $ Clrn Mkdn LLYF],",
              " BLANK()",
              " ),",
              " [Sls (FNC): $ Clrn Mkdn LLYF]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn Diff TYLLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_CLRN_MKDN_AM_DIFF_TY_VS_LLY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ Clrn Mkdn Diff TYLLYF]",
              ", BLANK () ),[Sls (FNC): $ Clrn Mkdn Diff TYLLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn % LLYF",
            "expression": "DIVIDE([Sls (FNC): $ Clrn Mkdn LLYF],[Sls (FNC): $ Clrn LLYF]+[Sls (FNC): $ Clrn Mkdn LLYF],BLANK())",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Clrn Mkdn Diff TYLLYF], [Sls (FNC): $ Clrn Mkdn LLYF], BLANK () ),'Time'[Date] <  VALUES(RefreshTime[Date]))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn % Diff TYLLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              " \"Fiscal\",[Sls (FNC): $ Clrn Mkdn % Diff TYLLYF]",
              ", BLANK () ), [Sls (FNC): $ Clrn Mkdn % Diff TYLLYF])",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Clrn Mkdn % LLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              " \"Fiscal\",[Sls (FNC): $ Clrn Mkdn % LLYF]",
              ", BLANK () ), [Sls (FNC): $ Clrn Mkdn % LLYF])"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Sales"
          },
          {
            "name": "COGS (FNC): $ LLYF",
            "expression": "SUM(Daily_Sales[COGS_FNC_LLY_FSC])"
          },
          {
            "name": "COGS (FNC): $ LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[COGS (FNC): $ LLYF]",
              ", BLANK () ),[COGS (FNC): $ LLYF])"
            ]
          },
          {
            "name": "COGS (FNC): $ Diff TYLLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[COGS_FNC_DIFF_TY_VS_LLY_FSC]))"
          },
          {
            "name": "COGS (FNC): $ Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[COGS (FNC): $ Diff TYLLYF]",
              ", BLANK () ),[COGS (FNC): $ Diff TYLLYF])"
            ]
          },
          {
            "name": "COGS (FNC): $ % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE ( [COGS (FNC): $ Diff TYLLYF], [COGS (FNC): $ LLYF], BLANK () ))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (FNC): $ % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[COGS (FNC): $ % Diff TYLLYF]",
              ", BLANK () ),[COGS (FNC): $ % Diff TYLLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ LLYF",
            "expression": "SUM(MB_Sales_LLY[COGS_MKT_BSKT_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[COGS (MB): $ LLYF]",
              ", BLANK () ),[COGS (MB): $ LLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ Diff TYLLYF",
            "expression": "SUM(MB_Sales[COGS_MKT_BSKT]) - SUM(MB_Sales_LLY[COGS_MKT_BSKT_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[COGS (MB): $ Diff TYLLYF]",
              ", BLANK () ),[COGS (MB): $ Diff TYLLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "COGS"
          },
          {
            "name": "COGS (MB): $ % Diff TYLLYF",
            "expression": "DIVIDE ( [COGS (MB): $] - [COGS (MB): $ LLYF], ABS ( [COGS (MB): $ LLYF] ) )"
          },
          {
            "name": "COGS (MB): $ % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[COGS (MB): $ % Diff TYLLYF]",
              ", BLANK () ),[COGS (MB): $ % Diff TYLLYF])"
            ]
          },
          {
            "name": "Dct (MB): $ Circ Diff TYLLYF",
            "expression": "SUM(MB_Sales[CALC_CIRC_AM])-SUM(MB_Sales_LLY[CALC_CIRC_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Circ Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Dct (MB): $ Circ Diff TYLLYF]",
              ", BLANK () ),[Dct (MB): $ Circ Diff TYLLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Circ LLYF",
            "expression": "SUM(MB_Sales_LLY[CALC_CIRC_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Circ LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Dct (MB): $ Circ LLYF]",
              ", BLANK () ),[Dct (MB): $ Circ LLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ DCirc LLYF",
            "expression": "SUM(MB_Sales_LLY[CALC_DGTL_CIRC_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ DCirc LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Dct (MB): $ DCirc LLYF]",
              ", BLANK () ),[Dct (MB): $ DCirc LLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ DCirc Diff TYLLYF",
            "expression": "SUM(MB_Sales[CALC_DGTL_CIRC_AM])-SUM(MB_Sales_LLY[CALC_DGTL_CIRC_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ DCirc Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Dct (MB): $ DCirc Diff TYLLYF]",
              ", BLANK () ),[Dct (MB): $ DCirc Diff TYLLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Clrn LLYF",
            "expression": "SUM(MB_Sales_LLY[CALC_CLRN_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Clrn LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Dct (MB): $ Clrn LLYF]",
              ", BLANK () ),[Dct (MB): $ Clrn LLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Clrn Diff TYLLYF",
            "expression": "SUM(MB_Sales[CALC_CLRN_AM]) -SUM(MB_Sales_LLY[CALC_CLRN_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "Dct (MB): $ Clrn Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Dct (MB): $ Clrn Diff TYLLYF]",
              ", BLANK () ),[Dct (MB): $ Clrn Diff TYLLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Discount"
          },
          {
            "name": "DM (MB): $ LLYF",
            "expression": "SUM(MB_Sales_LLY[DMGN_MKT_BSKT_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ LLY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Fiscal\", [DM (MB): $ LLYF],",
              " BLANK()",
              " ),",
              " [DM (MB): $ LLYF]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ Diff TYLLYF",
            "expression": "SUM(MB_Sales[DMGN_MKT_BSKT_AM])-SUM(MB_Sales_LLY[DMGN_MKT_BSKT_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (MB): $ Diff TYLLYF]",
              ", BLANK () ),[DM (MB): $ Diff TYLLYF]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ % Diff TYLLYF",
            "expression": "DIVIDE ([DM (MB): $ Diff TYLLYF],[DM (MB): $ LLYF])",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): $ % Diff TYLLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ),",
              " \"Fiscal\",[DM (MB): $ % Diff TYLLYF]",
              ", BLANK () ), [DM (MB): $ % Diff TYLLYF])"
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg LLYF",
            "expression": "SUM(Daily_Sales[DM_FNC_RRTL_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ Reg LLYF]",
              ", BLANK () ),[DM (FNC): $ Reg LLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg Diff TYLLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[DM_FNC_RRTL_AM_DIFF_TY_VS_LLY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ Reg Diff TYLLYF]",
              ", BLANK () ),[DM (FNC): $ Reg Diff TYLLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Reg Diff TYLLYF], ABS([DM (FNC): $ Reg LLYF]), BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Reg % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ Reg % Diff TYLLYF]",
              ", BLANK () ),[DM (FNC): $ Reg % Diff TYLLYF])",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo LLYF",
            "expression": "SUM(Daily_Sales[DM_FNC_PROMO_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ Promo LLYF]",
              ", BLANK () ),[DM (FNC): $ Promo LLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo Diff TYLLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[DM_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ Promo Diff TYLLYF]",
              ", BLANK () ),[DM (FNC): $ Promo Diff TYLLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Promo Diff TYLLYF], [DM (FNC): $ Promo LLYF], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Promo % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ Promo % Diff TYLLYF]",
              ", BLANK () ),[DM (FNC): $ Promo % Diff TYLLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn LLYF",
            "expression": "SUM(Daily_Sales[DM_FNC_NCLRN_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ Non-Clrn LLYF]",
              ", BLANK () ),[DM (FNC): $ Non-Clrn LLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn Diff TYLLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ Non-Clrn Diff TYLLYF]",
              ", BLANK () ),[DM (FNC): $ Non-Clrn Diff TYLLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Non-Clrn Diff TYLLYF], ABS([DM (FNC): $ Non-Clrn LLYF]), BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Non-Clrn % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ Non-Clrn % Diff TYLLYF]",
              ", BLANK () ),[DM (FNC): $ Non-Clrn % Diff TYLLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ LLYF",
            "expression": "SUM(Daily_Sales[DM_FNC_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ LLYF]",
              ", BLANK () ),[DM (FNC): $ LLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Diff TYLLYF",
            "expression": "CALCULATE(sum(Daily_Sales[DM_FNC_AM_DIFF_TY_VS_LLY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ Diff TYLLYF]",
              ", BLANK () ),[DM (FNC): $ Diff TYLLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ CPG LLYF",
            "expression": "DIVIDE([DM (FNC): $ LLYF],[Sls (FNC): Qty LLYF],BLANK())",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ CPG LLY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Fiscal\", [DM (FNC): $ CPG LLYF],",
              " BLANK()",
              " ),",
              " [DM (FNC): $ CPG LLYF]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ CPG Diff TYLLYF",
            "expression": "CALCULATE([DM (FNC): $ CPG]-[DM (FNC): $ CPG LLYF])",
            "formatString": "\\$#,0.000;(\\$#,0.000);\\$#,0.000",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ CPG Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ CPG Diff TYLLYF]",
              ", BLANK () ),[DM (FNC): $ CPG Diff TYLLYF])"
            ],
            "formatString": "\\$#,0.000;(\\$#,0.000);\\$#,0.000",
            "displayFolder": "Fuel"
          },
          {
            "name": "DM (FNC): $ Clrn LLYF",
            "expression": "SUM(Daily_Sales[DM_FNC_CLRN_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn LLY",
            "expression": [
              "IF (",
              "    HASONEFILTER ( 'Time'[Calendar Type] ),",
              "    SWITCH (",
              "        FILTERS ( 'Time'[Calendar Type] ), ",
              "        \"Fiscal\", [DM (FNC): $ Clrn LLYF],",
              "                BLANK()",
              "    ),",
              "    [DM (FNC): $ Clrn LLYF]",
              ")",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn Diff TYLLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[DM_FNC_CLRN_AM_DIFF_TY_VS_LLY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ Clrn Diff TYLLYF]",
              ", BLANK () ),[DM (FNC): $ Clrn Diff TYLLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Clrn Diff TYLLYF], ABS([DM (FNC): $ Clrn LLYF]), BLANK () ))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0 ",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ Clrn % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ Clrn % Diff TYLLYF]",
              ", BLANK () ),[DM (FNC): $ Clrn % Diff TYLLYF])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ Diff TYLLYF], [DM (FNC): $ LLYF], BLANK () ),'Time'[Date]< VALUES(RefreshTime[Date]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): $ % Diff TYLLYF]",
              ", BLANK () ), [DM (FNC): $ % Diff TYLLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ % CPG Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE ( [DM (FNC): $ CPG Diff TYLLYF], [DM (FNC): $ CPG LLYF], BLANK () ))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): $ % CPG Diff TYLLY",
            "expression": [
              "IF (",
              " HASONEFILTER ( 'Time'[Calendar Type] ),",
              " SWITCH (",
              " FILTERS ( 'Time'[Calendar Type] ),",
              " \"Fiscal\", [DM (FNC): $ % CPG Diff TYLLYF],",
              " BLANK()",
              " ),",
              " [DM (FNC): $ % CPG Diff TYLLYF]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "Title: Cumul Ttls LL",
            "expression": "IF ( HASONEFILTER ( Metric_Switch[Type] ), SWITCH ( FILTERS ( Metric_Switch[Type] ), \"Sales Diff LLY\", \"Cumulative $Sales & Projection\", \"Sales Diff AP\",\"Cumulative $Sales & Projection\", \"DM Diff LLY\", \"Cumulative $DM (FNC) & Projection\", \"DM Diff AP\", \"Cumulative $DM (FNC) & Projection\", \"Txn Comp Diff LLY\", \"Cumulative Comp Txn\", BLANK () ), \"Cumulative $Sales\")",
            "displayFolder": "Others"
          },
          {
            "name": "Title: % Diff LL",
            "expression": "IF (    HASONEFILTER ( Metric_Switch[Type] ),    SWITCH (        FILTERS ( Metric_Switch[Type]  ),        \"Sales Diff LLY\", \"% Sales Diff LLY\",        \"Sales Diff AP\",\"% Sales Diff AP\",        \"DM Diff LY\", \"% DM (FNC) Diff LLY\",        \"DM Diff AP\", \"% DM (FNC) Diff AP\",        \"Txn Comp Diff LLY\", \"% Txn Comp Diff LLY\",        BLANK ()    ),     \"% Sales Diff LLY\" ) ",
            "displayFolder": "Others"
          },
          {
            "name": "Title: $ / Cnt Diff LL",
            "expression": "IF (    HASONEFILTER ( Metric_Switch[Type] ),    SWITCH (        FILTERS ( Metric_Switch[Type] ),        \"Sales Diff LLY\", \"$ Sales Diff LLY\",        \"Sales Diff AP\",\"$ Sales Diff AP\",        \"DM Diff LLY\", \"$ DM (FNC) Diff LLY\",        \"DM Diff AP\", \"$ DM (FNC) Diff AP\",        \"Txn Comp Diff LLY\", \"Txn Comp Diff LLY\",        BLANK ()    ),     \"$ Sales Diff LLY\")",
            "displayFolder": "Others"
          },
          {
            "name": "Title % Switch LL",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ( 'Metric_Switch'[Type] ),",
              "        \"Sales Diff LLY\", \"% Sales Diff LLY\",",
              "        \"Sales Diff AP\", \"% Sales Diff AP\",",
              "        \"DM Diff LLY\", \"% DM (FNC) Diff LLY\",",
              "        \"DM Diff AP\", \"% DM (FNC) Diff AP\",",
              "        \"Txn Comp Diff LLY\", \"% Txn Comp Diff LLY\",",
              "        BLANK ()",
              "    ),",
              "    \"% Sales Diff LLY\"",
              ")"
            ],
            "displayFolder": "Switch"
          },
          {
            "name": "DM (FNC): % Reg LLYF",
            "expression": "DIVIDE([DM (FNC): $ Reg LLYF],[Sls (FNC): $ Reg LLYF],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "Sls (FNC): $ Reg LLYF",
            "expression": "SUM(Daily_Sales[SLS_FNC_RRTL_MKDN_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ Reg LLYF]",
              ", BLANK () ),[Sls (FNC): $ Reg LLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg Diff TYLLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_RRTL_MKDN_AM_DIFF_TY_VS_LLY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ Reg Diff TYLLYF]",
              ", BLANK () ),[Sls (FNC): $ Reg Diff TYLLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Reg Diff TYLLYF], [Sls (FNC): $ Reg LLYF], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Reg % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ Reg % Diff TYLLYF]",
              ", BLANK () ),[Sls (FNC): $ Reg % Diff TYLLYF])",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo LLYF",
            "expression": "SUM(Daily_Sales[SLS_FNC_PROMO_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ Promo LLYF]",
              ", BLANK () ),[Sls (FNC): $ Promo LLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo Diff TYLLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_PROMO_AM_DIFF_TY_VS_LLY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ Promo Diff TYLLYF]",
              ", BLANK () ),[Sls (FNC): $ Promo Diff TYLLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Promo Diff TYLLYF], [Sls (FNC): $ Promo LLYF], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Promo % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ Promo % Diff TYLLYF]",
              ", BLANK () ),[Sls (FNC): $ Promo % Diff TYLLYF])",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "DM (FNC): % Reg LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): % Reg LLYF]",
              ", BLANK () ),[DM (FNC): % Reg LLYF])",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Reg Bps Diff TYLLY",
            "expression": "CALCULATE( ( [DM (FNC): % Reg] - [DM (FNC): % Reg LLY] ) * 10000)",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Promo LLYF",
            "expression": [
              "DIVIDE([DM (FNC): $ Promo LLYF],[Sls (FNC): $ Promo LLYF],BLANK())",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Promo LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): % Promo LLYF]",
              ", BLANK () ),[DM (FNC): % Promo LLYF])",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Promo Bps Diff TYLLY",
            "expression": "CALCULATE(( [DM (FNC): % Promo] - [DM (FNC): % Promo LLY] ) * 10000)",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Non-Clrn LLYF",
            "expression": "DIVIDE([DM (FNC): $ Non-Clrn LLYF],[Sls (FNC): $ Non-Clrn LLYF],BLANK())",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn LLYF",
            "expression": "SUM(Daily_Sales[SLS_FNC_NCLRN_AM_LLY_FSC])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ Non-Clrn LLYF]",
              ", BLANK () ),[Sls (FNC): $ Non-Clrn LLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn Diff TYLLYF",
            "expression": "CALCULATE(SUM(Daily_Sales[SLS_FNC_NCLRN_AM_DIFF_TY_VS_LLY_FSC]))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ Non-Clrn Diff TYLLYF]",
              ", BLANK () ),[Sls (FNC): $ Non-Clrn Diff TYLLYF])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn % Diff TYLLYF",
            "expression": "CALCULATE(DIVIDE ( [Sls (FNC): $ Non-Clrn Diff TYLLYF], [Sls (FNC): $ Reg LLYF], BLANK () ))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ Non-Clrn % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (FNC): $ Non-Clrn % Diff TYLLYF]",
              ", BLANK () ),[Sls (FNC): $ Non-Clrn % Diff TYLLYF])",
              "",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "DM (FNC): % Non-Clrn LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): % Non-Clrn LLYF]",
              ", BLANK () ),[DM (FNC): % Non-Clrn LLYF])",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % LLYF",
            "expression": "DIVIDE([DM (FNC): $ LLYF],[Sls (FNC): $ LLYF],BLANK())",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): % LLYF]",
              ", BLANK () ),[DM (FNC): % LLYF])",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00 %);#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Clrn LLYF",
            "expression": "DIVIDE([DM (FNC): $ Clrn LLYF],[Sls (FNC): $ Clrn LLYF],BLANK())",
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Clrn LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (FNC): % Clrn LLYF]",
              ", BLANK () ),[DM (FNC): % Clrn LLYF])",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Clrn Bps Diff TYLLY",
            "expression": "CALCULATE( ( [DM (FNC): % Clrn] - [DM (FNC): % Clrn LLY] ) * 10000)",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (FNC): % Bps Diff TYLLYF",
            "expression": [
              "CALCULATE (",
              "    ( [DM (FNC): %] - [DM (FNC): % LLYF] )* 10000)",
              ""
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): % LLYF",
            "expression": "DIVIDE ([DM (MB): $ LLYF],[Sls (MB): $ LLYF])",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): % LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (MB): % LLYF]",
              ", BLANK () ),[DM (MB): % LLYF])",
              ""
            ],
            "formatString": "#,0.00 %;(#,0.00) %;#,0.00 %",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): % Bps Diff TYLLYF",
            "expression": "CALCULATE (([DM (MB): %] - [DM (MB): % LLYF])*10000)",
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM (MB): % Bps Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[DM (MB): % Bps Diff TYLLYF]",
              ", BLANK () ),[DM (MB): % Bps Diff TYLLYF])"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "DM: $ % Diff TYLLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ % Diff TYLLYF],    [DM (FNC): $ % Diff TYLLYF]",
              "),",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ % Diff TYLLYF],    [DM (FNC): $ % Diff TYLLYF]",
              "))"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ % Diff TYLLY WTD Ttl Dgtl Switch",
            "expression": [
              "CALCULATE (",
              "    CALCULATE ( ",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ % Diff TYLLY],",
              "    [DM (FNC): $ % Diff TYLLY]",
              ")",
              ", 'Time'[Date] < Today()),",
              "    ALLEXCEPT( 'Time','Time'[Calendar Type] ),",
              "    'Time'[Pre-Defined Date Filter] = \"Current Wk\"",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ Diff TYLLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ Diff TYLLYF],    [DM (FNC): $ Diff TYLLYF]",
              "),",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ Diff TYLLYF],    [DM (FNC): $ Diff TYLLYF]",
              "))"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ LLY Dgtl Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): $ LLYF],",
              "    [DM (FNC): $ LLYF]",
              "))"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ LLY Cumul Ttl Dgtl Switch",
            "expression": [
              "CALCULATE (",
              "    [DM: $ LLY Dgtl Switch],",
              "    FILTER (",
              "        ALLEXCEPT ( 'Time','Time'[Calendar Type] ),",
              "        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )",
              "            && 'Time'[Date] <= MAX ( 'Time'[Date] )",
              "    )",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: % Bps Diff TYLLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): % Bps Diff TYLLYF],    [DM (FNC): % Bps Diff TYLLYF]",
              "),",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[DM (MB): % Bps Diff TYLLYF],    [DM (FNC): % Bps Diff TYLLYF]",
              "))"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (FNC): $ Non Comp Diff TYLLY",
            "expression": "CALCULATE([Sls (FNC): $ Diff TYLLY],Geography[Store Class]=\"NON-COMP STORE\")",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ or Txn % Diff Switch LLY",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "",
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ('Metric_Switch'[Type] ),",
              "        \"Sales Diff LLY\", [Sls (FNC): $ % Diff TYLLYF],",
              "        \"Sales Diff AP\", [Sls (FNC): $ % Diff TYAP],",
              "        \"DM Diff LLY\", [DM (FNC): $ % Diff TYLLYF],",
              "        \"DM Diff AP\", [DM (FNC): $ % Diff TYAP],",
              "        \"Txn Comp Diff LLY\", [Txn: Comp % Diff TYLLYF],",
              "        BLANK ()",
              "    ),",
              "    [Sls (FNC): $ % Diff TYLLYF]",
              "))"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (FNC): $ or Txn Cumul Ttl Switch LLY",
            "expression": [
              "IF (    HASONEFILTER (Metric_Switch[Type]),    ",
              "SWITCH (        FILTERS ( Metric_Switch[Type] ),        ",
              "\"Sales Diff LLY\", [Sls (FNC): $ Cumul Ttl],        ",
              "\"Sales Diff AP\", [Sls (FNC): $ Cumul Ttl],        ",
              "\"DM Diff LLY\", [DM (FNC): $ Cumul Ttl],        ",
              "\"DM Diff AP\", [DM (FNC): $ Cumul Ttl],        ",
              "\"Txn Comp Diff LLY\", [Txn: Comp Cumul Ttl],        ",
              "BLANK ()    ),    [Sls (FNC): $ Cumul Ttl])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (FNC): $ Comp LLY",
            "expression": "CALCULATE([Sls (FNC): $ LLY],Geography[Store Class]=\"COMP STORE\")",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): $ or Txn Diff Switch LLY",
            "expression": [
              "",
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              " ",
              "IF (",
              " HASONEFILTER ( 'Metric_Switch'[Type] ),",
              " SWITCH (",
              " FILTERS ('Metric_Switch'[Type] ),",
              " \"Sales Diff LLY\",[Sls (FNC): $ Diff TYLLY],",
              " \"Sales Diff AP\",[Sls (FNC): $ Diff TYAP],",
              " \"DM Diff LLY\", [DM (FNC): $ Diff TYLLY],",
              " \"DM Diff AP\", [DM (FNC): $ Diff TYAP],",
              " \"Txn Comp Diff LLY\", [Txn: Comp Diff TYLLYF],",
              " BLANK ()",
              " ),",
              " [Sls (FNC): $ Diff TYLLY]",
              "))"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (FNC): $ or Txn LLY Cumul Ttl Switch",
            "expression": [
              "",
              "IF (    HASONEFILTER ( Metric_Switch[Type] ),    SWITCH (        FILTERS ( Metric_Switch[Type]  ),        ",
              "\"Sales Diff LLY\", [Sls (FNC): $ LLY Cumul Ttl],        ",
              "\"Sales Diff AP\", [Sls (FNC): $ LLY Cumul Ttl],        ",
              "\"DM Diff LLY\", [DM (FNC): $ LLY Cumul Ttl],        ",
              "\"DM Diff AP\", [DM (FNC): $ LLY Cumul Ttl],        ",
              "\"Txn Comp Diff LLY\", [Txn: Comp LLY Cumul Ttl],        BLANK ()    ),    [Sls (FNC): $ LLY Cumul Ttl])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "DM (FNC): $ LLY Cumul Ttl",
            "expression": "CALCULATE (    [DM (FNC): $ LLY],    FILTER (        ALLEXCEPT ( 'Time','Time'[Calendar Type] ),        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )            && 'Time'[Date] <= MAX ( 'Time'[Date] )    ))",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Direct Margin"
          },
          {
            "name": "Sls: Comp $ / Txn Diff TYLLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): Comp $ / Txn Diff TYLLYF],    [Sls (FNC): Comp $ / Txn Diff TYLLYF]",
              "))"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: Comp $ / Txn % Diff TYLLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): Comp $ / Txn % Diff TYLLYF],   [Sls (FNC): Comp $ / Txn % Diff TYLLYF]",
              "))"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (MB): Comp $ / Txn LLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): Comp $ / Txn LLYF]",
              ", BLANK () ),[Sls (MB): Comp $ / Txn LLYF])"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn Diff TYLLYF",
            "expression": "CALCULATE([Sls (MB): $ / Txn Diff TYLLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): Comp $ / Txn Diff TYLLYF]",
              ", BLANK () ),[Sls (MB): Comp $ / Txn Diff TYLLYF])"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn % Diff TYLLYF",
            "expression": "CALCULATE([Sls (MB): $ / Txn % Diff TYLLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): Comp $ / Txn % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Sls (MB): Comp $ / Txn % Diff TYLLYF]",
              ", BLANK () ),[Sls (MB): Comp $ / Txn % Diff TYLLYF])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Comp $ / Txn Diff TYLLY",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ),",
              "SWITCH ( FILTERS ( 'Time'[Calendar Type] ), \"Fiscal\",[Sls (FNC): Comp $ / Txn Diff TYLLYF]",
              ", BLANK () ), [Sls (FNC): Comp $ / Txn Diff TYLLYF])"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (FNC): Comp $ / Txn % Diff TYLLYF",
            "expression": "CALCULATE([Sls (FNC): $ / Txn % Diff TYLLYF],FILTER(Geography,Geography[Store Class]=\"COMP STORE\"))",
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Txn: Comp LLY Cumul Ttl",
            "expression": [
              "IF(HASONEFILTER('Time'[Calendar Type]),",
              "SWITCH(FILTERS ( 'Time'[Calendar Type] ),",
              "\"Fiscal\",[Txn: Comp LLYF Cumul Ttl],",
              "BLANK()),",
              "[Txn: Comp LLYF Cumul Ttl])",
              ""
            ],
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp % Diff TYLLY",
            "expression": [
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Txn: Comp % Diff TYLLYF]",
              ", BLANK () ),[Txn: Comp % Diff TYLLYF])",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Sls: $ Diff TYLLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ Diff TYLLYF],    [Sls (FNC): $ Diff TYLLYF]",
              "),",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ Diff TYLLYF],    [Sls (FNC): $ Diff TYLLYF]",
              "))"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ Comp % Diff TYLLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ Comp % Diff TYLLYF],    [Sls (FNC): $ Comp % Diff TYLLYF]",
              "))"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ % Diff TYLLY Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ % Diff TYLLYF],    [Sls (FNC): $ % Diff TYLLYF]",
              "))"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ or Txn Diff Switch LL",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ( 'Metric_Switch'[Type] ),",
              "        \"Sales Diff LLY\", [Sls: $ Diff TYLLY Switch],",
              "        \"Sales Diff AP\", [Sls: $ Diff TYAP Switch],",
              "        \"DM Diff LLY\", [DM: $ Diff TYLLY Switch],",
              "        \"DM Diff AP\", [DM: $ Diff TYAP Switch],",
              "        \"Txn Comp Diff LLY\", [Txn: Comp Diff TYLLY],",
              "        BLANK ()",
              "    ),",
              "    [Sls: $ Diff TYLLY Switch]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ LLY Cumul Ttl Dgtl Switch",
            "expression": [
              "CALCULATE (",
              "    [Sls: $ LLY Dgtl Switch],",
              "    FILTER (",
              "        ALLEXCEPT ( 'Time','Time'[Calendar Type] ),",
              "        'Time'[Week End Date] = MAX ( 'Time'[Week End Date] )",
              "            && 'Time'[Date] <= MAX ( 'Time'[Date] )",
              "    )",
              ")"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ LLY Dgtl Switch",
            "expression": [
              "",
              "IF(SELECTEDVALUE('TIME'[Calendar Type])=\"Fiscal\",",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ LLYF],",
              "    [Sls (FNC): $ LLYF]",
              "))"
            ],
            "formatString": "\\$#,0.0;(\\$#,0.0);\\$#,0.0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ % Diff TYLLY WTD Ttl Dgtl Switch",
            "expression": [
              "CALCULATE (",
              "    CALCULATE ( ",
              "SWITCH(TRUE(),",
              "    ISCROSSFILTERED('Channel'),[Sls (MB): $ % Diff TYLLY],",
              "    [Sls (FNC): $ % Diff TYLLY]",
              ")",
              ", 'Time'[Date] < Today()),",
              "    ALLEXCEPT( 'Time','Time'[Calendar Type] ),",
              "    'Time'[Pre-Defined Date Filter] = \"Current Wk\"",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Txn: Comp % Diff TYLLY WTD Ttl",
            "expression": [
              "",
              "IF ( HASONEFILTER ( 'Time'[Calendar Type] ), SWITCH ( FILTERS ( 'Time'[Calendar Type] )",
              ", \"Fiscal\",[Txn: Comp % Diff TYLLYF WTD Ttl]",
              ", BLANK () ),[Txn: Comp % Diff TYLLYF WTD Ttl])"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Sls: $ Comp % Diff TYLYLLY Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS ( LLY_Switch[TYP]),",
              "        \"LY\", [Sls: $ Comp % Diff TYLY Switch],",
              "        \"LLY\", [Sls: $ Comp % Diff TYLLY Switch],",
              "        BLANK()",
              "    ),",
              "    [Sls: $ Comp % Diff TYLY Switch]",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ Diff TYLYLLY Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS ( LLY_Switch[TYP]),",
              "        \"LY\", [Sls: $ Diff TYLY Switch],",
              "        \"LLY\", [Sls: $ Diff TYLLY Switch],",
              "        BLANK()",
              "    ),",
              "     [Sls: $ Diff TYLY Switch]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ % Diff TYLYLLY Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS ( LLY_Switch[TYP]),",
              "        \"LY\", [Sls: $ % Diff TYLY Switch],",
              "        \"LLY\", [Sls: $ % Diff TYLLY Switch],",
              "        BLANK()",
              "    ),",
              "    [Sls: $ % Diff TYLY Switch]",
              ")",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ or Txn Diff TYLYLLY Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS ( LLY_Switch[TYP]),",
              "        \"LY\", [Sls: $ or Txn Diff Switch],",
              "        \"LLY\", [Sls: $ or Txn Diff Switch LL],",
              "        BLANK()",
              "    ),",
              "   [Sls: $ or Txn Diff Switch]",
              ")",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ Diff TYLYLLY Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS (LLY_Switch[TYP]),",
              "        \"LY\", [DM: $ Diff TYLY Switch],",
              "        \"LLY\", [DM: $ Diff TYLLY Switch],",
              "        BLANK()",
              "    ),",
              "    [DM: $ Diff TYLY Switch]",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: $ % Diff TYLYLLY Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS (LLY_Switch[TYP]),",
              "        \"LY\", [DM: $ % Diff TYLY Switch],",
              "        \"LLY\", [DM: $ % Diff TYLLY Switch],",
              "        BLANK()",
              "    ),",
              "    [DM: $ % Diff TYLY Switch]",
              ")",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "DM: % Bps Diff TYLYLLY Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS (LLY_Switch[TYP]),",
              "        \"LY\", [DM: % Bps Diff TYLY Switch],",
              "        \"LLY\", [DM: % Bps Diff TYLLY Switch],",
              "        BLANK()",
              "    ),",
              "     [DM: % Bps Diff TYLY Switch]",
              ")",
              ""
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (MB): $ AUR % Diff TYLYLLY",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER (LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS (LLY_Switch[TYP] ),",
              "        \"LY\", [Sls (MB): $ AUR % Diff TYLY],",
              "        \"LLY\", [Sls (MB): $ AUR % Diff TYLLY],",
              "        BLANK()",
              "    ),",
              "    [Sls (MB): $ AUR % Diff TYLY]",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales"
          },
          {
            "name": "Sls (MB): $ AUR Diff TYLYLLY",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER (LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS (LLY_Switch[TYP] ),",
              "        \"LY\", [Sls (MB): $ AUR Diff TYLY],",
              "        \"LLY\", [Sls (MB): $ AUR Diff TYLLY],",
              "        BLANK()",
              "    ),",
              "    [Sls (MB): $ AUR Diff TYLY]",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales"
          },
          {
            "name": "Txn: Comp Diff TYLYLLY",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS (LLY_Switch[TYP]),",
              "        \"LY\", [Txn: Comp Diff TYLY],",
              "        \"LLY\", [Txn: Comp Diff TYLLY],",
              "        BLANK()",
              "    ),",
              "    [Txn: Comp Diff TYLY]",
              ")"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Transactions"
          },
          {
            "name": "Txn: Comp % Diff TYLYLLY",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS (LLY_Switch[TYP]),",
              "        \"LY\", [Txn: Comp % Diff TYLY],",
              "        \"LLY\", [Txn: Comp % Diff TYLLY],",
              "        BLANK()",
              "    ),",
              "    [Txn: Comp % Diff TYLY]",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Transactions"
          },
          {
            "name": "Sls: Comp $ / Txn Diff TYLYLLY Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS ( LLY_Switch[TYP]),",
              "        \"LY\", [Sls: Comp $ / Txn Diff TYLY Switch],",
              "        \"LLY\", [Sls: Comp $ / Txn Diff TYLLY Switch],",
              "        BLANK()",
              "    ),",
              "    [Sls: Comp $ / Txn Diff TYLY Switch]",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: Comp $ / Txn % Diff TYLYLLY Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS ( LLY_Switch[TYP]),",
              "        \"LY\", [Sls: Comp $ / Txn % Diff TYLY Switch],",
              "        \"LLY\", [Sls: Comp $ / Txn % Diff TYLLY Switch],",
              "        BLANK()",
              "    ),",
              "    [Sls: Comp $ / Txn % Diff TYLY Switch]",
              ")"
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn Diff TYLYLLY",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS ( LLY_Switch[TYP]),",
              "        \"LY\", [Sls (MB): Comp Qty / Txn Diff TYLY],",
              "        \"LLY\", [Sls (MB): Comp Qty / Txn Diff TYLLY],",
              "        BLANK()",
              "    ),",
              "    [Sls (MB): Comp Qty / Txn Diff TYLY]",
              ")"
            ],
            "formatString": "0.00",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls (MB): Comp Qty / Txn % Diff TYLYLLY",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS ( LLY_Switch[TYP]),",
              "        \"LY\", [Sls (MB): Comp Qty / Txn % Diff TYLY],",
              "        \"LLY\", [Sls (MB): Comp Qty / Txn % Diff TYLLY],",
              "        BLANK()",
              "    ),",
              "    [Sls (MB): Comp Qty / Txn % Diff TYLY]",
              ")",
              ""
            ],
            "formatString": "#,0.0 %;(#,0.0) %;#,0.0 %",
            "displayFolder": "Sales Quantity"
          },
          {
            "name": "Sls: $ or Txn LLY Cumul Ttl Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( 'Metric_Switch'[Type] ),",
              "    SWITCH (",
              "        FILTERS ( 'Metric_Switch'[Type] ),",
              "        \"Sales Diff LY\", [Sls: $ LLY Cumul Ttl Dgtl Switch],",
              "        \"Sales Diff AP\", [Sls: $ LY Cumul Ttl Dgtl Switch],",
              "        \"DM Diff LY\", [DM: $ LLY Cumul Ttl Dgtl Switch],",
              "        \"DM Diff AP\", [DM: $ LY Cumul Ttl Dgtl Switch],",
              "        \"Txn Comp Diff LY\", [Txn: Comp LLY Cumul Ttl],",
              "        BLANK()",
              "    ),",
              "    [Sls: $ LLY Cumul Ttl Dgtl Switch]",
              ")"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Switch"
          },
          {
            "name": "Sls: $ or Txn LYLLY Cumul Ttl Switch",
            "expression": [
              "",
              "IF (",
              "    HASONEFILTER ( LLY_Switch[TYP] ),",
              "    SWITCH (",
              "        FILTERS ( LLY_Switch[TYP]),",
              "        \"LY\", [Sls: $ or Txn LY Cumul Ttl Switch],",
              "        \"LLY\", [Sls: $ or Txn LLY Cumul Ttl Switch],",
              "        BLANK()",
              "    ),",
              "    [Sls: $ or Txn LY Cumul Ttl Switch]",
              ")"
            ],
            "formatString": "#,0;(#,0);#,0",
            "displayFolder": "Switch"
          }
        ]
      },
      {
        "name": "MB_Sales_LLY",
        "isHidden": true,
        "columns": [
          {
            "name": "GEO_HST_SKY",
            "dataType": "int64",
            "sourceColumn": "GEO_HST_SKY"
          },
          {
            "name": "GEO_SKY",
            "dataType": "int64",
            "sourceColumn": "GEO_SKY"
          },
          {
            "name": "TM_SKY",
            "dataType": "int64",
            "sourceColumn": "TM_SKY"
          },
          {
            "name": "CHNL_HST_SKY",
            "dataType": "int64",
            "sourceColumn": "CHNL_HST_SKY"
          },
          {
            "name": "CHNL_SKY",
            "dataType": "int64",
            "sourceColumn": "CHNL_SKY"
          },
          {
            "name": "P_SUB_CT_ID",
            "dataType": "string",
            "sourceColumn": "P_SUB_CT_ID"
          },
          {
            "name": "BYR_HST_SKY",
            "dataType": "int64",
            "sourceColumn": "BYR_HST_SKY"
          },
          {
            "name": "BYR_SKY",
            "dataType": "int64",
            "sourceColumn": "BYR_SKY"
          },
          {
            "name": "UT_ID",
            "dataType": "int64",
            "sourceColumn": "UT_ID"
          },
          {
            "name": "SLS_MKT_BSKT_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_MKT_BSKT_AM_LLY_FSC"
          },
          {
            "name": "SLS_MKT_BSKT_QTY_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_MKT_BSKT_QTY_LLY_FSC"
          },
          {
            "name": "DMGN_MKT_BSKT_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "DMGN_MKT_BSKT_AM_LLY_FSC"
          },
          {
            "name": "COGS_MKT_BSKT_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "COGS_MKT_BSKT_LLY_FSC"
          },
          {
            "name": "DGTL_UT_SLS_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "DGTL_UT_SLS_AM_LLY_FSC"
          },
          {
            "name": "CALC_CIRC_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "CALC_CIRC_AM_LLY_FSC"
          },
          {
            "name": "CALC_CLRN_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "CALC_CLRN_AM_LLY_FSC"
          },
          {
            "name": "CALC_DGTL_CIRC_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "CALC_DGTL_CIRC_AM_LLY_FSC"
          },
          {
            "name": "CALC_HOOK_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "CALC_HOOK_AM_LLY_FSC"
          },
          {
            "name": "CALC_DUM_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "CALC_DUM_AM_LLY_FSC"
          },
          {
            "name": "CALC_MDWK_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "CALC_MDWK_AM_LLY_FSC"
          },
          {
            "name": "CALC_MPRKS_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "CALC_MPRKS_AM_LLY_FSC"
          },
          {
            "name": "CALC_OTH_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "CALC_OTH_AM_LLY_FSC"
          },
          {
            "name": "CALC_PERS_RWRD_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "CALC_PERS_RWRD_AM_LLY_FSC"
          },
          {
            "name": "CALC_SHLF_EDG_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "CALC_SHLF_EDG_AM_LLY_FSC"
          },
          {
            "name": "CALC_SP_EVNT_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "CALC_SP_EVNT_AM_LLY_FSC"
          },
          {
            "name": "CALC_TEAM_MMB_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "CALC_TEAM_MMB_AM_LLY_FSC"
          },
          {
            "name": "DGTL_SHOP_SLS_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "DGTL_SHOP_SLS_AM_LLY_FSC"
          },
          {
            "name": "SHOP_AND_SCN_STO_SLS_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SHOP_AND_SCN_STO_SLS_AM_LLY_FSC"
          },
          {
            "name": "SHOP_AND_SCN_SLS_AM_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SHOP_AND_SCN_SLS_AM_LLY_FSC"
          },
          {
            "name": "SLS_MKT_BSKT_AM_COMP_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_MKT_BSKT_AM_COMP_LLY_FSC"
          },
          {
            "name": "SLS_MKT_BSKT_AM_NCOMP_LLY_FSC",
            "dataType": "double",
            "sourceColumn": "SLS_MKT_BSKT_AM_NCOMP_LLY_FSC"
          }
        ],
        "partitions": [
          {
            "name": "MB_Sales_LLY_202109",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210901 and [TM_SKY] <= 20210930)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                  "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210901 and [TM_SKY] <= 20210930)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_LLY_202102",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210201 and [TM_SKY] <= 20210228)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                  "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210201 and [TM_SKY] <= 20210228)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_LLY_202103",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210301 and [TM_SKY] <= 20210331)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                  "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210301 and [TM_SKY] <= 20210331)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_LLY_202104",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210401 and [TM_SKY] <= 20210430)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                  "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210401 and [TM_SKY] <= 20210430)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_LLY_202105",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210501 and [TM_SKY] <= 20210531)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                  "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210501 and [TM_SKY] <= 20210531)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_LLY_202106",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210601 and [TM_SKY] <= 20210630)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                  "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210601 and [TM_SKY] <= 20210630)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_LLY_202107",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210701 and [TM_SKY] <= 20210731)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                  "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210701 and [TM_SKY] <= 20210731)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_LLY_202108",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210801 and [TM_SKY] <= 20210831)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                  "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210801 and [TM_SKY] <= 20210831)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_LLY_202110",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20211001 and [TM_SKY] <= 20211031)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                  "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20211001 and [TM_SKY] <= 20211031)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_LLY_202111",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20211101 and [TM_SKY] <= 20211130)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                  "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20211101 and [TM_SKY] <= 20211130)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_LLY_202101",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210101 and [TM_SKY] <= 20210131)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                  "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20210101 and [TM_SKY] <= 20210131)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "MB_Sales_LLY_202112",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20211201 and [TM_SKY] <= 20211231)",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = Synapse_DWH,",
                  "    PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY = Source{[Schema=\"PRES\",Item=\"V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY\"]}[Data],",
                  "    #\"Sorted Rows\" = Table.Sort(PRES_V_GET_FCT_DLY_SL_MB_P_SUB_CT_CALC_LLY,{{\"TM_SKY\", Order.Ascending}}),",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [TM_SKY] >= 20211201 and [TM_SKY] <= 20211231)",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "LLY_Switch",
        "columns": [
          {
            "name": "TYP",
            "dataType": "string",
            "sourceColumn": "TYP"
          },
          {
            "name": "INDX_ID",
            "dataType": "int64",
            "sourceColumn": "INDX_ID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Synapse_DWH,",
                "    PRES_V_LLY_SWTH = Source{[Schema=\"PRES\",Item=\"V_LLY_SWTH\"]}[Data]",
                "in",
                "    PRES_V_LLY_SWTH"
              ]
            }
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "0802e316-d0d8-46f0-85c1-5d7dcf8d9b90",
        "fromTable": "Time",
        "fromColumn": "TM_SKY",
        "toTable": "Time__Bridge",
        "toColumn": "TM_SKY",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "0b2edfba-8750-4de9-bdd0-811c61afbf3f",
        "fromTable": "Daily_Sales",
        "fromColumn": "TM_SKY",
        "toTable": "Time__Bridge",
        "toColumn": "TM_SKY"
      },
      {
        "name": "fc8e4628-5b38-4ea2-9333-0e6e415944c5",
        "fromTable": "MB_Sales",
        "fromColumn": "TM_SKY",
        "toTable": "Time__Bridge",
        "toColumn": "TM_SKY"
      },
      {
        "name": "0c9147e7-bf43-4aa0-a916-73d313d42239",
        "fromTable": "Txn_Sales",
        "fromColumn": "TM_SKY",
        "toTable": "Time__Bridge",
        "toColumn": "TM_SKY"
      },
      {
        "name": "28c5901d-c1eb-46dd-a561-ae31fa7a4e49",
        "fromTable": "Weekly_Inventory",
        "fromColumn": "TM_SKY",
        "toTable": "Time__Bridge",
        "toColumn": "TM_SKY"
      },
      {
        "name": "2ebf95ce-af1e-43c9-8feb-a8220015a8df",
        "fromTable": "Daily_Sales",
        "fromColumn": "GEO_SKY",
        "toTable": "Geography",
        "toColumn": "GEO_SKY"
      },
      {
        "name": "8bab93a5-5b80-482a-9af2-8b56741cd9b2",
        "fromTable": "Txn_Sales",
        "fromColumn": "GEO_SKY",
        "toTable": "Geography",
        "toColumn": "GEO_SKY"
      },
      {
        "name": "83c52d7d-5d03-4247-8d5a-6d45cee74b1f",
        "fromTable": "MB_Sales",
        "fromColumn": "GEO_SKY",
        "toTable": "Geography",
        "toColumn": "GEO_SKY"
      },
      {
        "name": "dc785328-6f97-40ee-a790-66d95258894f",
        "fromTable": "Weekly_Inventory",
        "fromColumn": "GEO_SKY",
        "toTable": "Geography",
        "toColumn": "GEO_SKY"
      },
      {
        "name": "25e6db17-a592-4865-87fa-64f6388974bc",
        "fromTable": "Weekly_Inventory",
        "fromColumn": "P_SUB_CT_ID",
        "toTable": "Product",
        "toColumn": "P_SUB_CT_ID"
      },
      {
        "name": "b0f57f41-3fd8-4459-a635-d48d2a21d74d",
        "fromTable": "Daily_Sales",
        "fromColumn": "P_SUB_CT_ID",
        "toTable": "Product",
        "toColumn": "P_SUB_CT_ID"
      },
      {
        "name": "8ceba597-d2c5-48da-8048-1d4de6bff8ea",
        "fromTable": "MB_Sales",
        "fromColumn": "BYR_SKY",
        "toTable": "People",
        "toColumn": "BYR_SKY"
      },
      {
        "name": "bd925214-2f34-487e-beba-8965649f1507",
        "fromTable": "Daily_Sales",
        "fromColumn": "BYR_SKY",
        "toTable": "People",
        "toColumn": "BYR_SKY"
      },
      {
        "name": "5d83c664-6da5-4adf-8900-c1614db116e2",
        "fromTable": "Weekly_Inventory",
        "fromColumn": "BYR_SKY",
        "toTable": "People",
        "toColumn": "BYR_SKY"
      },
      {
        "name": "5e704620-31e9-4a23-9c31-e7e7265f1f57",
        "fromTable": "Txn_Sales",
        "fromColumn": "CHNL_SKY",
        "toTable": "Channel",
        "toColumn": "CHNL_SKY"
      },
      {
        "name": "71aacf25-0043-4f0e-a336-ba2ec3d457eb",
        "fromTable": "MB_Sales",
        "fromColumn": "CHNL_SKY",
        "toTable": "Channel",
        "toColumn": "CHNL_SKY"
      },
      {
        "name": "2858b2d4-76f2-4863-9a15-b995a4db916c",
        "fromTable": "MB_Sales",
        "fromColumn": "P_SUB_CT_ID",
        "toTable": "Product",
        "toColumn": "P_SUB_CT_ID"
      },
      {
        "name": "691a01ac-6179-4e30-98e0-7f027f427a1f",
        "fromTable": "MB_Sales_LLY",
        "fromColumn": "CHNL_SKY",
        "toTable": "Channel",
        "toColumn": "CHNL_SKY"
      },
      {
        "name": "9cc64734-afcf-4366-8c30-a61f3ba5087e",
        "fromTable": "MB_Sales_LLY",
        "fromColumn": "GEO_SKY",
        "toTable": "Geography",
        "toColumn": "GEO_SKY"
      },
      {
        "name": "0ea4463b-08b8-4211-b0fa-d08dc95da2bc",
        "fromTable": "MB_Sales_LLY",
        "fromColumn": "TM_SKY",
        "toTable": "Time__Bridge",
        "toColumn": "TM_SKY"
      },
      {
        "name": "7743127f-ca26-43d2-9ec0-b03a36131caa",
        "fromTable": "MB_Sales_LLY",
        "fromColumn": "BYR_SKY",
        "toTable": "People",
        "toColumn": "BYR_SKY"
      },
      {
        "name": "484cd42f-a4c1-419b-8d59-89a7472a403a",
        "fromTable": "MB_Sales_LLY",
        "fromColumn": "P_SUB_CT_ID",
        "toTable": "Product",
        "toColumn": "P_SUB_CT_ID"
      }
    ],
    "roles": [
      {
        "name": "Daily Perf Brief Read ",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "obj:8161b9c9-ead1-478a-88e4-077a86239e04@9b415222-16dc-4250-bd60-8a375591609a",
            "memberId": "obj:8161b9c9-ead1-478a-88e4-077a86239e04@9b415222-16dc-4250-bd60-8a375591609a",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Sunanda.Nayak1@meijer.com",
            "memberId": "Sunanda.Nayak1@meijer.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Jeff.Sayles@meijer.com",
            "memberId": "Jeff.Sayles@meijer.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Senthilraj.Ulagasundaram@meijer.com",
            "memberId": "Senthilraj.Ulagasundaram@meijer.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Muthu.Prakash@meijer.com",
            "memberId": "Muthu.Prakash@meijer.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Nirmita.Muzumdar@meijer.com",
            "memberId": "Nirmita.Muzumdar@meijer.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Shakti.Chand@meijer.com",
            "memberId": "Shakti.Chand@meijer.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Joseph.Openshaw@meijer.com",
            "memberId": "Joseph.Openshaw@meijer.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Payel.Paul@meijer.com",
            "memberId": "Payel.Paul@meijer.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Ayan.Kundu@meijer.com",
            "memberId": "Ayan.Kundu@meijer.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Samidh.Roy@meijer.com",
            "memberId": "Samidh.Roy@meijer.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "obj:a20982c6-3999-4086-b719-f0c26f04bfa4@9b415222-16dc-4250-bd60-8a375591609a",
            "memberId": "obj:a20982c6-3999-4086-b719-f0c26f04bfa4@9b415222-16dc-4250-bd60-8a375591609a",
            "identityProvider": "AzureAD"
          }
        ]
      },
      {
        "name": "Daily Perf Brief Read Process",
        "modelPermission": "readRefresh",
        "members": [
          {
            "memberName": "obj:8161b9c9-ead1-478a-88e4-077a86239e04@9b415222-16dc-4250-bd60-8a375591609a",
            "memberId": "obj:8161b9c9-ead1-478a-88e4-077a86239e04@9b415222-16dc-4250-bd60-8a375591609a",
            "identityProvider": "AzureAD"
          }
        ]
      },
      {
        "name": "Daily Perf Brief Admin",
        "modelPermission": "administrator",
        "members": [
          {
            "memberName": "Edwin.Gwe@meijer.com",
            "memberId": "Edwin.Gwe@meijer.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Abraham.Babu@meijer.com",
            "memberId": "Abraham.Babu@meijer.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Meenambigai.Boopathiraj@meijer.com",
            "memberId": "Meenambigai.Boopathiraj@meijer.com",
            "identityProvider": "AzureAD"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "600"
      },
      {
        "name": "TabularEditor_SerializeOptions",
        "value": "{\"IgnoreInferredObjects\":true,\"IgnoreInferredProperties\":true,\"IgnoreTimestamps\":true,\"SplitMultilineStrings\":true,\"PrefixFilenames\":false,\"LocalTranslations\":false,\"LocalPerspectives\":false,\"LocalRelationships\":false,\"Levels\":[\"Data Sources\",\"Perspectives\",\"Relationships\",\"Roles\",\"Tables\",\"Tables/Columns\",\"Tables/Hierarchies\",\"Tables/Measures\",\"Tables/Partitions\",\"Tables/Calculation Items\",\"Translations\"]}"
      }
    ]
  },
  "id": "SemanticModel"
}
