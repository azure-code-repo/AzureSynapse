
CREATE PROC [ETL].[PROC_DIM_BYR_P_SUB_CT_TABLELOAD] AS


BEGIN TRY
/*Datamart Auditing variables*/
DECLARE @NEW_AUD_SKY BIGINT
DECLARE @NBR_OF_RW_ISRT INT
DECLARE @NBR_OF_RW_UDT INT
DECLARE @EXEC_LYR VARCHAR(255)
DECLARE @EXEC_JOB VARCHAR(500)
DECLARE @SRC_ENTY VARCHAR(500)
DECLARE @TGT_ENTY VARCHAR(500)

/*Audit Log Start*/
EXEC ETL.AUDIT_DATA_LOAD_START
 @EXEC_LYR  = 'DM'
,@EXEC_JOB  = 'PROC_DIM_BYR_P_SUB_CT_TABLELOAD'
,@SRC_ENTY  = 'DIM_BYR_P_SUB_CT_TMP'
,@TGT_ENTY = 'DIM_BYR_P_SUB_CT'
,@NEW_AUD_SKY = @NEW_AUD_SKY OUTPUT



;WITH CTE AS
(
SELECT
		 stg.BYR_HST_SKY
		,stg.BYR_SKY
		,stg.BYR_ID
		,stg.P_SUB_CT_ID
		,stg.P_SUB_CT_DSC
		,stg.GVP
		,stg.MGR
		,stg.VP
		,ISNULL(stg.BYR,'n/a') as BYR
		,stg.VLD_FROM
		,stg.VLD_TO
		,stg.IS_CURR

FROM  		dm_edw.DIM_BYR_P_SUB_CT_TMP stg
INNER JOIN 	DM.DIM_BYR_P_SUB_CT  dim
	ON 		stg.BYR_HST_SKY=dim.BYR_HST_SKY)

UPDATE dm.DIM_BYR_P_SUB_CT
SET
			BYR_HST_SKY		=	CTE.BYR_HST_SKY,
			BYR_SKY			=	CTE.BYR_SKY,
			BYR_ID			=	CTE.BYR_ID,
			P_SUB_CT_ID		=	CTE.P_SUB_CT_ID,
			P_SUB_CT_DSC	=	CTE.P_SUB_CT_DSC,
			GVP				=	CTE.GVP,
			MGR				=	CTE.MGR,
			VP				=	CTE.VP,
			BYR				=	CTE.BYR,
			VLD_FROM		=	CTE.VLD_FROM,
			VLD_TO			=	CTE.VLD_TO,
			IS_CURR			=	CTE.IS_CURR,
			ETL_ACT			=	'Update',
			AUD_UPD_SKY		=	@NEW_AUD_SKY

FROM 	CTE,	DM.DIM_BYR_P_SUB_CT DIM
WHERE  	CTE.BYR_HST_SKY= DIM.BYR_HST_SKY


INSERT INTO DM.DIM_BYR_P_SUB_CT
( BYR_HST_SKY ,
  BYR_SKY ,
  BYR_ID ,
  BYR ,
  P_SUB_CT_ID ,
  P_SUB_CT_DSC ,
  GVP ,
  MGR ,
  VP ,
  VLD_FROM ,
  VLD_TO ,
  IS_CURR ,
  IS_DMY ,
  IS_EMBR ,
  ETL_ACT ,
  AUD_INS_SKY ,
  AUD_UPD_SKY
)
SELECT
			 BYR_HST_SKY
			,BYR_SKY
			,BYR_ID
			,ISNULL(BYR,'n/a')
			,P_SUB_CT_ID
			,P_SUB_CT_DSC
			,GVP
			,MGR
			,VP
			,VLD_FROM
			,VLD_TO
			,IS_CURR
			,0 				AS IS_DMY
			,0 				AS IS_EMBR
			,'Insert' 		AS ETL_ACT
			,@NEW_AUD_SKY 	AS AUD_INS_KEY
			,NULL 			AS AUD_UPD_SKY

FROM 	dm_edw.DIM_BYR_P_SUB_CT_TMP
WHERE 	BYR_HST_SKY NOT IN(
SELECT 	BYR_HST_SKY FROM   dm.DIM_BYR_P_SUB_CT)


BEGIN
SELECT @NBR_OF_RW_ISRT = COUNT(1)  FROM dm.DIM_BYR_P_SUB_CT WHERE AUD_INS_SKY = @NEW_AUD_SKY
SELECT @NBR_OF_RW_UDT  = COUNT(1)  FROM dm.DIM_BYR_P_SUB_CT WHERE AUD_UPD_SKY = @NEW_AUD_SKY

END

/*Audit Log End*/
EXEC ETL.AUDIT_DATA_LOAD_END @AUD_SKY = @NEW_AUD_SKY, @NBR_OF_RW_ISRT = @NBR_OF_RW_ISRT, @NBR_OF_RW_UDT  = @NBR_OF_RW_UDT

END TRY

BEGIN CATCH
DECLARE @ERROR_PROCEDURE_NAME AS VARCHAR(60) = '[ETL].[PROC_DIM_BYR_P_SUB_CT_TABLELOAD]'
DECLARE @ERROR_LINE AS INT;
DECLARE @ERROR_MSG AS NVARCHAR(max);

 SELECT
      @ERROR_LINE =  ERROR_NUMBER()
       ,@ERROR_MSG = ERROR_MESSAGE();
--------- Log execution error ----------



EXEC [ETL].[LOG_AUD_ERR]
@AUD_SKY = @NEW_AUD_SKY,
@ERROR_PROCEDURE_NAME = @ERROR_PROCEDURE_NAME,
@ERROR_LINE = @ERROR_LINE,
@ERROR_MSG = @ERROR_MSG;


   THROW;




END CATCH
GO
