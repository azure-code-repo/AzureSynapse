
CREATE PROC [ETL].[PROC_DIM_CHNL_TABLELOAD] AS


BEGIN TRY
/*Datamart Auditing variables*/
DECLARE @NEW_AUD_SKY BIGINT
DECLARE @NBR_OF_RW_ISRT INT
DECLARE @NBR_OF_RW_UDT INT
DECLARE @EXEC_LYR VARCHAR(255)
DECLARE @EXEC_JOB VARCHAR(500)
DECLARE @SRC_ENTY VARCHAR(500)
DECLARE @TGT_ENTY VARCHAR(500)

/*Audit Log Start*/
EXEC ETL.AUDIT_DATA_LOAD_START
 @EXEC_LYR  = 'DM'
,@EXEC_JOB  = 'PROC_DIM_CHNL_TABLELOAD'
,@SRC_ENTY  = 'DIM_CHNL_TMP'
,@TGT_ENTY = 'DIM_CHNL'
,@NEW_AUD_SKY = @NEW_AUD_SKY OUTPUT



;WITH CTE AS
(
SELECT
				stg.CHNL_HST_SKY,
				stg.CHNL_SKY,
				stg.CHNL_BUS_KEY,
				stg.SHOP_CHNL_CT,
				stg.SHOP_CHNL_GRP_CT,
				stg.SHOP_CHNL_CLS_CT,
				stg.SHOP_CHNL_CLS_CT_NM,
				stg.MBL_SLF_CHKOT_CT,
				stg.MBL_SLF_CHKOT_DSC,
				stg.MPRKS,
				stg.MPRKS_TN_CT,
				stg.MPERKS_TN_DSC,
				stg.CHNL_DTL,
				stg.SHOP_CHNL,
				stg.SHOP_AND_SCN,
				stg.SHOP_AND_SCN_FLG,
				stg.DGTL_UT_FLG,
				stg.VLD_FROM,
				stg.VLD_TO,
				stg.IS_CURR
FROM  		DM_EDW.DIM_CHNL_TMP stg
INNER JOIN 	DM.DIM_CHNL  dim
	ON stg.CHNL_HST_SKY=dim.CHNL_HST_SKY)

UPDATE DM.DIM_CHNL
SET
			CHNL_HST_SKY		=	CTE.CHNL_HST_SKY,
			CHNL_SKY			=	CTE.CHNL_SKY,
			CHNL_BUS_KEY		=	CTE.CHNL_BUS_KEY,
			SHOP_CHNL_CT		=	CTE.SHOP_CHNL_CT,
			SHOP_CHNL_GRP_CT	=	CTE.SHOP_CHNL_GRP_CT,
			SHOP_CHNL_CLS_CT	=	CTE.SHOP_CHNL_CLS_CT,
			SHOP_CHNL_CLS_CT_NM	=	CTE.SHOP_CHNL_CLS_CT_NM,
			MBL_SLF_CHKOT_CT	=	CTE.MBL_SLF_CHKOT_CT,
			MBL_SLF_CHKOT_DSC	=	CTE.MBL_SLF_CHKOT_DSC,
			MPRKS				=	CTE.MPRKS,
			MPRKS_TN_CT			=	CTE.MPRKS_TN_CT,
			MPERKS_TN_DSC		=	CTE.MPERKS_TN_DSC,
			CHNL_DTL			=	CTE.CHNL_DTL,
			SHOP_CHNL			=	CTE.SHOP_CHNL,
			SHOP_AND_SCN		=	CTE.SHOP_AND_SCN,
			SHOP_AND_SCN_FLG	=	CTE.SHOP_AND_SCN_FLG,
			DGTL_UT_FLG			=	CTE.DGTL_UT_FLG,
			VLD_FROM			=	CTE.VLD_FROM,
			VLD_TO				=	CTE.VLD_TO,
			IS_CURR				=	CTE.IS_CURR,
			ETL_ACT				=	'Update',
			AUD_UPD_SKY			=	@NEW_AUD_SKY

FROM 	CTE,	DM.DIM_CHNL DIM1
WHERE  CTE.CHNL_HST_SKY= DIM1.CHNL_HST_SKY


INSERT INTO DM.DIM_CHNL

SELECT
			CHNL_HST_SKY,
			CHNL_SKY,
			CHNL_BUS_KEY,
			SHOP_CHNL_CT,
			SHOP_CHNL_GRP_CT,
			SHOP_CHNL_CLS_CT,
			SHOP_CHNL_CLS_CT_NM,
			MBL_SLF_CHKOT_CT,
			MBL_SLF_CHKOT_DSC,
			MPRKS,
			MPRKS_TN_CT,
			MPERKS_TN_DSC,
			CHNL_DTL,
			SHOP_CHNL,
			SHOP_AND_SCN,
			SHOP_AND_SCN_FLG,
			DGTL_UT_FLG,
			VLD_FROM,
			VLD_TO,
			IS_CURR,
			0 				AS IS_DMY,
			0 				AS IS_EMBR,
			'Insert' 		AS ETL_ACT,
			@NEW_AUD_SKY 	AS AUD_INS_KEY,
			NULL 			AS AUD_UPD_SKY

FROM dm_edw.DIM_CHNL_TMP
WHERE CHNL_HST_SKY NOT IN(
SELECT CHNL_HST_SKY FROM   DM.DIM_CHNL)


BEGIN
SELECT @NBR_OF_RW_ISRT = COUNT(1)  FROM DM.DIM_CHNL WHERE AUD_INS_SKY = @NEW_AUD_SKY
SELECT @NBR_OF_RW_UDT  = COUNT(1)  FROM DM.DIM_CHNL WHERE AUD_UPD_SKY = @NEW_AUD_SKY

END

/*Audit Log End*/
EXEC ETL.AUDIT_DATA_LOAD_END @AUD_SKY = @NEW_AUD_SKY, @NBR_OF_RW_ISRT = @NBR_OF_RW_ISRT, @NBR_OF_RW_UDT  = @NBR_OF_RW_UDT

END TRY

BEGIN CATCH
DECLARE @ERROR_PROCEDURE_NAME AS VARCHAR(60) = '[ETL].[PROC_DIM_CHNL_TABLELOAD]'
DECLARE @ERROR_LINE AS INT;
DECLARE @ERROR_MSG AS NVARCHAR(max);

 SELECT
      @ERROR_LINE =  ERROR_NUMBER()
       ,@ERROR_MSG = ERROR_MESSAGE();
--------- Log execution error ----------



EXEC [ETL].[LOG_AUD_ERR]
@AUD_SKY = @NEW_AUD_SKY,
@ERROR_PROCEDURE_NAME = @ERROR_PROCEDURE_NAME,
@ERROR_LINE = @ERROR_LINE,
@ERROR_MSG = @ERROR_MSG;


   THROW;




END CATCH
GO
