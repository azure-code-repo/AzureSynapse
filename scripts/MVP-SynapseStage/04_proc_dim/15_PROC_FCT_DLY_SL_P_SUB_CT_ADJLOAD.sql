CREATE PROC [ETL].[PROC_FCT_DLY_SL_P_SUB_CT_ADJLOAD] AS

BEGIN TRY

/*DATAMART AUDITING VARIABLES*/
DECLARE @NEW_AUD_SKY BIGINT ;
DECLARE @NBR_OF_RW_ISRT INT ;
DECLARE @NBR_OF_RW_UDT INT ;
DECLARE @EXEC_LYR VARCHAR(255) ;
DECLARE @EXEC_JOB VARCHAR(500) ;
DECLARE @SRC_ENTY VARCHAR(500) ;
DECLARE @TGT_ENTY VARCHAR(500) ;
DECLARE @ERROR_PROCEDURE_NAME AS VARCHAR(60) = 'ETL.PROC_FCT_DLY_SL_P_SUB_CT_ADJLOAD' ;
DECLARE @ERROR_LINE AS INT ;
DECLARE @ERROR_MSG AS NVARCHAR(max);



BEGIN

/*AUDIT LOG START*/
EXEC ETL.AUDIT_DATA_LOAD_START
 @EXEC_LYR  = 'DM'
,@EXEC_JOB  = 'DAILY SALES'
,@SRC_ENTY  = 'DLY_UT_MPRS_CT_HST_ADJ INCR'
,@TGT_ENTY = 'FCT_DLY_SL_P_SUB_CT'
,@NEW_AUD_SKY = @NEW_AUD_SKY OUTPUT

/****/


PRINT('LATEARRIVINGDIMENSION')

IF OBJECT_ID('TEMPDB..#LATEARRIVINGDIMENSIONFACTRECORDS') IS NOT NULL
DROP TABLE #LATEARRIVINGDIMENSIONFACTRECORDS

CREATE TABLE #LATEARRIVINGDIMENSIONFACTRECORDS
WITH
(
	DISTRIBUTION = ROUND_ROBIN
)
AS

SELECT DISTINCT

FACT_DATA_FEED.UT_ID,
CASE WHEN GEO.UT_ID IS NULL THEN 1 ELSE 0 END AS IS_GEO_MISSING ,
FACT_DATA_FEED.P_SUB_CT_ID,
CASE WHEN DMP.P_SUB_CT_ID IS NULL THEN 1 ELSE 0 END AS IS_DIM_P_L3_MISSING ,
CASE WHEN BYR.P_SUB_CT_ID IS NULL THEN 1 ELSE 0 END AS IS_BYR_MISSING
FROM
(SELECT
DISTINCT
UT_ID,
MJR_P_SUB_CT_ID AS P_SUB_CT_ID
FROM       STG.DLY_UT_MPRS_CT_HST_ADJ AA
INNER  JOIN (
			SELECT 	PKY_ID,
					MPRS_CT_ID,
					MJR_P_SUB_CT_ID
			FROM  DM_EDW.BYR_EMP_PKY_MPRS_CURRPREV_INF
			WHERE CAST(INS_DT AS DATE) = (SELECT CAST(MAX(INS_DT) AS DATE) AS INS_DT
			FROM DM_EDW.BYR_EMP_PKY_MPRS_CURRPREV_INF)
			) AS B
ON         B.PKY_ID=AA.PKY_ID
AND        B.MPRS_CT_ID=AA.MPRS_CATG_ID
WHERE MJR_P_SUB_CT_ID<>''

) AS FACT_DATA_FEED

LEFT JOIN (SELECT 		P_SUB_CT_ID
			FROM 		DM.DIM_BYR_P_SUB_CT
			WHERE 		IS_CURR<>0
			) AS BYR
	ON BYR.P_SUB_CT_ID  = FACT_DATA_FEED.P_SUB_CT_ID

LEFT JOIN (SELECT 		P_SUB_CT_ID
			FROM 		PRES.DIM_P_L3
			WHERE 		IS_CURR<>0
			) AS DMP
	ON DMP.P_SUB_CT_ID  = FACT_DATA_FEED.P_SUB_CT_ID


LEFT  JOIN	(SELECT
						UT_ID
			FROM 		DM.DIM_GEO
			WHERE 		IS_CURR<>0
					) AS GEO
	ON GEO.UT_ID = FACT_DATA_FEED.UT_ID

WHERE (GEO.UT_ID IS NULL  OR DMP.P_SUB_CT_ID IS NULL  OR BYR.P_SUB_CT_ID IS NULL)



DECLARE @NEXT_GEO_HST_SKY INT
SELECT @NEXT_GEO_HST_SKY =ISNULL(MAX(GEO_HST_SKY),0)   FROM DM.DIM_GEO



PRINT('LATEARRIVINGDIMENSION: DIM_GEO LOAD')

IF(@NEXT_GEO_HST_SKY IS NOT NULL)
BEGIN


INSERT INTO DM.DIM_GEO

SELECT
		   (ROW_NUMBER() OVER (ORDER BY UT_ID)) + @NEXT_GEO_HST_SKY 		AS GEO_HST_SKY
		  ,(ROW_NUMBER() OVER (ORDER BY UT_ID)) + @NEXT_GEO_HST_SKY  		AS GEO_SKY
		  ,CONVERT(INTEGER,UT_ID)   								 		AS UT_ID
		  ,CONVERT(VARCHAR(5),'N/A')		UT_DSC
		  ,CONVERT(INTEGER,0)				UNIT_SQF
		  ,CONVERT(VARCHAR(5),'N/A')		RGN
		  ,CONVERT(VARCHAR(5),'N/A')		OPR_MKT
		  ,CONVERT(DECIMAL,0)				UT_LNGT
		  ,CONVERT(DECIMAL,0)				UT_LAT
		  ,CONVERT(INTEGER,-1)				ST_CLS_ID
		  ,CONVERT(VARCHAR(5),'N/A')		ST_CLS
		  ,CONVERT(VARCHAR(5),'N/A')		ST
		  ,CONVERT(VARCHAR(5),'N/A')		CNTY
		  ,CONVERT(VARCHAR(5),'N/A')		CITY
		  ,CONVERT(VARCHAR(5),'N/A')		ZIP
		  ,CONVERT(VARCHAR(5),'N/A')		DIV_ID
		  ,CONVERT(VARCHAR(5),'N/A')		DIV_NM
		  ,CONVERT(INTEGER,0)				NW_STO_TY_FLG
		  ,CONVERT(INTEGER,0)				NW_STO_LY_FLG
		  ,CONVERT(INTEGER,0)				NW_STO_2LY_FLG
		  ,GETDATE()						VLD_FROM
		  ,CAST('2099-01-01' AS DATE)		VLD_TO
		  ,CAST(1 AS BIT)					IS_CURR
		  ,CAST(0 AS BIT)					IS_DMY
		  ,CAST(1 AS BIT)					IS_EMBR
		  ,'INSERT'							ETL_ACT
		  ,@NEW_AUD_SKY						AUD_INS_SKY
		  ,NULL								AUD_UPD_SKY

FROM
	(
	SELECT
			DISTINCT UT_ID
	FROM #LATEARRIVINGDIMENSIONFACTRECORDS
	WHERE 	IS_GEO_MISSING = 1
	) AS GEO_MISSING
	WHERE 	NOT EXISTS
	(
	SELECT 1 FROM DM.DIM_GEO DIM
	WHERE
	GEO_MISSING.UT_ID = DIM.UT_ID
	)


END


DECLARE @NEXT_BYR_HST_SKY INT
SELECT @NEXT_BYR_HST_SKY =ISNULL(MAX(BYR_HST_SKY),0)   FROM DM.DIM_BYR_P_SUB_CT



PRINT('LATEARRIVINGDIMENSION: DIM_BYR_P_SUB_CT LOAD')

IF(@NEXT_BYR_HST_SKY IS NOT NULL)
BEGIN


INSERT INTO DM.DIM_BYR_P_SUB_CT

SELECT
		   (ROW_NUMBER() OVER (ORDER BY P_SUB_CT_ID)) + @NEXT_BYR_HST_SKY 		AS BYR_HST_SKY
		  ,(ROW_NUMBER() OVER (ORDER BY P_SUB_CT_ID)) + @NEXT_BYR_HST_SKY  		AS BYR_SKY
		  ,CONVERT(INTEGER,-2)    			BYR_ID
		  ,CONVERT(VARCHAR(255),'N/A')  	BYR
		  ,CONVERT(VARCHAR(10),P_SUB_CT_ID)   								 	AS P_SUB_CT_ID
		  ,CONVERT(VARCHAR(40),'N/A') 	  	P_SUB_CT_DSC
		  ,CONVERT(VARCHAR(10),'N/A')  	  	GVP
		  ,CONVERT(VARCHAR(60),'N/A') 	  	MGR
		  ,CONVERT(VARCHAR(10),'N/A') 	  	VP
		  ,GETDATE()						VLD_FROM
		  ,CAST('2099-01-01' AS DATE)		VLD_TO
		  ,CAST(1 AS BIT)					IS_CURR
		  ,CAST(0 AS BIT)					IS_DUMMY
		  ,CAST(1 AS BIT)					IS_EMBR
		  ,'INSERT'							ETL_ACT
		  ,@NEW_AUD_SKY						AUD_INS_SKY
		  ,NULL								AUD_UPD_SKY

FROM
	(
	SELECT
			DISTINCT P_SUB_CT_ID
	FROM #LATEARRIVINGDIMENSIONFACTRECORDS
	WHERE 	IS_BYR_MISSING = 1
	) AS BYR_MISSING
	WHERE 	NOT EXISTS
	(
	SELECT 1 FROM DM.DIM_BYR_P_SUB_CT DIM
	WHERE
	BYR_MISSING.P_SUB_CT_ID = DIM.P_SUB_CT_ID
	)


END



DECLARE @NEXT_P_HST_SKY INT
SELECT @NEXT_P_HST_SKY=ISNULL(MAX(P_HST_SKY),0)   FROM PRES.DIM_P_L3



PRINT('LATEARRIVINGDIMENSION: DIM_P_L3 LOAD')

IF(@NEXT_P_HST_SKY IS NOT NULL)
BEGIN


INSERT INTO PRES.DIM_P_L3

SELECT
		   (ROW_NUMBER() OVER (ORDER BY P_SUB_CT_ID)) + @NEXT_P_HST_SKY 		AS P_HST_SKY
		  ,(ROW_NUMBER() OVER (ORDER BY P_SUB_CT_ID)) + @NEXT_P_HST_SKY  		AS P_SKY
		  ,CONVERT(VARCHAR(10),P_SUB_CT_ID)   								 	AS P_SUB_CT_ID
		  ,CONVERT(VARCHAR(40),'N/A') 	  	P_SUB_CT_DSC
		  ,CONVERT(VARCHAR(255),'N/A')   	P_CT_ID
		  ,CONVERT(VARCHAR(255),'N/A')  	P_CT_DSC
		  ,CONVERT(VARCHAR(255),'N/A')		BUS_SEG_ID
		  ,CONVERT(VARCHAR(255),'N/A')		BUS_SEG_DSC
		  ,CONVERT(VARCHAR(255),'N/A')		MDS_ARE_ID
		  ,CONVERT(VARCHAR(255),'N/A')		MDS_ARE_DSC
		  ,CONVERT(INTEGER,0)  	  	FNC_MPRS_CT_ID
		  ,CONVERT(VARCHAR(60),'N/A') 	  	FNC_MPRS_CT_DSC
		  ,CONVERT(INTEGER,0)				FNC_PKY_ID
		  ,CONVERT(VARCHAR(60),'N/A')		FNC_PKY_DSC
		  ,CONVERT(VARCHAR(60),'N/A')		FNC_ARE_ID
		  ,CONVERT(VARCHAR(60),'N/A')		FNC_ARE_DSC
		  ,GETDATE()						VLD_FROM
		  ,CAST('2099-01-01' AS DATE)		VLD_TO
		  ,CAST(1 AS BIT)					IS_CURR
		  ,CAST(0 AS BIT)					IS_DUMMY
		  ,CAST(1 AS BIT)					IS_EMBR
		  ,'INSERT'							ETL_ACT
		  ,@NEW_AUD_SKY						AUD_INS_SKY
		  ,NULL								AUD_UPD_SKY

FROM
	(
	SELECT
			DISTINCT P_SUB_CT_ID
	FROM #LATEARRIVINGDIMENSIONFACTRECORDS
	WHERE 	IS_DIM_P_L3_MISSING = 1
	) AS DIM_P_L3_MISSING
	WHERE 	NOT EXISTS
	(
	SELECT 1 FROM PRES.DIM_P_L3 DIM
	WHERE
	DIM_P_L3_MISSING.P_SUB_CT_ID = DIM.P_SUB_CT_ID
	)


END







;WITH NEWDATA AS
(SELECT
        B.MJR_P_SUB_CT_ID AS P_SUB_CT_ID,
        AA.UT_ID ,
        AA.DAY_DT ,
		CAST(B.PKY_ID AS SMALLINT) AS FNC_PKY_ID,
		CAST(B.MPRS_CT_ID AS SMALLINT) AS FNC_MPRS_CT_ID,
		ISNULL(GEO_HST_SKY, -1) AS GEO_HST_SKY,
		TM_SKY,
		ISNULL(BYR_HST_SKY, -1) AS BYR_HST_SKY,
        SUM(AA.TG_SL_AM)                    AS SLS_FNC_AM ,
        SUM(AA.TG_SL_QT)                    AS SLS_FNC_QTY ,
        SUM(AA.TG_DMGN_AM)                  AS DM_FNC_AM ,
        SUM(AA.TG_PTS_AM)                   AS SLS_FNC_PROMO_AM ,
        SUM(AA.TG_PTS_DMGN_AM)              AS DM_FNC_PROMO_AM ,
        SUM(AA.TG_PTS_MKDN_AM)              AS SLS_FNC_PROMO_MKDN_AM ,
        SUM(AA.TG_CLRN_AM)                  AS SLS_FNC_CLRN_AM ,
        SUM(AA.TG_CLRN_DMGN_AM)             AS DM_FNC_CLRN_AM ,
        SUM(AA.TG_CLRN_MKDN_AM)             AS SLS_FNC_CLRN_MKDN_AM ,
        SUM(AA.TG_CLRN_QT)                  AS SLS_FNC_CLRN_QTY ,
        SUM(AA.TG_SCN_QT)                   AS SLS_FNC_SCN_QTY ,

		SUM(CASE WHEN ST_CLS = 'COMP STORE' THEN  TG_SL_AM ELSE 0 END)  AS SLS_FNC_COMP,
		SUM(CASE WHEN ST_CLS = 'NON-COMP STORE' THEN  TG_SL_AM ELSE 0 END)  AS SLS_FNC_NCOMP

		FROM       STG.DLY_UT_MPRS_CT_HST_ADJ         AS AA
            INNER JOIN (
					               SELECT PKY_ID, MPRS_CT_ID, MJR_P_SUB_CT_ID
					               FROM  DM_EDW.BYR_EMP_PKY_MPRS_CURRPREV_INF
								   WHERE CAST(INS_DT AS DATE) = (SELECT CAST(MAX(INS_DT) AS DATE) AS INS_DT FROM DM_EDW.BYR_EMP_PKY_MPRS_CURRPREV_INF)
						) AS B
        ON         B.PKY_ID=AA.PKY_ID
        AND        B.MPRS_CT_ID=AA.MPRS_CATG_ID

		LEFT JOIN
		(SELECT GEO_HST_SKY, UT_ID, ST_CLS, VLD_FROM, VLD_TO FROM DM.DIM_GEO 	) AS DIMGEO
		ON CAST(DIMGEO.UT_ID AS VARCHAR(5)) = CAST(AA.UT_ID AS VARCHAR(5))
		AND AA.DAY_DT BETWEEN DIMGEO.VLD_FROM AND ISNULL(DIMGEO.VLD_TO, CAST('2099-01-01' AS DATE))

		LEFT JOIN
		DM.DIM_TM AS TM ON TM.DAY_DT = AA.DAY_DT
		LEFT JOIN
		(SELECT BYR_HST_SKY, P_SUB_CT_ID, VLD_FROM, VLD_TO   FROM DM.DIM_BYR_P_SUB_CT ) AS BYR
	ON BYR.P_SUB_CT_ID  = B.MJR_P_SUB_CT_ID AND AA.DAY_DT BETWEEN BYR.VLD_FROM AND ISNULL(BYR.VLD_TO, CAST('2099-01-01' AS DATE))

GROUP BY B.MJR_P_SUB_CT_ID ,
        AA.UT_ID ,
        AA.DAY_DT ,
		CAST(B.PKY_ID AS SMALLINT) ,
		CAST(B.MPRS_CT_ID AS SMALLINT),
		ISNULL(GEO_HST_SKY, -1) ,
		TM_SKY,
		ISNULL(BYR_HST_SKY, -1) )



UPDATE DM.FCT_DLY_SL_P_SUB_CT  SET
	SLS_FNC_AM = TARGET.SLS_FNC_AM + SOURCE.SLS_FNC_AM,
	SLS_FNC_QTY = TARGET.SLS_FNC_QTY + SOURCE.SLS_FNC_QTY,
    DM_FNC_AM = TARGET.DM_FNC_AM + SOURCE.DM_FNC_AM ,
    SLS_FNC_PROMO_AM = TARGET.SLS_FNC_PROMO_AM + SOURCE.SLS_FNC_PROMO_AM,
    DM_FNC_PROMO_AM = TARGET.DM_FNC_PROMO_AM + SOURCE.DM_FNC_PROMO_AM,
    SLS_FNC_PROMO_MKDN_AM = TARGET.SLS_FNC_PROMO_MKDN_AM + SOURCE.SLS_FNC_PROMO_MKDN_AM,
    SLS_FNC_CLRN_AM = TARGET.SLS_FNC_CLRN_AM + SOURCE.SLS_FNC_CLRN_AM ,
    DM_FNC_CLRN_AM = TARGET.DM_FNC_CLRN_AM + SOURCE.DM_FNC_CLRN_AM,
    SLS_FNC_CLRN_MKDN_AM = TARGET.SLS_FNC_CLRN_MKDN_AM + SOURCE.SLS_FNC_CLRN_MKDN_AM,
    SLS_FNC_CLRN_QTY = TARGET.SLS_FNC_CLRN_QTY + SOURCE.SLS_FNC_CLRN_QTY,
    SLS_FNC_SCN_QTY = TARGET.SLS_FNC_SCN_QTY + SOURCE.SLS_FNC_SCN_QTY ,
	SLS_FNC_AM_COMP = TARGET.SLS_FNC_AM_COMP + SOURCE.SLS_FNC_COMP ,
	SLS_FNC_AM_NCOMP = TARGET.SLS_FNC_AM_NCOMP + SOURCE.SLS_FNC_NCOMP,
	AUD_UPD_SKY = @NEW_AUD_SKY
FROM DM.FCT_DLY_SL_P_SUB_CT AS TARGET
JOIN NEWDATA AS SOURCE
ON (TARGET.P_SUB_CT_ID = SOURCE.P_SUB_CT_ID AND
	TARGET.UT_ID = SOURCE.UT_ID AND
	TARGET.TM_SKY = SOURCE.TM_SKY AND
    TARGET.FNC_PKY_ID = SOURCE.FNC_PKY_ID AND
	TARGET.FNC_MPRS_CT_ID = SOURCE.FNC_MPRS_CT_ID )

;



WITH NEWDATA AS
(SELECT
        B.MJR_P_SUB_CT_ID AS P_SUB_CT_ID,
        AA.UT_ID ,
        AA.DAY_DT ,
		CAST(B.PKY_ID AS SMALLINT) AS FNC_PKY_ID,
		CAST(B.MPRS_CT_ID AS SMALLINT) AS FNC_MPRS_CT_ID,
		ISNULL(GEO_HST_SKY, -1) AS GEO_HST_SKY,
		TM_SKY,
		ISNULL(BYR_HST_SKY, -1) AS BYR_HST_SKY,
        SUM(AA.TG_SL_AM)                    AS SLS_FNC_AM ,
        SUM(AA.TG_SL_QT)                    AS SLS_FNC_QTY ,
        SUM(AA.TG_DMGN_AM)                  AS DM_FNC_AM ,
        SUM(AA.TG_PTS_AM)                   AS SLS_FNC_PROMO_AM ,
        SUM(AA.TG_PTS_DMGN_AM)              AS DM_FNC_PROMO_AM ,
        SUM(AA.TG_PTS_MKDN_AM)              AS SLS_FNC_PROMO_MKDN_AM ,
        SUM(AA.TG_CLRN_AM)                  AS SLS_FNC_CLRN_AM ,
        SUM(AA.TG_CLRN_DMGN_AM)             AS DM_FNC_CLRN_AM ,
        SUM(AA.TG_CLRN_MKDN_AM)             AS SLS_FNC_CLRN_MKDN_AM ,
        SUM(AA.TG_CLRN_QT)                  AS SLS_FNC_CLRN_QTY ,
        SUM(AA.TG_SCN_QT)                   AS SLS_FNC_SCN_QTY ,

		SUM(CASE WHEN ST_CLS = 'COMP STORE' THEN  TG_SL_AM ELSE 0 END)  AS SLS_FNC_COMP,
		SUM(CASE WHEN ST_CLS = 'NON-COMP STORE' THEN  TG_SL_AM ELSE 0 END)  AS SLS_FNC_NCOMP

		FROM       STG.DLY_UT_MPRS_CT_HST_ADJ         AS AA
            INNER JOIN (
					               SELECT PKY_ID, MPRS_CT_ID, MJR_P_SUB_CT_ID
					               FROM  DM_EDW.BYR_EMP_PKY_MPRS_CURRPREV_INF
								   WHERE CAST(INS_DT AS DATE) = (SELECT CAST(MAX(INS_DT) AS DATE) AS INS_DT FROM DM_EDW.BYR_EMP_PKY_MPRS_CURRPREV_INF)
						) AS B
        ON         B.PKY_ID=AA.PKY_ID
        AND        B.MPRS_CT_ID=AA.MPRS_CATG_ID

		LEFT JOIN
		(SELECT GEO_HST_SKY, UT_ID, ST_CLS, VLD_FROM, VLD_TO FROM DM.DIM_GEO 	) AS DIMGEO
		ON CAST(DIMGEO.UT_ID AS VARCHAR(5)) = CAST(AA.UT_ID AS VARCHAR(5))
		AND AA.DAY_DT BETWEEN DIMGEO.VLD_FROM AND ISNULL(DIMGEO.VLD_TO, CAST('2099-01-01' AS DATE))

		LEFT JOIN
		DM.DIM_TM AS TM ON TM.DAY_DT = AA.DAY_DT
		LEFT JOIN
		(SELECT BYR_HST_SKY, P_SUB_CT_ID, VLD_FROM, VLD_TO   FROM DM.DIM_BYR_P_SUB_CT ) AS BYR
	ON BYR.P_SUB_CT_ID  = B.MJR_P_SUB_CT_ID AND AA.DAY_DT BETWEEN BYR.VLD_FROM AND ISNULL(BYR.VLD_TO, CAST('2099-01-01' AS DATE))

GROUP BY B.MJR_P_SUB_CT_ID ,
        AA.UT_ID ,
        AA.DAY_DT ,
		CAST(B.PKY_ID AS SMALLINT) ,
		CAST(B.MPRS_CT_ID AS SMALLINT),
		ISNULL(GEO_HST_SKY, -1) ,
		TM_SKY,
		ISNULL(BYR_HST_SKY, -1) )

INSERT INTO DM.FCT_DLY_SL_P_SUB_CT  (
	P_SUB_CT_ID,
	UT_ID,
	FNC_PKY_ID,
	FNC_MPRS_CT_ID,
	GEO_HST_SKY,
	TM_SKY,
    BYR_HST_SKY,
	SLS_FNC_AM,
	SLS_FNC_QTY,
	DM_FNC_AM,
	SLS_FNC_PROMO_AM,
	DM_FNC_PROMO_AM,
	SLS_FNC_PROMO_MKDN_AM,
	SLS_FNC_CLRN_AM,
	DM_FNC_CLRN_AM,
	SLS_FNC_CLRN_MKDN_AM,
	SLS_FNC_CLRN_QTY,
	SLS_FNC_SCN_QTY,
	SLS_FNC_AM_COMP,
	SLS_FNC_AM_NCOMP,
	AUD_INS_SKY )

	SELECT
	P_SUB_CT_ID,
	UT_ID,
	FNC_PKY_ID,
	FNC_MPRS_CT_ID,
	GEO_HST_SKY,
	TM_SKY,
    BYR_HST_SKY,
	SLS_FNC_AM,
	SLS_FNC_QTY,
	DM_FNC_AM,
	SLS_FNC_PROMO_AM,
	DM_FNC_PROMO_AM,
	SLS_FNC_PROMO_MKDN_AM,
	SLS_FNC_CLRN_AM,
	DM_FNC_CLRN_AM,
	SLS_FNC_CLRN_MKDN_AM,
	SLS_FNC_CLRN_QTY,
	SLS_FNC_SCN_QTY,
	SLS_FNC_COMP,
	SLS_FNC_NCOMP ,
	@NEW_AUD_SKY      AS AUD_INS_SKY
	FROM NEWDATA AS SOURCE
	WHERE NOT EXISTS ( 	SELECT 1 FROM 	DM.FCT_DLY_SL_P_SUB_CT AS TARGET WHERE
			(TARGET.P_SUB_CT_ID = SOURCE.P_SUB_CT_ID AND
			TARGET.UT_ID = SOURCE.UT_ID AND
			TARGET.TM_SKY = SOURCE.TM_SKY AND
			TARGET.FNC_PKY_ID = SOURCE.FNC_PKY_ID AND
			TARGET.FNC_MPRS_CT_ID = SOURCE.FNC_MPRS_CT_ID ) )
;


BEGIN


SELECT @NBR_OF_RW_ISRT = COUNT(1)  FROM DM.FCT_DLY_SL_P_SUB_CT WHERE AUD_INS_SKY = @NEW_AUD_SKY
SELECT @NBR_OF_RW_UDT = COUNT(1)  FROM DM.FCT_DLY_SL_P_SUB_CT WHERE AUD_UPD_SKY = @NEW_AUD_SKY



END



/*AUDIT LOG END*/
EXEC ETL.AUDIT_DATA_LOAD_END @AUD_SKY = @NEW_AUD_SKY, @NBR_OF_RW_ISRT = @NBR_OF_RW_ISRT, @NBR_OF_RW_UDT  = @NBR_OF_RW_UDT



END

END TRY

BEGIN CATCH

    SELECT
      @ERROR_LINE =  ERROR_NUMBER()
       ,@ERROR_MSG = ERROR_MESSAGE();
--------- Log execution error ----------

EXEC [ETL].[LOG_AUD_ERR]
@AUD_SKY = @NEW_AUD_SKY,
@ERROR_PROCEDURE_NAME = @ERROR_PROCEDURE_NAME,
@ERROR_LINE = @ERROR_LINE,
@ERROR_MSG = @ERROR_MSG
;

   THROW;


  END CATCH

GO
