
CREATE PROC [ETL].[PROC_DIM_P_L3_TABLELOAD] AS


BEGIN try

/*Datamart Auditing variables*/
DECLARE @NEW_AUD_SKY BIGINT
DECLARE @NBR_OF_RW_ISRT INT
DECLARE @NBR_OF_RW_UDT INT
DECLARE @EXEC_LYR VARCHAR(255)
DECLARE @EXEC_JOB VARCHAR(500)
DECLARE @SRC_ENTY VARCHAR(500)
DECLARE @TGT_ENTY VARCHAR(500)

/*Audit Log Start*/
EXEC ETL.AUDIT_DATA_LOAD_START
 @EXEC_LYR  = 'PRES'
,@EXEC_JOB  = 'PROC_DIM_P_L3_TABLELOAD'
,@SRC_ENTY  = 'DIM_P_L3_TMP'
,@TGT_ENTY = 'DIM_P_L3'
,@NEW_AUD_SKY = @NEW_AUD_SKY OUTPUT




BEGIN

;WITH CTE AS
(
SELECT

		 stg.P_HST_SKY
		,stg.P_SKY
		,stg.P_SUB_CT_ID
        ,stg.P_SUB_CT_DSC
		,stg.P_CT_ID
		,stg.P_CT_DSC
		,stg.BUS_SEG_ID
		,stg.BUS_SEG_DSC
		,stg.MDS_ARE_ID
		,stg.MDS_ARE_DSC
		,stg.FNC_MPRS_CT_ID
		,stg.FNC_MPRS_CT_DSC
		,stg.FNC_PKY_ID
		,stg.FNC_PKY_DSC
		,stg.FNC_ARE_ID
		,stg.FNC_ARE_DSC
		,stg.VLD_FROM
		,stg.VLD_TO
		,stg.IS_CURR
		,stg.IS_DMY
		,stg.IS_EMBR
FROM  DM_EDW.DIM_P_L3_TMP stg
INNER JOIN PRES.DIM_P_L3  dim
ON stg.P_HST_SKY=dim.P_HST_SKY)

UPDATE PRES.DIM_P_L3
SET
		 P_HST_SKY = CTE.P_HST_SKY
		,P_SKY 	= CTE.P_SKY
		,P_SUB_CT_ID 		= CTE.P_SUB_CT_ID
		,P_SUB_CT_DSC     =    CTE.P_SUB_CT_DSC
		,P_CT_ID      =    CTE.P_CT_ID
		,P_CT_DSC        =    CTE.P_CT_DSC
		,BUS_SEG_ID          =    CTE.BUS_SEG_ID
		,BUS_SEG_DSC         =    CTE.BUS_SEG_DSC
		,MDS_ARE_ID        =    CTE.MDS_ARE_ID
		,MDS_ARE_DSC  = CTE.MDS_ARE_DSC
		,FNC_MPRS_CT_ID   =    CTE.FNC_MPRS_CT_ID
		,FNC_MPRS_CT_DSC      =    CTE.FNC_MPRS_CT_DSC
		,FNC_PKY_ID = CTE.FNC_PKY_ID
		,FNC_PKY_DSC    = CTE.FNC_PKY_DSC
		,FNC_ARE_ID     = CTE.FNC_ARE_ID
		,FNC_ARE_DSC    = CTE.FNC_ARE_DSC
		,VLD_FROM 	= CTE.VLD_FROM
		,VLD_TO 		= CTE.VLD_TO
		,IS_CURR 	= CTE.IS_CURR
		,IS_DMY 		= CTE.IS_DMY
		,IS_EMBR 	= CTE.IS_EMBR
		,ETL_ACT		='Update'
		,AUD_UPD_SKY=@NEW_AUD_SKY

FROM CTE,PRES.DIM_P_L3 DIM1
WHERE  CTE.P_HST_SKY= DIM1.P_HST_SKY


INSERT INTO PRES.DIM_P_L3

SELECT
		P_HST_SKY 	,
		P_SKY 		,
		P_SUB_CT_ID 			,
		P_SUB_CT_DSC                 ,
		P_CT_ID                  ,
		P_CT_DSC                    ,
		BUS_SEG_ID                      ,
		BUS_SEG_DSC                     ,
		MDS_ARE_ID                    ,
		MDS_ARE_DSC           ,
		FNC_MPRS_CT_ID               ,
		FNC_MPRS_CT_DSC                  ,
		FNC_PKY_ID         ,
		FNC_PKY_DSC             ,
		FNC_ARE_ID              ,
		FNC_ARE_DSC             ,
		VLD_FROM 		,
		VLD_TO 			,
		IS_CURR 		,
		IS_DMY 			,
		IS_EMBR 		,
		'Insert' 		AS ETL_ACT		,
		@NEW_AUD_SKY	AS AUD_INS_SKY	,
		NULL 			AS AUD_UPD_SKY

 FROM dm_edw.DIM_P_L3_TMP
WHERE P_HST_SKY NOT IN(
SELECT P_HST_SKY FROM   PRES.DIM_P_L3)


SELECT @NBR_OF_RW_ISRT = COUNT(1)  FROM [PRES].DIM_P_L3
WHERE [AUD_INS_SKY] = @NEW_AUD_SKY
SELECT @NBR_OF_RW_UDT = COUNT(1)  FROM [PRES].DIM_P_L3
WHERE [AUD_UPD_SKY] = @NEW_AUD_SKY

END

/*Audit Log End*/
EXEC ETL.AUDIT_DATA_LOAD_END @AUD_SKY = @NEW_AUD_SKY, @NBR_OF_RW_ISRT = @NBR_OF_RW_ISRT, @NBR_OF_RW_UDT  = @NBR_OF_RW_UDT

END TRY

BEGIN CATCH
DECLARE @ERROR_PROCEDURE_NAME AS VARCHAR(60) = '[ETL].[PROC_DIM_P_L3_TABLELOAD]'
DECLARE @ERROR_LINE AS INT;
DECLARE @ERROR_MSG AS NVARCHAR(max);

 SELECT
      @ERROR_LINE =  ERROR_NUMBER()
       ,@ERROR_MSG = ERROR_MESSAGE();
--------- Log execution error ----------



EXEC [ETL].[LOG_AUD_ERR]
@AUD_SKY = @NEW_AUD_SKY,
@ERROR_PROCEDURE_NAME = @ERROR_PROCEDURE_NAME,
@ERROR_LINE = @ERROR_LINE,
@ERROR_MSG = @ERROR_MSG;


   THROW;




END CATCH

GO
